{"ast":null,"code":"/*\r\n * Copyright (C) 2007-2019 Diego Perini\r\n * All rights reserved.\r\n *\r\n * nwsapi.js - Fast CSS Selectors API Engine\r\n *\r\n * Author: Diego Perini <diego.perini at gmail com>\r\n * Version: 2.2.0\r\n * Created: 20070722\r\n * Release: 20191102\r\n *\r\n * License:\r\n *  http://javascript.nwbox.com/nwsapi/MIT-LICENSE\r\n * Download:\r\n *  http://javascript.nwbox.com/nwsapi/nwsapi.js\r\n */\n(function Export(global, factory) {\n  'use strict';\n\n  if (typeof module == 'object' && typeof exports == 'object') {\n    module.exports = factory;\n  } else if (typeof define == 'function' && define['amd']) {\n    define(factory);\n  } else {\n    global.NW || (global.NW = {});\n    global.NW.Dom = factory(global, Export);\n  }\n})(this, function Factory(global, Export) {\n  var version = 'nwsapi-2.2.0',\n      doc = global.document,\n      root = doc.documentElement,\n      slice = Array.prototype.slice,\n      WSP = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n      CFG = {\n    // extensions\n    operators: '[~*^$|]=|=',\n    combinators: '[\\\\x20\\\\t>+~](?=[^>+~])'\n  },\n      NOT = {\n    // not enclosed in double/single/parens/square\n    double_enc: '(?=(?:[^\"]*[\"][^\"]*[\"])*[^\"]*$)',\n    single_enc: \"(?=(?:[^']*['][^']*['])*[^']*$)\",\n    parens_enc: '(?![^\\\\x28]*\\\\x29)',\n    square_enc: '(?![^\\\\x5b]*\\\\x5d)'\n  },\n      REX = {\n    // regular expressions\n    HasEscapes: RegExp('\\\\\\\\'),\n    HexNumbers: RegExp('^[0-9a-fA-F]'),\n    EscOrQuote: RegExp('^\\\\\\\\|[\\\\x22\\\\x27]'),\n    RegExpChar: RegExp('(?:(?!\\\\\\\\)[\\\\\\\\^$.*+?()[\\\\]{}|\\\\/])', 'g'),\n    TrimSpaces: RegExp('[\\\\r\\\\n\\\\f]|^' + WSP + '+|' + WSP + '+$', 'g'),\n    CommaGroup: RegExp('(\\\\s*,\\\\s*)' + NOT.square_enc + NOT.parens_enc, 'g'),\n    SplitGroup: RegExp('((?:\\\\x28[^\\\\x29]*\\\\x29|\\\\[[^\\\\]]*\\\\]|\\\\\\\\.|[^,])+)', 'g'),\n    FixEscapes: RegExp('\\\\\\\\([0-9a-fA-F]{1,6}' + WSP + '?|.)|([\\\\x22\\\\x27])', 'g'),\n    CombineWSP: RegExp('[\\\\n\\\\r\\\\f\\\\x20]+' + NOT.single_enc + NOT.double_enc, 'g'),\n    TabCharWSP: RegExp('(\\\\x20?\\\\t+\\\\x20?)' + NOT.single_enc + NOT.double_enc, 'g'),\n    PseudosWSP: RegExp('\\\\s+([-+])\\\\s+' + NOT.square_enc, 'g')\n  },\n      STD = {\n    combinator: RegExp('\\\\s?([>+~])\\\\s?', 'g'),\n    apimethods: RegExp('^(?:[a-z]+|\\\\*)\\\\|', 'i'),\n    namespaces: RegExp('(\\\\*|[a-z]+)\\\\|[-a-z]+', 'i')\n  },\n      GROUPS = {\n    // pseudo-classes requiring parameters\n    linguistic: '(dir|lang)\\\\x28\\\\s?([-\\\\w]{2,})\\\\s?(?:\\\\x29|$)',\n    logicalsel: '(matches|not)\\\\x28\\\\s?([^()]*|[^\\\\x28]*\\\\x28[^\\\\x29]*\\\\x29)\\\\s?(?:\\\\x29|$)',\n    treestruct: '(nth(?:-last)?(?:-child|-of-type))(?:\\\\x28\\\\s?(even|odd|(?:[-+]?\\\\d*)(?:n\\\\s?[-+]?\\\\s?\\\\d*)?)\\\\s?(?:\\\\x29|$))',\n    // pseudo-classes not requiring parameters\n    locationpc: '(link|visited|target)\\\\b',\n    useraction: '(hover|active|focus|focus-within)\\\\b',\n    structural: '(root|empty|(?:(?:first|last|only)(?:-child|-of-type)))\\\\b',\n    inputstate: '(enabled|disabled|read-only|read-write|placeholder-shown|default)\\\\b',\n    inputvalue: '(checked|indeterminate|required|optional|valid|invalid|in-range|out-of-range)\\\\b',\n    // pseudo-elements starting with single colon (:)\n    pseudo_sng: '(after|before|first-letter|first-line)\\\\b',\n    // pseudo-elements starting with double colon (::)\n    pseudo_dbl: ':(after|before|first-letter|first-line|selection|placeholder|-webkit-[-a-zA-Z0-9]{2,})\\\\b'\n  },\n      Patterns = {\n    // pseudo-classes\n    treestruct: RegExp('^:(?:' + GROUPS.treestruct + ')(.*)', 'i'),\n    structural: RegExp('^:(?:' + GROUPS.structural + ')(.*)', 'i'),\n    linguistic: RegExp('^:(?:' + GROUPS.linguistic + ')(.*)', 'i'),\n    useraction: RegExp('^:(?:' + GROUPS.useraction + ')(.*)', 'i'),\n    inputstate: RegExp('^:(?:' + GROUPS.inputstate + ')(.*)', 'i'),\n    inputvalue: RegExp('^:(?:' + GROUPS.inputvalue + ')(.*)', 'i'),\n    locationpc: RegExp('^:(?:' + GROUPS.locationpc + ')(.*)', 'i'),\n    logicalsel: RegExp('^:(?:' + GROUPS.logicalsel + ')(.*)', 'i'),\n    pseudo_dbl: RegExp('^:(?:' + GROUPS.pseudo_dbl + ')(.*)', 'i'),\n    pseudo_sng: RegExp('^:(?:' + GROUPS.pseudo_sng + ')(.*)', 'i'),\n    // combinator symbols\n    children: RegExp('^' + WSP + '?\\\\>' + WSP + '?(.*)'),\n    adjacent: RegExp('^' + WSP + '?\\\\+' + WSP + '?(.*)'),\n    relative: RegExp('^' + WSP + '?\\\\~' + WSP + '?(.*)'),\n    ancestor: RegExp('^' + WSP + '+(.*)'),\n    // universal & namespace\n    universal: RegExp('^\\\\*(.*)'),\n    namespace: RegExp('^(\\\\w+|\\\\*)?\\\\|(.*)')\n  },\n      // regexp to aproximate detection of RTL languages (Arabic)\n  RTL = RegExp('^[\\\\u0591-\\\\u08ff\\\\ufb1d-\\\\ufdfd\\\\ufe70-\\\\ufefc ]+$'),\n      // emulate firefox error strings\n  qsNotArgs = 'Not enough arguments',\n      qsInvalid = ' is not a valid selector',\n      // detect structural pseudo-classes in selectors\n  reNthElem = RegExp('(:nth(?:-last)?-child)', 'i'),\n      reNthType = RegExp('(:nth(?:-last)?-of-type)', 'i'),\n      // placeholder for global regexp\n  reOptimizer,\n      reValidator,\n      // special handling configuration flags\n  Config = {\n    IDS_DUPES: true,\n    MIXEDCASE: true,\n    LOGERRORS: true,\n    VERBOSITY: true\n  },\n      NAMESPACE,\n      QUIRKS_MODE,\n      HTML_DOCUMENT,\n      ATTR_STD_OPS = {\n    '=': 1,\n    '^=': 1,\n    '$=': 1,\n    '|=': 1,\n    '*=': 1,\n    '~=': 1\n  },\n      HTML_TABLE = {\n    'accept': 1,\n    'accept-charset': 1,\n    'align': 1,\n    'alink': 1,\n    'axis': 1,\n    'bgcolor': 1,\n    'charset': 1,\n    'checked': 1,\n    'clear': 1,\n    'codetype': 1,\n    'color': 1,\n    'compact': 1,\n    'declare': 1,\n    'defer': 1,\n    'dir': 1,\n    'direction': 1,\n    'disabled': 1,\n    'enctype': 1,\n    'face': 1,\n    'frame': 1,\n    'hreflang': 1,\n    'http-equiv': 1,\n    'lang': 1,\n    'language': 1,\n    'link': 1,\n    'media': 1,\n    'method': 1,\n    'multiple': 1,\n    'nohref': 1,\n    'noresize': 1,\n    'noshade': 1,\n    'nowrap': 1,\n    'readonly': 1,\n    'rel': 1,\n    'rev': 1,\n    'rules': 1,\n    'scope': 1,\n    'scrolling': 1,\n    'selected': 1,\n    'shape': 1,\n    'target': 1,\n    'text': 1,\n    'type': 1,\n    'valign': 1,\n    'valuetype': 1,\n    'vlink': 1\n  },\n      Combinators = {},\n      Selectors = {},\n      Operators = {\n    '=': {\n      p1: '^',\n      p2: '$',\n      p3: 'true'\n    },\n    '^=': {\n      p1: '^',\n      p2: '',\n      p3: 'true'\n    },\n    '$=': {\n      p1: '',\n      p2: '$',\n      p3: 'true'\n    },\n    '*=': {\n      p1: '',\n      p2: '',\n      p3: 'true'\n    },\n    '|=': {\n      p1: '^',\n      p2: '(-|$)',\n      p3: 'true'\n    },\n    '~=': {\n      p1: '(^|\\\\s)',\n      p2: '(\\\\s|$)',\n      p3: 'true'\n    }\n  },\n      concatCall = function (nodes, callback) {\n    var i = 0,\n        l = nodes.length,\n        list = Array(l);\n\n    while (l > i) {\n      if (false === callback(list[i] = nodes[i])) break;\n      ++i;\n    }\n\n    return list;\n  },\n      concatList = function (list, nodes) {\n    var i = -1,\n        l = nodes.length;\n\n    while (l--) {\n      list[list.length] = nodes[++i];\n    }\n\n    return list;\n  },\n      documentOrder = function (a, b) {\n    if (!hasDupes && a === b) {\n      hasDupes = true;\n      return 0;\n    }\n\n    return a.compareDocumentPosition(b) & 4 ? -1 : 1;\n  },\n      hasDupes = false,\n      unique = function (nodes) {\n    var i = 0,\n        j = -1,\n        l = nodes.length + 1,\n        list = [];\n\n    while (--l) {\n      if (nodes[i++] === nodes[i]) continue;\n      list[++j] = nodes[i - 1];\n    }\n\n    hasDupes = false;\n    return list;\n  },\n      // check context for mixed content\n  hasMixedCaseTagNames = function (context) {\n    var ns,\n        api = 'getElementsByTagNameNS'; // current host context (ownerDocument)\n\n    context = context.ownerDocument || context; // documentElement (root) element namespace or default html/xhtml namespace\n\n    ns = context.documentElement.namespaceURI || 'http://www.w3.org/1999/xhtml'; // checking the number of non HTML nodes in the document\n\n    return context[api]('*', '*').length - context[api](ns, '*').length > 0;\n  },\n      switchContext = function (context, force) {\n    var oldDoc = doc;\n    doc = context.ownerDocument || context;\n\n    if (force || oldDoc !== doc) {\n      // force a new check for each document change\n      // performed before the next select operation\n      root = doc.documentElement;\n      HTML_DOCUMENT = isHTML(doc);\n      QUIRKS_MODE = HTML_DOCUMENT && doc.compatMode.indexOf('CSS') < 0;\n      NAMESPACE = root && root.namespaceURI;\n      Snapshot.doc = doc;\n      Snapshot.root = root;\n    }\n\n    return Snapshot.from = context;\n  },\n      // convert single codepoint to UTF-16 encoding\n  codePointToUTF16 = function (codePoint) {\n    // out of range, use replacement character\n    if (codePoint < 1 || codePoint > 0x10ffff || codePoint > 0xd7ff && codePoint < 0xe000) {\n      return '\\\\ufffd';\n    } // javascript strings are UTF-16 encoded\n\n\n    if (codePoint < 0x10000) {\n      var lowHex = '000' + codePoint.toString(16);\n      return '\\\\u' + lowHex.substr(lowHex.length - 4);\n    } // supplementary high + low surrogates\n\n\n    return '\\\\u' + ((codePoint - 0x10000 >> 0x0a) + 0xd800).toString(16) + '\\\\u' + ((codePoint - 0x10000) % 0x400 + 0xdc00).toString(16);\n  },\n      // convert single codepoint to string\n  stringFromCodePoint = function (codePoint) {\n    // out of range, use replacement character\n    if (codePoint < 1 || codePoint > 0x10ffff || codePoint > 0xd7ff && codePoint < 0xe000) {\n      return '\\ufffd';\n    }\n\n    if (codePoint < 0x10000) {\n      return String.fromCharCode(codePoint);\n    }\n\n    return String.fromCodePoint ? String.fromCodePoint(codePoint) : String.fromCharCode((codePoint - 0x10000 >> 0x0a) + 0xd800, (codePoint - 0x10000) % 0x400 + 0xdc00);\n  },\n      // convert escape sequence in a CSS string or identifier\n  // to javascript string with javascript escape sequences\n  convertEscapes = function (str) {\n    return REX.HasEscapes.test(str) ? str.replace(REX.FixEscapes, function (substring, p1, p2) {\n      // unescaped \" or '\n      return p2 ? '\\\\' + p2 : // javascript strings are UTF-16 encoded\n      REX.HexNumbers.test(p1) ? codePointToUTF16(parseInt(p1, 16)) : // \\' \\\"\n      REX.EscOrQuote.test(p1) ? substring : // \\g \\h \\. \\# etc\n      p1;\n    }) : str;\n  },\n      // convert escape sequence in a CSS string or identifier\n  // to javascript string with characters representations\n  unescapeIdentifier = function (str) {\n    return REX.HasEscapes.test(str) ? str.replace(REX.FixEscapes, function (substring, p1, p2) {\n      // unescaped \" or '\n      return p2 ? p2 : // javascript strings are UTF-16 encoded\n      REX.HexNumbers.test(p1) ? stringFromCodePoint(parseInt(p1, 16)) : // \\' \\\"\n      REX.EscOrQuote.test(p1) ? substring : // \\g \\h \\. \\# etc\n      p1;\n    }) : str;\n  },\n      method = {\n    '#': 'getElementById',\n    '*': 'getElementsByTagName',\n    '.': 'getElementsByClassName'\n  },\n      compat = {\n    '#': function (c, n) {\n      REX.HasEscapes.test(n) && (n = unescapeIdentifier(n));\n      return function (e, f) {\n        return byId(n, c);\n      };\n    },\n    '*': function (c, n) {\n      REX.HasEscapes.test(n) && (n = unescapeIdentifier(n));\n      return function (e, f) {\n        return byTag(n, c);\n      };\n    },\n    '.': function (c, n) {\n      REX.HasEscapes.test(n) && (n = unescapeIdentifier(n));\n      return function (e, f) {\n        return byClass(n, c);\n      };\n    }\n  },\n      // find duplicate ids using iterative walk\n  byIdRaw = function (id, context) {\n    var node = context,\n        nodes = [],\n        next = node.firstElementChild;\n\n    while (node = next) {\n      node.id == id && (nodes[nodes.length] = node);\n      if (next = node.firstElementChild || node.nextElementSibling) continue;\n\n      while (!next && (node = node.parentElement) && node !== context) {\n        next = node.nextElementSibling;\n      }\n    }\n\n    return nodes;\n  },\n      // context agnostic getElementById\n  byId = function (id, context) {\n    var e,\n        nodes,\n        api = method['#']; // duplicates id allowed\n\n    if (Config.IDS_DUPES === false) {\n      if (api in context) {\n        return (e = context[api](id)) ? [e] : none;\n      }\n    } else {\n      if ('all' in context) {\n        if (e = context.all[id]) {\n          if (e.nodeType == 1) return e.getAttribute('id') != id ? [] : [e];else if (id == 'length') return (e = context[api](id)) ? [e] : none;\n\n          for (i = 0, l = e.length, nodes = []; l > i; ++i) {\n            if (e[i].id == id) nodes[nodes.length] = e[i];\n          }\n\n          return nodes && nodes.length ? nodes : [nodes];\n        } else return none;\n      }\n    }\n\n    return byIdRaw(id, context);\n  },\n      // context agnostic getElementsByTagName\n  byTag = function (tag, context) {\n    var e,\n        nodes,\n        api = method['*']; // DOCUMENT_NODE (9) & ELEMENT_NODE (1)\n\n    if (api in context) {\n      return slice.call(context[api](tag));\n    } else {\n      // DOCUMENT_FRAGMENT_NODE (11)\n      if (e = context.firstElementChild) {\n        tag = tag.toLowerCase();\n\n        if (!(e.nextElementSibling || tag == '*' || e.nodeName.toLowerCase() == tag)) {\n          return slice.call(e[api](tag));\n        } else {\n          nodes = [];\n\n          do {\n            if (tag == '*' || e.nodeName.toLowerCase() == tag) nodes[nodes.length] = e;\n            concatList(nodes, e[api](tag));\n          } while (e = e.nextElementSibling);\n        }\n      } else nodes = none;\n    }\n\n    return nodes;\n  },\n      // context agnostic getElementsByClassName\n  byClass = function (cls, context) {\n    var e,\n        nodes,\n        api = method['.'],\n        reCls; // DOCUMENT_NODE (9) & ELEMENT_NODE (1)\n\n    if (api in context) {\n      return slice.call(context[api](cls));\n    } else {\n      // DOCUMENT_FRAGMENT_NODE (11)\n      if (e = context.firstElementChild) {\n        reCls = RegExp('(^|\\\\s)' + cls + '(\\\\s|$)', QUIRKS_MODE ? 'i' : '');\n\n        if (!(e.nextElementSibling || reCls.test(e.className))) {\n          return slice.call(e[api](cls));\n        } else {\n          nodes = [];\n\n          do {\n            if (reCls.test(e.className)) nodes[nodes.length] = e;\n            concatList(nodes, e[api](cls));\n          } while (e = e.nextElementSibling);\n        }\n      } else nodes = none;\n    }\n\n    return nodes;\n  },\n      // namespace aware hasAttribute\n  // helper for XML/XHTML documents\n  hasAttributeNS = function (e, name) {\n    var i,\n        l,\n        attr = e.getAttributeNames();\n    name = RegExp(':?' + name + '$', HTML_DOCUMENT ? 'i' : '');\n\n    for (i = 0, l = attr.length; l > i; ++i) {\n      if (name.test(attr[i])) return true;\n    }\n\n    return false;\n  },\n      // fast resolver for the :nth-child() and :nth-last-child() pseudo-classes\n  nthElement = function () {\n    var idx = 0,\n        len = 0,\n        set = 0,\n        parent = undefined,\n        parents = Array(),\n        nodes = Array();\n    return function (element, dir) {\n      // ensure caches are emptied after each run, invoking with dir = 2\n      if (dir == 2) {\n        idx = 0;\n        len = 0;\n        set = 0;\n        nodes.length = 0;\n        parents.length = 0;\n        parent = undefined;\n        return -1;\n      }\n\n      var e, i, j, k, l;\n\n      if (parent === element.parentElement) {\n        i = set;\n        j = idx;\n        l = len;\n      } else {\n        l = parents.length;\n        parent = element.parentElement;\n\n        for (i = -1, j = 0, k = l - 1; l > j; ++j, --k) {\n          if (parents[j] === parent) {\n            i = j;\n            break;\n          }\n\n          if (parents[k] === parent) {\n            i = k;\n            break;\n          }\n        }\n\n        if (i < 0) {\n          parents[i = l] = parent;\n          l = 0;\n          nodes[i] = Array();\n          e = parent && parent.firstElementChild || element;\n\n          while (e) {\n            nodes[i][l] = e;\n            if (e === element) j = l;\n            e = e.nextElementSibling;\n            ++l;\n          }\n\n          set = i;\n          idx = 0;\n          len = l;\n          if (l < 2) return l;\n        } else {\n          l = nodes[i].length;\n          set = i;\n        }\n      }\n\n      if (element !== nodes[i][j] && element !== nodes[i][j = 0]) {\n        for (j = 0, e = nodes[i], k = l - 1; l > j; ++j, --k) {\n          if (e[j] === element) {\n            break;\n          }\n\n          if (e[k] === element) {\n            j = k;\n            break;\n          }\n        }\n      }\n\n      idx = j + 1;\n      len = l;\n      return dir ? l - j : idx;\n    };\n  }(),\n      // fast resolver for the :nth-of-type() and :nth-last-of-type() pseudo-classes\n  nthOfType = function () {\n    var idx = 0,\n        len = 0,\n        set = 0,\n        parent = undefined,\n        parents = Array(),\n        nodes = Array();\n    return function (element, dir) {\n      // ensure caches are emptied after each run, invoking with dir = 2\n      if (dir == 2) {\n        idx = 0;\n        len = 0;\n        set = 0;\n        nodes.length = 0;\n        parents.length = 0;\n        parent = undefined;\n        return -1;\n      }\n\n      var e,\n          i,\n          j,\n          k,\n          l,\n          name = element.nodeName;\n\n      if (nodes[set] && nodes[set][name] && parent === element.parentElement) {\n        i = set;\n        j = idx;\n        l = len;\n      } else {\n        l = parents.length;\n        parent = element.parentElement;\n\n        for (i = -1, j = 0, k = l - 1; l > j; ++j, --k) {\n          if (parents[j] === parent) {\n            i = j;\n            break;\n          }\n\n          if (parents[k] === parent) {\n            i = k;\n            break;\n          }\n        }\n\n        if (i < 0 || !nodes[i][name]) {\n          parents[i = l] = parent;\n          nodes[i] || (nodes[i] = Object());\n          l = 0;\n          nodes[i][name] = Array();\n          e = parent && parent.firstElementChild || element;\n\n          while (e) {\n            if (e === element) j = l;\n\n            if (e.nodeName == name) {\n              nodes[i][name][l] = e;\n              ++l;\n            }\n\n            e = e.nextElementSibling;\n          }\n\n          set = i;\n          idx = j;\n          len = l;\n          if (l < 2) return l;\n        } else {\n          l = nodes[i][name].length;\n          set = i;\n        }\n      }\n\n      if (element !== nodes[i][name][j] && element !== nodes[i][name][j = 0]) {\n        for (j = 0, e = nodes[i][name], k = l - 1; l > j; ++j, --k) {\n          if (e[j] === element) {\n            break;\n          }\n\n          if (e[k] === element) {\n            j = k;\n            break;\n          }\n        }\n      }\n\n      idx = j + 1;\n      len = l;\n      return dir ? l - j : idx;\n    };\n  }(),\n      // check if the document type is HTML\n  isHTML = function (node) {\n    var doc = node.ownerDocument || node;\n    return doc.nodeType == 9 && // contentType not in IE <= 11\n    'contentType' in doc ? doc.contentType.indexOf('/html') > 0 : doc.createElement('DiV').nodeName == 'DIV';\n  },\n      // configure the engine to use special handling\n  configure = function (option, clear) {\n    if (typeof option == 'string') {\n      return !!Config[option];\n    }\n\n    if (typeof option != 'object') {\n      return Config;\n    }\n\n    for (var i in option) {\n      Config[i] = !!option[i];\n    } // clear lambda cache\n\n\n    if (clear) {\n      matchResolvers = {};\n      selectResolvers = {};\n    }\n\n    setIdentifierSyntax();\n    return true;\n  },\n      // centralized error and exceptions handling\n  emit = function (message, proto) {\n    var err;\n\n    if (Config.VERBOSITY) {\n      if (proto) {\n        err = new proto(message);\n      } else {\n        err = new global.DOMException(message, 'SyntaxError');\n      }\n\n      throw err;\n    }\n\n    if (Config.LOGERRORS && console && console.log) {\n      console.log(message);\n    }\n  },\n      // execute the engine initialization code\n  initialize = function (doc) {\n    setIdentifierSyntax();\n    lastContext = switchContext(doc, true);\n  },\n      // build validation regexps used by the engine\n  setIdentifierSyntax = function () {\n    //\n    // NOTE: SPECIAL CASES IN CSS SYNTAX PARSING RULES\n    //\n    // The <EOF-token> https://drafts.csswg.org/css-syntax/#typedef-eof-token\n    // allow mangled|unclosed selector syntax at the end of selectors strings\n    //\n    // Literal equivalent hex representations of the characters: \" ' ` ] )\n    //\n    //     \\\\x22 = \" - double quotes    \\\\x5b = [ - open square bracket\n    //     \\\\x27 = ' - single quote     \\\\x5d = ] - closed square bracket\n    //     \\\\x60 = ` - back tick        \\\\x28 = ( - open round parens\n    //     \\\\x5c = \\ - back slash       \\\\x29 = ) - closed round parens\n    //\n    // using hex format prevents false matches of opened/closed instances\n    // pairs, coloring breakage and other editors highlightning problems.\n    //\n    var identifier = // doesn't start with a digit\n    '(?=[^0-9])' + // can start with double dash\n    '(?:-{2}' + // may include ascii chars\n    '|[a-zA-Z0-9-_]' + // non-ascii chars\n    '|[^\\\\x00-\\\\x9f]' + // escaped chars\n    '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-fA-F]' + // unicode chars\n    '|\\\\\\\\[0-9a-fA-F]{1,6}(?:\\\\r\\\\n|\\\\s)?' + // any escaped chars\n    '|\\\\\\\\.' + ')+',\n        pseudonames = '[-\\\\w]+',\n        pseudoparms = '(?:[-+]?\\\\d*)(?:n\\\\s?[-+]?\\\\s?\\\\d*)',\n        doublequote = '\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(?:\"|$)',\n        singlequote = \"'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*(?:'|$)\",\n        attrparser = identifier + '|' + doublequote + '|' + singlequote,\n        attrvalues = '([\\\\x22\\\\x27]?)((?!\\\\3)*|(?:\\\\\\\\?.)*?)(?:\\\\3|$)',\n        attributes = '\\\\[' + // attribute presence\n    '(?:\\\\*\\\\|)?' + WSP + '?' + '(' + identifier + '(?::' + identifier + ')?)' + WSP + '?' + '(?:' + '(' + CFG.operators + ')' + WSP + '?' + '(?:' + attrparser + ')' + ')?' + // attribute case sensitivity\n    WSP + '?' + '(i)?' + WSP + '?' + '(?:\\\\]|$)',\n        attrmatcher = attributes.replace(attrparser, attrvalues),\n        pseudoclass = '(?:\\\\x28' + WSP + '*' + '(?:' + pseudoparms + '?)?|' + // universal * &\n    // namespace *|*\n    '(?:\\\\*|\\\\|)|' + '(?:' + '(?::' + pseudonames + '(?:\\\\x28' + pseudoparms + '?(?:\\\\x29|$))?|' + ')|' + '(?:[.#]?' + identifier + ')|' + '(?:' + attributes + ')' + ')+|' + '(?:' + WSP + '?,' + WSP + '?)|' + '(?:' + WSP + '?)|' + '(?:\\\\x29|$))*',\n        standardValidator = '(?=' + WSP + '?[^>+~(){}<>])' + '(?:' + // universal * &\n    // namespace *|*\n    '(?:\\\\*|\\\\|)|' + '(?:[.#]?' + identifier + ')+|' + '(?:' + attributes + ')+|' + '(?:::?' + pseudonames + pseudoclass + ')|' + '(?:' + WSP + '?' + CFG.combinators + WSP + '?)|' + '(?:' + WSP + '?,' + WSP + '?)|' + '(?:' + WSP + '?)' + ')+'; // the following global RE is used to return the\n    // deepest nodeName in selector strings and then\n    // use it to retrieve all possible matching nodes\n    // that will be filtered by compiled resolvers\n\n    reOptimizer = RegExp('(?:([.:#*]?)' + '(' + identifier + ')' + '(?:' + ':[-\\\\w]+|' + '\\\\[[^\\\\]]+(?:\\\\]|$)|' + '\\\\x28[^\\\\x29]+(?:\\\\x29|$)' + ')*)$'); // global\n\n    reValidator = RegExp(standardValidator, 'g');\n    Patterns.id = RegExp('^#(' + identifier + ')(.*)');\n    Patterns.tagName = RegExp('^(' + identifier + ')(.*)');\n    Patterns.className = RegExp('^\\\\.(' + identifier + ')(.*)');\n    Patterns.attribute = RegExp('^(?:' + attrmatcher + ')(.*)');\n  },\n      F_INIT = '\"use strict\";return function Resolver(c,f,x,r)',\n      S_HEAD = 'var e,n,o,j=r.length-1,k=-1',\n      M_HEAD = 'var e,n,o',\n      S_LOOP = 'main:while((e=c[++k]))',\n      N_LOOP = 'main:while((e=c.item(++k)))',\n      M_LOOP = 'e=c;',\n      S_BODY = 'r[++j]=c[k];',\n      N_BODY = 'r[++j]=c.item(k);',\n      M_BODY = '',\n      S_TAIL = 'continue main;',\n      M_TAIL = 'r=true;',\n      S_TEST = 'if(f(c[k])){break main;}',\n      N_TEST = 'if(f(c.item(k))){break main;}',\n      M_TEST = 'f(c);',\n      S_VARS = [],\n      M_VARS = [],\n      // compile groups or single selector strings into\n  // executable functions for matching or selecting\n  compile = function (selector, mode, callback) {\n    var factory,\n        token,\n        head = '',\n        loop = '',\n        macro = '',\n        source = '',\n        vars = ''; // 'mode' can be boolean or null\n    // true = select / false = match\n    // null to use collection.item()\n\n    switch (mode) {\n      case true:\n        if (selectLambdas[selector]) {\n          return selectLambdas[selector];\n        }\n\n        macro = S_BODY + (callback ? S_TEST : '') + S_TAIL;\n        head = S_HEAD;\n        loop = S_LOOP;\n        break;\n\n      case false:\n        if (matchLambdas[selector]) {\n          return matchLambdas[selector];\n        }\n\n        macro = M_BODY + (callback ? M_TEST : '') + M_TAIL;\n        head = M_HEAD;\n        loop = M_LOOP;\n        break;\n\n      case null:\n        if (selectLambdas[selector]) {\n          return selectLambdas[selector];\n        }\n\n        macro = N_BODY + (callback ? N_TEST : '') + S_TAIL;\n        head = S_HEAD;\n        loop = N_LOOP;\n        break;\n\n      default:\n        break;\n    }\n\n    source = compileSelector(selector, macro, mode, callback, false);\n    loop += mode || mode === null ? '{' + source + '}' : source;\n\n    if (mode || mode === null && selector.includes(':nth')) {\n      loop += reNthElem.test(selector) ? 's.nthElement(null, 2);' : '';\n      loop += reNthType.test(selector) ? 's.nthOfType(null, 2);' : '';\n    }\n\n    if (S_VARS[0] || M_VARS[0]) {\n      vars = ',' + (S_VARS.join(',') || M_VARS.join(','));\n      S_VARS.length = 0;\n      M_VARS.length = 0;\n    }\n\n    factory = Function('s', F_INIT + '{' + head + vars + ';' + loop + 'return r;}')(Snapshot);\n    return mode || mode === null ? selectLambdas[selector] = factory : matchLambdas[selector] = factory;\n  },\n      // build conditional code to check components of selector strings\n  compileSelector = function (expression, source, mode, callback, not) {\n    // N is the negation pseudo-class flag\n    // D is the default inverted negation flag\n    var a,\n        b,\n        n,\n        f,\n        i,\n        l,\n        name,\n        nested,\n        NS,\n        N = not ? '!' : '',\n        D = not ? '' : '!',\n        compat,\n        expr,\n        match,\n        result,\n        status,\n        symbol,\n        test,\n        type,\n        selector = expression,\n        selector_string,\n        vars; // original 'select' or 'match' selector string before normalization\n\n    selector_string = mode ? lastSelected : lastMatched; // isolate selector combinators/components and normalize whitespace\n\n    selector = selector.replace(STD.combinator, '$1'); //.replace(STD.whitespace, ' ');\n\n    while (selector) {\n      // get namespace prefix if present or get first char of selector\n      symbol = STD.apimethods.test(selector) ? '|' : selector[0];\n\n      switch (symbol) {\n        // universal resolver\n        case '*':\n          match = selector.match(Patterns.universal);\n\n          if (N == '!') {\n            source = 'if(' + N + 'true' + '){' + source + '}';\n          }\n\n          break;\n        // id resolver\n\n        case '#':\n          match = selector.match(Patterns.id);\n          source = 'if(' + N + '(/^' + match[1] + '$/.test(e.getAttribute(\"id\"))' + ')){' + source + '}';\n          break;\n        // class name resolver\n\n        case '.':\n          match = selector.match(Patterns.className);\n          compat = (QUIRKS_MODE ? 'i' : '') + '.test(e.getAttribute(\"class\"))';\n          source = 'if(' + N + '(/(^|\\\\s)' + match[1] + '(\\\\s|$)/' + compat + ')){' + source + '}';\n          break;\n        // tag name resolver\n\n        case /[a-z]/i.test(symbol) ? symbol : undefined:\n          match = selector.match(Patterns.tagName);\n          source = 'if(' + N + '(e.nodeName' + (Config.MIXEDCASE || hasMixedCaseTagNames(doc) ? '.toLowerCase()==\"' + match[1].toLowerCase() + '\"' : '==\"' + match[1].toUpperCase() + '\"') + ')){' + source + '}';\n          break;\n        // namespace resolver\n\n        case '|':\n          match = selector.match(Patterns.namespace);\n\n          if (match[1] == '*') {\n            source = 'if(' + N + 'true){' + source + '}';\n          } else if (!match[1]) {\n            source = 'if(' + N + '(!e.namespaceURI)){' + source + '}';\n          } else if (typeof match[1] == 'string' && root.prefix == match[1]) {\n            source = 'if(' + N + '(e.namespaceURI==\"' + NAMESPACE + '\")){' + source + '}';\n          } else {\n            emit('\\'' + selector_string + '\\'' + qsInvalid);\n          }\n\n          break;\n        // attributes resolver\n\n        case '[':\n          match = selector.match(Patterns.attribute);\n          NS = match[0].match(STD.namespaces);\n          name = match[1];\n          expr = name.split(':');\n          expr = expr.length == 2 ? expr[1] : expr[0];\n\n          if (match[2] && !(test = Operators[match[2]])) {\n            emit('\\'' + selector_string + '\\'' + qsInvalid);\n            return '';\n          }\n\n          if (match[4] === '') {\n            test = match[2] == '~=' ? {\n              p1: '^\\\\s',\n              p2: '+$',\n              p3: 'true'\n            } : match[2] in ATTR_STD_OPS && match[2] != '~=' ? {\n              p1: '^',\n              p2: '$',\n              p3: 'true'\n            } : test;\n          } else if (match[2] == '~=' && match[4].includes(' ')) {\n            // whitespace separated list but value contains space\n            source = 'if(' + N + 'false){' + source + '}';\n            break;\n          } else if (match[4]) {\n            match[4] = convertEscapes(match[4]).replace(REX.RegExpChar, '\\\\$&');\n          }\n\n          type = match[5] == 'i' || HTML_DOCUMENT && HTML_TABLE[expr.toLowerCase()] ? 'i' : '';\n          source = 'if(' + N + '(' + (!match[2] ? NS ? 's.hasAttributeNS(e,\"' + name + '\")' : 'e.hasAttribute(\"' + name + '\")' : !match[4] && ATTR_STD_OPS[match[2]] && match[2] != '~=' ? 'e.getAttribute(\"' + name + '\")==\"\"' : '(/' + test.p1 + match[4] + test.p2 + '/' + type + ').test(e.getAttribute(\"' + name + '\"))==' + test.p3) + ')){' + source + '}';\n          break;\n        // *** General sibling combinator\n        // E ~ F (F relative sibling of E)\n\n        case '~':\n          match = selector.match(Patterns.relative);\n          source = 'n=e;while((e=e.previousElementSibling)){' + source + '}e=n;';\n          break;\n        // *** Adjacent sibling combinator\n        // E + F (F adiacent sibling of E)\n\n        case '+':\n          match = selector.match(Patterns.adjacent);\n          source = 'n=e;if((e=e.previousElementSibling)){' + source + '}e=n;';\n          break;\n        // *** Descendant combinator\n        // E F (E ancestor of F)\n\n        case '\\x09':\n        case '\\x20':\n          match = selector.match(Patterns.ancestor);\n          source = 'n=e;while((e=e.parentElement)){' + source + '}e=n;';\n          break;\n        // *** Child combinator\n        // E > F (F children of E)\n\n        case '>':\n          match = selector.match(Patterns.children);\n          source = 'n=e;if((e=e.parentElement)){' + source + '}e=n;';\n          break;\n        // *** user supplied combinators extensions\n\n        case symbol in Combinators ? symbol : undefined:\n          // for other registered combinators extensions\n          match[match.length - 1] = '*';\n          source = Combinators[symbol](match) + source;\n          break;\n        // *** tree-structural pseudo-classes\n        // :root, :empty, :first-child, :last-child, :only-child, :first-of-type, :last-of-type, :only-of-type\n\n        case ':':\n          if (match = selector.match(Patterns.structural)) {\n            match[1] = match[1].toLowerCase();\n\n            switch (match[1]) {\n              case 'root':\n                // there can only be one :root element, so exit the loop once found\n                source = 'if(' + N + '(e===s.root)){' + source + (mode ? 'break main;' : '') + '}';\n                break;\n\n              case 'empty':\n                // matches elements that don't contain elements or text nodes\n                source = 'n=e.firstChild;while(n&&!(/1|3/).test(n.nodeType)){n=n.nextSibling}if(' + D + 'n){' + source + '}';\n                break;\n              // *** child-indexed pseudo-classes\n              // :first-child, :last-child, :only-child\n\n              case 'only-child':\n                source = 'if(' + N + '(!e.nextElementSibling&&!e.previousElementSibling)){' + source + '}';\n                break;\n\n              case 'last-child':\n                source = 'if(' + N + '(!e.nextElementSibling)){' + source + '}';\n                break;\n\n              case 'first-child':\n                source = 'if(' + N + '(!e.previousElementSibling)){' + source + '}';\n                break;\n              // *** typed child-indexed pseudo-classes\n              // :only-of-type, :last-of-type, :first-of-type\n\n              case 'only-of-type':\n                source = 'o=e.nodeName;' + 'n=e;while((n=n.nextElementSibling)&&n.nodeName!=o);if(!n){' + 'n=e;while((n=n.previousElementSibling)&&n.nodeName!=o);}if(' + D + 'n){' + source + '}';\n                break;\n\n              case 'last-of-type':\n                source = 'n=e;o=e.nodeName;while((n=n.nextElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}';\n                break;\n\n              case 'first-of-type':\n                source = 'n=e;o=e.nodeName;while((n=n.previousElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}';\n                break;\n\n              default:\n                emit('\\'' + selector_string + '\\'' + qsInvalid);\n                break;\n            }\n          } // *** child-indexed & typed child-indexed pseudo-classes\n          // :nth-child, :nth-of-type, :nth-last-child, :nth-last-of-type\n          else if (match = selector.match(Patterns.treestruct)) {\n              match[1] = match[1].toLowerCase();\n\n              switch (match[1]) {\n                case 'nth-child':\n                case 'nth-of-type':\n                case 'nth-last-child':\n                case 'nth-last-of-type':\n                  expr = /-of-type/i.test(match[1]);\n\n                  if (match[1] && match[2]) {\n                    type = /last/i.test(match[1]);\n\n                    if (match[2] == 'n') {\n                      source = 'if(' + N + 'true){' + source + '}';\n                      break;\n                    } else if (match[2] == '1') {\n                      test = type ? 'next' : 'previous';\n                      source = expr ? 'n=e;o=e.nodeName;' + 'while((n=n.' + test + 'ElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}' : 'if(' + N + '!e.' + test + 'ElementSibling){' + source + '}';\n                      break;\n                    } else if (match[2] == 'even' || match[2] == '2n0' || match[2] == '2n+0' || match[2] == '2n') {\n                      test = 'n%2==0';\n                    } else if (match[2] == 'odd' || match[2] == '2n1' || match[2] == '2n+1') {\n                      test = 'n%2==1';\n                    } else {\n                      f = /n/i.test(match[2]);\n                      n = match[2].split('n');\n                      a = parseInt(n[0], 10) || 0;\n                      b = parseInt(n[1], 10) || 0;\n\n                      if (n[0] == '-') {\n                        a = -1;\n                      }\n\n                      if (n[0] == '+') {\n                        a = +1;\n                      }\n\n                      test = (b ? '(n' + (b > 0 ? '-' : '+') + Math.abs(b) + ')' : 'n') + '%' + a + '==0';\n                      test = a >= +1 ? f ? 'n>' + (b - 1) + (Math.abs(a) != 1 ? '&&' + test : '') : 'n==' + a : a <= -1 ? f ? 'n<' + (b + 1) + (Math.abs(a) != 1 ? '&&' + test : '') : 'n==' + a : a === 0 ? n[0] ? 'n==' + b : 'n>' + (b - 1) : 'false';\n                    }\n\n                    expr = expr ? 'OfType' : 'Element';\n                    type = type ? 'true' : 'false';\n                    source = 'n=s.nth' + expr + '(e,' + type + ');if(' + N + '(' + test + ')){' + source + '}';\n                  } else {\n                    emit('\\'' + selector_string + '\\'' + qsInvalid);\n                  }\n\n                  break;\n\n                default:\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\n                  break;\n              }\n            } // *** logical combination pseudo-classes\n            // :matches( s1, [ s2, ... ]), :not( s1, [ s2, ... ])\n            else if (match = selector.match(Patterns.logicalsel)) {\n                match[1] = match[1].toLowerCase();\n\n                switch (match[1]) {\n                  case 'matches':\n                    if (not === true || nested === true) {\n                      emit(':matches() pseudo-class cannot be nested');\n                    }\n\n                    nested = true;\n                    expr = match[2].replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, ''); // check nested compound selectors s1, s2\n\n                    expr = match[2].match(REX.SplitGroup);\n\n                    for (i = 0, l = expr.length; l > i; ++i) {\n                      expr[i] = expr[i].replace(REX.TrimSpaces, '');\n                      source = 'if(s.match(\"' + expr[i].replace(/\\x22/g, '\\\\\"') + '\",e)){' + source + '}';\n                    }\n\n                    break;\n\n                  case 'not':\n                    if (not === true || nested === true) {\n                      emit(':not() pseudo-class cannot be nested');\n                    }\n\n                    expr = match[2].replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, ''); // check nested compound selectors s1, s2\n\n                    expr = match[2].match(REX.SplitGroup);\n\n                    for (i = 0, l = expr.length; l > i; ++i) {\n                      expr[i] = expr[i].replace(REX.TrimSpaces, '');\n                      source = compileSelector(expr[i], source, false, callback, true);\n                    }\n\n                    break;\n\n                  default:\n                    emit('\\'' + selector_string + '\\'' + qsInvalid);\n                    break;\n                }\n              } // *** linguistic pseudo-classes\n              // :dir( ltr / rtl ), :lang( en )\n              else if (match = selector.match(Patterns.linguistic)) {\n                  match[1] = match[1].toLowerCase();\n\n                  switch (match[1]) {\n                    case 'dir':\n                      source = 'var p;if(' + N + '(' + '(/' + match[2] + '/i.test(e.dir))||(p=s.ancestor(\"[dir]\", e))&&' + '(/' + match[2] + '/i.test(p.dir))||(e.dir==\"\"||e.dir==\"auto\")&&' + '(' + (match[2] == 'ltr' ? '!' : '') + RTL + '.test(e.textContent)))' + '){' + source + '};';\n                      break;\n\n                    case 'lang':\n                      expr = '(?:^|-)' + match[2] + '(?:-|$)';\n                      source = 'var p;if(' + N + '(' + '(e.isConnected&&(e.lang==\"\"&&(p=s.ancestor(\"[lang]\",e)))&&' + '(p.lang==\"' + match[2] + '\")||/' + expr + '/i.test(e.lang)))' + '){' + source + '};';\n                      break;\n\n                    default:\n                      emit('\\'' + selector_string + '\\'' + qsInvalid);\n                      break;\n                  }\n                } // *** location pseudo-classes\n                // :link, :visited, :target\n                else if (match = selector.match(Patterns.locationpc)) {\n                    match[1] = match[1].toLowerCase();\n\n                    switch (match[1]) {\n                      case 'link':\n                        source = 'if(' + N + '(/^a|area|link$/i.test(e.nodeName)&&e.hasAttribute(\"href\"))){' + source + '}';\n                        break;\n\n                      case 'visited':\n                        source = 'if(' + N + '(/^a|area|link$/i.test(e.nodeName)&&e.hasAttribute(\"href\")&&e.visited)){' + source + '}';\n                        break;\n\n                      case 'target':\n                        source = 'if(' + N + '((s.doc.compareDocumentPosition(e)&16)&&s.doc.location.hash&&e.id==s.doc.location.hash.slice(1))){' + source + '}';\n                        break;\n\n                      default:\n                        emit('\\'' + selector_string + '\\'' + qsInvalid);\n                        break;\n                    }\n                  } // *** user actions pseudo-classes\n                  // :hover, :active, :focus\n                  else if (match = selector.match(Patterns.useraction)) {\n                      match[1] = match[1].toLowerCase();\n\n                      switch (match[1]) {\n                        case 'hover':\n                          source = 'hasFocus' in doc && doc.hasFocus() ? 'if(' + N + '(e===s.doc.hoverElement)){' + source + '}' : 'if(' + D + 'true){' + source + '}';\n                          break;\n\n                        case 'active':\n                          source = 'hasFocus' in doc && doc.hasFocus() ? 'if(' + N + '(e===s.doc.activeElement)){' + source + '}' : 'if(' + D + 'true){' + source + '}';\n                          break;\n\n                        case 'focus':\n                          source = 'hasFocus' in doc ? 'if(' + N + '(e===s.doc.activeElement&&s.doc.hasFocus()&&(e.type||e.href||typeof e.tabIndex==\"number\"))){' + source + '}' : 'if(' + N + '(e===s.doc.activeElement&&(e.type||e.href))){' + source + '}';\n                          break;\n\n                        case 'focus-within':\n                          source = 'hasFocus' in doc ? 'n=s.doc.activeElement;while(e){if(e===n||e.parentNode===n)break;}' + 'if(' + N + '(e===n&&s.doc.hasFocus()&&(e.type||e.href||typeof e.tabIndex==\"number\"))){' + source + '}' : source;\n                          break;\n\n                        default:\n                          emit('\\'' + selector_string + '\\'' + qsInvalid);\n                          break;\n                      }\n                    } // *** user interface and form pseudo-classes\n                    // :enabled, :disabled, :read-only, :read-write, :placeholder-shown, :default\n                    else if (match = selector.match(Patterns.inputstate)) {\n                        match[1] = match[1].toLowerCase();\n\n                        switch (match[1]) {\n                          case 'enabled':\n                            source = 'if(' + N + '((\"form\" in e||/^optgroup$/i.test(e.nodeName))&&\"disabled\" in e &&e.disabled===false' + ')){' + source + '}';\n                            break;\n\n                          case 'disabled':\n                            // https://www.w3.org/TR/html5/forms.html#enabling-and-disabling-form-controls:-the-disabled-attribute\n                            source = 'if(' + N + '((\"form\" in e||/^optgroup$/i.test(e.nodeName))&&\"disabled\" in e&&' + '(e.disabled===true||(n=s.ancestor(\"fieldset\",e))&&(n=s.first(\"legend\",n))&&!n.contains(e))' + ')){' + source + '}';\n                            break;\n\n                          case 'read-only':\n                            source = 'if(' + N + '(' + '(/^textarea$/i.test(e.nodeName)&&(e.readOnly||e.disabled))||' + '(\"|password|text|\".includes(\"|\"+e.type+\"|\")&&e.readOnly)' + ')){' + source + '}';\n                            break;\n\n                          case 'read-write':\n                            source = 'if(' + N + '(' + '((/^textarea$/i.test(e.nodeName)&&!e.readOnly&&!e.disabled)||' + '(\"|password|text|\".includes(\"|\"+e.type+\"|\")&&!e.readOnly&&!e.disabled))||' + '(e.hasAttribute(\"contenteditable\")||(s.doc.designMode==\"on\"))' + ')){' + source + '}';\n                            break;\n\n                          case 'placeholder-shown':\n                            source = 'if(' + N + '(' + '(/^input|textarea$/i.test(e.nodeName))&&e.hasAttribute(\"placeholder\")&&' + '(\"|textarea|password|number|search|email|text|tel|url|\".includes(\"|\"+e.type+\"|\"))&&' + '(!s.match(\":focus\",e))' + ')){' + source + '}';\n                            break;\n\n                          case 'default':\n                            source = 'if(' + N + '(\"form\" in e && e.form)){' + 'var x=0;n=[];' + 'if(e.type==\"image\")n=e.form.getElementsByTagName(\"input\");' + 'if(e.type==\"submit\")n=e.form.elements;' + 'while(n[x]&&e!==n[x]){' + 'if(n[x].type==\"image\")break;' + 'if(n[x].type==\"submit\")break;' + 'x++;' + '}' + '}' + 'if(' + N + '(e.form&&(e===n[x]&&\"|image|submit|\".includes(\"|\"+e.type+\"|\"))||' + '((/^option$/i.test(e.nodeName))&&e.defaultSelected)||' + '((\"|radio|checkbox|\".includes(\"|\"+e.type+\"|\"))&&e.defaultChecked)' + ')){' + source + '}';\n                            break;\n\n                          default:\n                            emit('\\'' + selector_string + '\\'' + qsInvalid);\n                            break;\n                        }\n                      } // *** input pseudo-classes (for form validation)\n                      // :checked, :indeterminate, :valid, :invalid, :in-range, :out-of-range, :required, :optional\n                      else if (match = selector.match(Patterns.inputvalue)) {\n                          match[1] = match[1].toLowerCase();\n\n                          switch (match[1]) {\n                            case 'checked':\n                              source = 'if(' + N + '(/^input$/i.test(e.nodeName)&&' + '(\"|radio|checkbox|\".includes(\"|\"+e.type+\"|\")&&e.checked)||' + '(/^option$/i.test(e.nodeName)&&(e.selected||e.checked))' + ')){' + source + '}';\n                              break;\n\n                            case 'indeterminate':\n                              source = 'if(' + N + '(/^progress$/i.test(e.nodeName)&&!e.hasAttribute(\"value\"))||' + '(/^input$/i.test(e.nodeName)&&(\"checkbox\"==e.type&&e.indeterminate)||' + '(\"radio\"==e.type&&e.name&&!s.first(\"input[name=\"+e.name+\"]:checked\",e.form))' + ')){' + source + '}';\n                              break;\n\n                            case 'required':\n                              source = 'if(' + N + '(/^input|select|textarea$/i.test(e.nodeName)&&e.required)' + '){' + source + '}';\n                              break;\n\n                            case 'optional':\n                              source = 'if(' + N + '(/^input|select|textarea$/i.test(e.nodeName)&&!e.required)' + '){' + source + '}';\n                              break;\n\n                            case 'invalid':\n                              source = 'if(' + N + '((' + '(/^form$/i.test(e.nodeName)&&!e.noValidate)||' + '(e.willValidate&&!e.formNoValidate))&&!e.checkValidity())||' + '(/^fieldset$/i.test(e.nodeName)&&s.first(\":invalid\",e))' + '){' + source + '}';\n                              break;\n\n                            case 'valid':\n                              source = 'if(' + N + '((' + '(/^form$/i.test(e.nodeName)&&!e.noValidate)||' + '(e.willValidate&&!e.formNoValidate))&&e.checkValidity())||' + '(/^fieldset$/i.test(e.nodeName)&&s.first(\":valid\",e))' + '){' + source + '}';\n                              break;\n\n                            case 'in-range':\n                              source = 'if(' + N + '(/^input$/i.test(e.nodeName))&&' + '(e.willValidate&&!e.formNoValidate)&&' + '(!e.validity.rangeUnderflow&&!e.validity.rangeOverflow)&&' + '(\"|date|datetime-local|month|number|range|time|week|\".includes(\"|\"+e.type+\"|\"))&&' + '(\"range\"==e.type||e.getAttribute(\"min\")||e.getAttribute(\"max\"))' + '){' + source + '}';\n                              break;\n\n                            case 'out-of-range':\n                              source = 'if(' + N + '(/^input$/i.test(e.nodeName))&&' + '(e.willValidate&&!e.formNoValidate)&&' + '(e.validity.rangeUnderflow||e.validity.rangeOverflow)&&' + '(\"|date|datetime-local|month|number|range|time|week|\".includes(\"|\"+e.type+\"|\"))&&' + '(\"range\"==e.type||e.getAttribute(\"min\")||e.getAttribute(\"max\"))' + '){' + source + '}';\n                              break;\n\n                            default:\n                              emit('\\'' + selector_string + '\\'' + qsInvalid);\n                              break;\n                          }\n                        } // allow pseudo-elements starting with single colon (:)\n                        // :after, :before, :first-letter, :first-line\n                        else if (match = selector.match(Patterns.pseudo_sng)) {\n                            source = 'if(' + D + '(e.nodeType==1)){' + source + '}';\n                          } // allow pseudo-elements starting with double colon (::)\n                          // ::after, ::before, ::marker, ::placeholder, ::inactive-selection, ::selection, ::-webkit-<foo-bar>\n                          else if (match = selector.match(Patterns.pseudo_dbl)) {\n                              source = 'if(' + D + '(e.nodeType==1)){' + source + '}';\n                            } else {\n                              // reset\n                              expr = false;\n                              status = false; // process registered selector extensions\n\n                              for (expr in Selectors) {\n                                if (match = selector.match(Selectors[expr].Expression)) {\n                                  result = Selectors[expr].Callback(match, source, mode, callback);\n\n                                  if ('match' in result) {\n                                    match = result.match;\n                                  }\n\n                                  vars = result.modvar;\n\n                                  if (mode) {\n                                    // add extra select() vars\n                                    vars && S_VARS.indexOf(vars) < 0 && (S_VARS[S_VARS.length] = vars);\n                                  } else {\n                                    // add extra match() vars\n                                    vars && M_VARS.indexOf(vars) < 0 && (M_VARS[M_VARS.length] = vars);\n                                  } // extension source code\n\n\n                                  source = result.source; // extension status code\n\n                                  status = result.status; // break on status error\n\n                                  if (status) {\n                                    break;\n                                  }\n                                }\n                              }\n\n                              if (!status) {\n                                emit('unknown pseudo-class selector \\'' + selector + '\\'');\n                                return '';\n                              }\n\n                              if (!expr) {\n                                emit('unknown token in selector \\'' + selector + '\\'');\n                                return '';\n                              }\n                            }\n\n          break;\n\n        default:\n          emit('\\'' + selector_string + '\\'' + qsInvalid);\n          break;\n      } // end of switch symbol\n\n\n      if (!match) {\n        emit('\\'' + selector_string + '\\'' + qsInvalid);\n        return '';\n      } // pop last component\n\n\n      selector = match.pop();\n    } // end of while selector\n\n\n    return source;\n  },\n      // replace ':scope' pseudo-class with element references\n  makeref = function (selectors, element) {\n    return selectors.replace(/:scope/i, element.nodeName.toLowerCase() + (element.id ? '#' + element.id : '') + (element.className ? '.' + element.classList[0] : ''));\n  },\n      // equivalent of w3c 'closest' method\n  ancestor = function _closest(selectors, element, callback) {\n    if (/:scope/i.test(selectors)) {\n      selectors = makeref(selectors, element);\n    }\n\n    while (element) {\n      if (match(selectors, element, callback)) break;\n      element = element.parentElement;\n    }\n\n    return element;\n  },\n      match_assert = function (f, element, callback) {\n    for (var i = 0, l = f.length, r = false; l > i; ++i) f[i](element, callback, null, false) && (r = true);\n\n    return r;\n  },\n      match_collect = function (selectors, callback) {\n    for (var i = 0, l = selectors.length, f = []; l > i; ++i) f[i] = compile(selectors[i], false, callback);\n\n    return {\n      factory: f\n    };\n  },\n      // equivalent of w3c 'matches' method\n  match = function _matches(selectors, element, callback) {\n    var expressions, parsed;\n\n    if (element && matchResolvers[selectors]) {\n      return match_assert(matchResolvers[selectors].factory, element, callback);\n    }\n\n    lastMatched = selectors; // arguments validation\n\n    if (arguments.length === 0) {\n      emit(qsNotArgs, TypeError);\n      return Config.VERBOSITY ? undefined : false;\n    } else if (arguments[0] === '') {\n      emit('\\'\\'' + qsInvalid);\n      return Config.VERBOSITY ? undefined : false;\n    } // input NULL or UNDEFINED\n\n\n    if (typeof selectors != 'string') {\n      selectors = '' + selectors;\n    }\n\n    if (/:scope/i.test(selectors)) {\n      selectors = makeref(selectors, element);\n    } // normalize input string\n\n\n    parsed = selectors.replace(/\\x00|\\\\$/g, '\\ufffd').replace(REX.CombineWSP, '\\x20').replace(REX.PseudosWSP, '$1').replace(REX.TabCharWSP, '\\t').replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, ''); // parse, validate and split possible compound selectors\n\n    if ((expressions = parsed.match(reValidator)) && expressions.join('') == parsed) {\n      expressions = parsed.match(REX.SplitGroup);\n\n      if (parsed[parsed.length - 1] == ',') {\n        emit(qsInvalid);\n        return Config.VERBOSITY ? undefined : false;\n      }\n    } else {\n      emit('\\'' + selectors + '\\'' + qsInvalid);\n      return Config.VERBOSITY ? undefined : false;\n    }\n\n    matchResolvers[selectors] = match_collect(expressions, callback);\n    return match_assert(matchResolvers[selectors].factory, element, callback);\n  },\n      // equivalent of w3c 'querySelector' method\n  first = function _querySelector(selectors, context, callback) {\n    if (arguments.length === 0) {\n      emit(qsNotArgs, TypeError);\n    }\n\n    return select(selectors, context, typeof callback == 'function' ? function firstMatch(element) {\n      callback(element);\n      return false;\n    } : function firstMatch() {\n      return false;\n    })[0] || null;\n  },\n      // equivalent of w3c 'querySelectorAll' method\n  select = function _querySelectorAll(selectors, context, callback) {\n    var expressions, nodes, parsed, resolver;\n    context || (context = doc);\n\n    if (selectors) {\n      if (resolver = selectResolvers[selectors]) {\n        if (resolver.context === context && resolver.callback === callback) {\n          var f = resolver.factory,\n              h = resolver.htmlset,\n              n = resolver.nodeset,\n              nodes = [];\n\n          if (n.length > 1) {\n            for (var i = 0, l = n.length, list; l > i; ++i) {\n              list = compat[n[i][0]](context, n[i].slice(1))();\n\n              if (f[i] !== null) {\n                f[i](list, callback, context, nodes);\n              } else {\n                nodes = nodes.concat(list);\n              }\n            }\n\n            if (l > 1 && nodes.length > 1) {\n              nodes.sort(documentOrder);\n              hasDupes && (nodes = unique(nodes));\n            }\n          } else {\n            if (f[0]) {\n              nodes = f[0](h[0](), callback, context, nodes);\n            } else {\n              nodes = h[0]();\n            }\n          }\n\n          return typeof callback == 'function' ? concatCall(nodes, callback) : nodes;\n        }\n      }\n    }\n\n    lastSelected = selectors; // arguments validation\n\n    if (arguments.length === 0) {\n      emit(qsNotArgs, TypeError);\n      return Config.VERBOSITY ? undefined : none;\n    } else if (arguments[0] === '') {\n      emit('\\'\\'' + qsInvalid);\n      return Config.VERBOSITY ? undefined : none;\n    } else if (lastContext !== context) {\n      lastContext = switchContext(context);\n    } // input NULL or UNDEFINED\n\n\n    if (typeof selectors != 'string') {\n      selectors = '' + selectors;\n    }\n\n    if (/:scope/i.test(selectors)) {\n      selectors = makeref(selectors, context);\n    } // normalize input string\n\n\n    parsed = selectors.replace(/\\x00|\\\\$/g, '\\ufffd').replace(REX.CombineWSP, '\\x20').replace(REX.PseudosWSP, '$1').replace(REX.TabCharWSP, '\\t').replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, ''); // parse, validate and split possible compound selectors\n\n    if ((expressions = parsed.match(reValidator)) && expressions.join('') == parsed) {\n      expressions = parsed.match(REX.SplitGroup);\n\n      if (parsed[parsed.length - 1] == ',') {\n        emit(qsInvalid);\n        return Config.VERBOSITY ? undefined : false;\n      }\n    } else {\n      emit('\\'' + selectors + '\\'' + qsInvalid);\n      return Config.VERBOSITY ? undefined : false;\n    } // save/reuse factory and closure collection\n\n\n    selectResolvers[selectors] = collect(expressions, context, callback);\n    nodes = selectResolvers[selectors].results;\n    return typeof callback == 'function' ? concatCall(nodes, callback) : nodes;\n  },\n      // optimize selectors avoiding duplicated checks\n  optimize = function (selector, token) {\n    var index = token.index,\n        length = token[1].length + token[2].length;\n    return selector.slice(0, index) + (' >+~'.indexOf(selector.charAt(index - 1)) > -1 ? ':['.indexOf(selector.charAt(index + length + 1)) > -1 ? '*' : '' : '') + selector.slice(index + length - (token[1] == '*' ? 1 : 0));\n  },\n      // prepare factory resolvers and closure collections\n  collect = function (selectors, context, callback) {\n    var i,\n        l,\n        token,\n        seen = {},\n        factory = [],\n        htmlset = [],\n        nodeset = [],\n        results = [];\n\n    for (i = 0, l = selectors.length; l > i; ++i) {\n      if (!seen[selectors[i]] && (seen[selectors[i]] = true)) {\n        if ((token = selectors[i].match(reOptimizer)) && token[1] != ':') {\n          token[1] || (token[1] = '*');\n          selectors[i] = optimize(selectors[i], token);\n        } else {\n          token = ['', '*', '*'];\n        }\n\n        nodeset[i] = token[1] + token[2];\n        htmlset[i] = compat[token[1]](context, token[2]);\n        factory[i] = compile(selectors[i], true, null);\n\n        if (factory[i]) {\n          factory[i](htmlset[i](), callback, context, results);\n        } else {\n          results = results.concat(htmlset[i]());\n        }\n      }\n    }\n\n    if (l > 1) {\n      results.sort(documentOrder);\n      hasDupes && (results = unique(results));\n    }\n\n    return {\n      callback: callback,\n      context: context,\n      factory: factory,\n      htmlset: htmlset,\n      nodeset: nodeset,\n      results: results\n    };\n  },\n      // QSA placeholders to native references\n  _closest,\n      _matches,\n      _querySelector,\n      _querySelectorAll,\n      // overrides QSA methods (only for browsers)\n  install = function (all) {\n    // save native QSA references\n    _closest = Element.prototype.closest;\n    _matches = Element.prototype.matches;\n    _querySelector = Document.prototype.querySelector;\n    _querySelectorAll = Document.prototype.querySelectorAll;\n\n    Element.prototype.closest = function closest() {\n      var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\n\n      if (!('nodeType' in this)) {\n        emit('\\'closest\\' called on an object that does not implement interface ' + ctor + '.', TypeError);\n      }\n\n      return arguments.length < 1 ? ancestor.apply(this, []) : arguments.length < 2 ? ancestor.apply(this, [arguments[0], this]) : ancestor.apply(this, [arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined]);\n    };\n\n    Element.prototype.matches = function matches() {\n      var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\n\n      if (!('nodeType' in this)) {\n        emit('\\'matches\\' called on an object that does not implement interface ' + ctor + '.', TypeError);\n      }\n\n      return arguments.length < 1 ? match.apply(this, []) : arguments.length < 2 ? match.apply(this, [arguments[0], this]) : match.apply(this, [arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined]);\n    };\n\n    Element.prototype.querySelector = Document.prototype.querySelector = DocumentFragment.prototype.querySelector = function querySelector() {\n      var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\n\n      if (!('nodeType' in this)) {\n        emit('\\'querySelector\\' called on an object that does not implement interface ' + ctor + '.', TypeError);\n      }\n\n      return arguments.length < 1 ? first.apply(this, []) : arguments.length < 2 ? first.apply(this, [arguments[0], this]) : first.apply(this, [arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined]);\n    };\n\n    Element.prototype.querySelectorAll = Document.prototype.querySelectorAll = DocumentFragment.prototype.querySelectorAll = function querySelectorAll() {\n      var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\n\n      if (!('nodeType' in this)) {\n        emit('\\'querySelectorAll\\' called on an object that does not implement interface ' + ctor + '.', TypeError);\n      }\n\n      return arguments.length < 1 ? select.apply(this, []) : arguments.length < 2 ? select.apply(this, [arguments[0], this]) : select.apply(this, [arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined]);\n    };\n\n    if (all) {\n      document.addEventListener('load', function (e) {\n        var c,\n            d,\n            r,\n            s,\n            t = e.target;\n\n        if (/iframe/i.test(t.nodeName)) {\n          c = '(' + Export + ')(this, ' + Factory + ');';\n          d = t.contentDocument;\n          s = d.createElement('script');\n          s.textContent = c + 'NW.Dom.install()';\n          r = d.documentElement;\n          r.removeChild(r.insertBefore(s, r.firstChild));\n        }\n      }, true);\n    }\n  },\n      // restore QSA methods (only for browsers)\n  uninstall = function () {\n    // reinstates QSA native references\n    Element.prototype.closest = _closest;\n    Element.prototype.matches = _matches;\n    Element.prototype.querySelector = Document.prototype.querySelector = DocumentFragment.prototype.querySelector = _querySelector;\n    Element.prototype.querySelectorAll = Document.prototype.querySelectorAll = DocumentFragment.prototype.querySelectorAll = _querySelectorAll;\n  },\n      // empty set\n  none = Array(),\n      // context\n  lastContext,\n      // selector\n  lastMatched,\n      lastSelected,\n      // cached lambdas\n  matchLambdas = {},\n      selectLambdas = {},\n      // cached resolvers\n  matchResolvers = {},\n      selectResolvers = {},\n      // passed to resolvers\n  Snapshot = {\n    doc: doc,\n    from: doc,\n    root: root,\n    byTag: byTag,\n    first: first,\n    match: match,\n    ancestor: ancestor,\n    nthOfType: nthOfType,\n    nthElement: nthElement,\n    hasAttributeNS: hasAttributeNS\n  },\n      // public exported methods/objects\n  Dom = {\n    // exported cache objects\n    lastMatched: lastMatched,\n    lastSelected: lastSelected,\n    matchLambdas: matchLambdas,\n    selectLambdas: selectLambdas,\n    matchResolvers: matchResolvers,\n    selectResolvers: selectResolvers,\n    // exported compiler macros\n    CFG: CFG,\n    M_BODY: M_BODY,\n    S_BODY: S_BODY,\n    M_TEST: M_TEST,\n    S_TEST: S_TEST,\n    // exported engine methods\n    byId: byId,\n    byTag: byTag,\n    byClass: byClass,\n    match: match,\n    first: first,\n    select: select,\n    closest: ancestor,\n    compile: compile,\n    configure: configure,\n    emit: emit,\n    Config: Config,\n    Snapshot: Snapshot,\n    Version: version,\n    install: install,\n    uninstall: uninstall,\n    Operators: Operators,\n    Selectors: Selectors,\n    // register a new selector combinator symbol and its related function resolver\n    registerCombinator: function (combinator, resolver) {\n      var i = 0,\n          l = combinator.length,\n          symbol;\n\n      for (; l > i; ++i) {\n        if (combinator[i] != '=') {\n          symbol = combinator[i];\n          break;\n        }\n      }\n\n      if (CFG.combinators.indexOf(symbol) < 0) {\n        CFG.combinators = CFG.combinators.replace('](', symbol + '](');\n        CFG.combinators = CFG.combinators.replace('])', symbol + '])');\n        Combinators[combinator] = resolver;\n        setIdentifierSyntax();\n      } else {\n        console.warn('Warning: the \\'' + combinator + '\\' combinator is already registered.');\n      }\n    },\n    // register a new attribute operator symbol and its related function resolver\n    registerOperator: function (operator, resolver) {\n      var i = 0,\n          l = operator.length,\n          symbol;\n\n      for (; l > i; ++i) {\n        if (operator[i] != '=') {\n          symbol = operator[i];\n          break;\n        }\n      }\n\n      if (CFG.operators.indexOf(symbol) < 0 && !Operators[operator]) {\n        CFG.operators = CFG.operators.replace(']=', symbol + ']=');\n        Operators[operator] = resolver;\n        setIdentifierSyntax();\n      } else {\n        console.warn('Warning: the \\'' + operator + '\\' operator is already registered.');\n      }\n    },\n    // register a new selector symbol and its related function resolver\n    registerSelector: function (name, rexp, func) {\n      Selectors[name] || (Selectors[name] = {\n        Expression: rexp,\n        Callback: func\n      });\n    }\n  };\n\n  initialize(doc);\n  return Dom;\n});","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/nwsapi/src/nwsapi.js"],"names":["Export","global","factory","module","exports","define","NW","Dom","Factory","version","doc","document","root","documentElement","slice","Array","prototype","WSP","CFG","operators","combinators","NOT","double_enc","single_enc","parens_enc","square_enc","REX","HasEscapes","RegExp","HexNumbers","EscOrQuote","RegExpChar","TrimSpaces","CommaGroup","SplitGroup","FixEscapes","CombineWSP","TabCharWSP","PseudosWSP","STD","combinator","apimethods","namespaces","GROUPS","linguistic","logicalsel","treestruct","locationpc","useraction","structural","inputstate","inputvalue","pseudo_sng","pseudo_dbl","Patterns","children","adjacent","relative","ancestor","universal","namespace","RTL","qsNotArgs","qsInvalid","reNthElem","reNthType","reOptimizer","reValidator","Config","IDS_DUPES","MIXEDCASE","LOGERRORS","VERBOSITY","NAMESPACE","QUIRKS_MODE","HTML_DOCUMENT","ATTR_STD_OPS","HTML_TABLE","Combinators","Selectors","Operators","p1","p2","p3","concatCall","nodes","callback","i","l","length","list","concatList","documentOrder","a","b","hasDupes","compareDocumentPosition","unique","j","hasMixedCaseTagNames","context","ns","api","ownerDocument","namespaceURI","switchContext","force","oldDoc","isHTML","compatMode","indexOf","Snapshot","from","codePointToUTF16","codePoint","lowHex","toString","substr","stringFromCodePoint","String","fromCharCode","fromCodePoint","convertEscapes","str","test","replace","substring","parseInt","unescapeIdentifier","method","compat","c","n","e","f","byId","byTag","byClass","byIdRaw","id","node","next","firstElementChild","nextElementSibling","parentElement","none","all","nodeType","getAttribute","tag","call","toLowerCase","nodeName","cls","reCls","className","hasAttributeNS","name","attr","getAttributeNames","nthElement","idx","len","set","parent","undefined","parents","element","dir","k","nthOfType","Object","contentType","createElement","configure","option","clear","matchResolvers","selectResolvers","setIdentifierSyntax","emit","message","proto","err","DOMException","console","log","initialize","lastContext","identifier","pseudonames","pseudoparms","doublequote","singlequote","attrparser","attrvalues","attributes","attrmatcher","pseudoclass","standardValidator","tagName","attribute","F_INIT","S_HEAD","M_HEAD","S_LOOP","N_LOOP","M_LOOP","S_BODY","N_BODY","M_BODY","S_TAIL","M_TAIL","S_TEST","N_TEST","M_TEST","S_VARS","M_VARS","compile","selector","mode","token","head","loop","macro","source","vars","selectLambdas","matchLambdas","compileSelector","includes","join","Function","expression","not","nested","NS","N","D","expr","match","result","status","symbol","type","selector_string","lastSelected","lastMatched","toUpperCase","prefix","split","Math","abs","hasFocus","Expression","Callback","modvar","pop","makeref","selectors","classList","_closest","match_assert","r","match_collect","_matches","expressions","parsed","arguments","TypeError","first","_querySelector","select","firstMatch","_querySelectorAll","resolver","h","htmlset","nodeset","concat","sort","collect","results","optimize","index","charAt","seen","install","Element","closest","matches","Document","querySelector","querySelectorAll","ctor","getPrototypeOf","__proto__","constructor","apply","DocumentFragment","addEventListener","d","s","t","target","contentDocument","textContent","removeChild","insertBefore","firstChild","uninstall","Version","registerCombinator","warn","registerOperator","operator","registerSelector","rexp","func"],"mappings":"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","sourcesContent":["/*\r\n * Copyright (C) 2007-2019 Diego Perini\r\n * All rights reserved.\r\n *\r\n * nwsapi.js - Fast CSS Selectors API Engine\r\n *\r\n * Author: Diego Perini <diego.perini at gmail com>\r\n * Version: 2.2.0\r\n * Created: 20070722\r\n * Release: 20191102\r\n *\r\n * License:\r\n *  http://javascript.nwbox.com/nwsapi/MIT-LICENSE\r\n * Download:\r\n *  http://javascript.nwbox.com/nwsapi/nwsapi.js\r\n */\r\n\r\n(function Export(global, factory) {\r\n\r\n  'use strict';\r\n\r\n  if (typeof module == 'object' && typeof exports == 'object') {\r\n    module.exports = factory;\r\n  } else if (typeof define == 'function' && define['amd']) {\r\n    define(factory);\r\n  } else {\r\n    global.NW || (global.NW = { });\r\n    global.NW.Dom = factory(global, Export);\r\n  }\r\n\r\n})(this, function Factory(global, Export) {\r\n\r\n  var version = 'nwsapi-2.2.0',\r\n\r\n  doc = global.document,\r\n  root = doc.documentElement,\r\n  slice = Array.prototype.slice,\r\n\r\n  WSP = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\r\n\r\n  CFG = {\r\n    // extensions\r\n    operators: '[~*^$|]=|=',\r\n    combinators: '[\\\\x20\\\\t>+~](?=[^>+~])'\r\n  },\r\n\r\n  NOT = {\r\n    // not enclosed in double/single/parens/square\r\n    double_enc: '(?=(?:[^\"]*[\"][^\"]*[\"])*[^\"]*$)',\r\n    single_enc: \"(?=(?:[^']*['][^']*['])*[^']*$)\",\r\n    parens_enc: '(?![^\\\\x28]*\\\\x29)',\r\n    square_enc: '(?![^\\\\x5b]*\\\\x5d)'\r\n  },\r\n\r\n  REX = {\r\n    // regular expressions\r\n    HasEscapes: RegExp('\\\\\\\\'),\r\n    HexNumbers: RegExp('^[0-9a-fA-F]'),\r\n    EscOrQuote: RegExp('^\\\\\\\\|[\\\\x22\\\\x27]'),\r\n    RegExpChar: RegExp('(?:(?!\\\\\\\\)[\\\\\\\\^$.*+?()[\\\\]{}|\\\\/])', 'g'),\r\n    TrimSpaces: RegExp('[\\\\r\\\\n\\\\f]|^' + WSP + '+|' + WSP + '+$', 'g'),\r\n    CommaGroup: RegExp('(\\\\s*,\\\\s*)' + NOT.square_enc + NOT.parens_enc, 'g'),\r\n    SplitGroup: RegExp('((?:\\\\x28[^\\\\x29]*\\\\x29|\\\\[[^\\\\]]*\\\\]|\\\\\\\\.|[^,])+)', 'g'),\r\n    FixEscapes: RegExp('\\\\\\\\([0-9a-fA-F]{1,6}' + WSP + '?|.)|([\\\\x22\\\\x27])', 'g'),\r\n    CombineWSP: RegExp('[\\\\n\\\\r\\\\f\\\\x20]+' + NOT.single_enc + NOT.double_enc, 'g'),\r\n    TabCharWSP: RegExp('(\\\\x20?\\\\t+\\\\x20?)' + NOT.single_enc + NOT.double_enc, 'g'),\r\n    PseudosWSP: RegExp('\\\\s+([-+])\\\\s+' + NOT.square_enc, 'g')\r\n  },\r\n\r\n  STD = {\r\n    combinator: RegExp('\\\\s?([>+~])\\\\s?', 'g'),\r\n    apimethods: RegExp('^(?:[a-z]+|\\\\*)\\\\|', 'i'),\r\n    namespaces: RegExp('(\\\\*|[a-z]+)\\\\|[-a-z]+', 'i')\r\n  },\r\n\r\n  GROUPS = {\r\n    // pseudo-classes requiring parameters\r\n    linguistic: '(dir|lang)\\\\x28\\\\s?([-\\\\w]{2,})\\\\s?(?:\\\\x29|$)',\r\n    logicalsel: '(matches|not)\\\\x28\\\\s?([^()]*|[^\\\\x28]*\\\\x28[^\\\\x29]*\\\\x29)\\\\s?(?:\\\\x29|$)',\r\n    treestruct: '(nth(?:-last)?(?:-child|-of-type))(?:\\\\x28\\\\s?(even|odd|(?:[-+]?\\\\d*)(?:n\\\\s?[-+]?\\\\s?\\\\d*)?)\\\\s?(?:\\\\x29|$))',\r\n    // pseudo-classes not requiring parameters\r\n    locationpc: '(link|visited|target)\\\\b',\r\n    useraction: '(hover|active|focus|focus-within)\\\\b',\r\n    structural: '(root|empty|(?:(?:first|last|only)(?:-child|-of-type)))\\\\b',\r\n    inputstate: '(enabled|disabled|read-only|read-write|placeholder-shown|default)\\\\b',\r\n    inputvalue: '(checked|indeterminate|required|optional|valid|invalid|in-range|out-of-range)\\\\b',\r\n    // pseudo-elements starting with single colon (:)\r\n    pseudo_sng: '(after|before|first-letter|first-line)\\\\b',\r\n    // pseudo-elements starting with double colon (::)\r\n    pseudo_dbl: ':(after|before|first-letter|first-line|selection|placeholder|-webkit-[-a-zA-Z0-9]{2,})\\\\b'\r\n  },\r\n\r\n  Patterns = {\r\n    // pseudo-classes\r\n    treestruct: RegExp('^:(?:' + GROUPS.treestruct + ')(.*)', 'i'),\r\n    structural: RegExp('^:(?:' + GROUPS.structural + ')(.*)', 'i'),\r\n    linguistic: RegExp('^:(?:' + GROUPS.linguistic + ')(.*)', 'i'),\r\n    useraction: RegExp('^:(?:' + GROUPS.useraction + ')(.*)', 'i'),\r\n    inputstate: RegExp('^:(?:' + GROUPS.inputstate + ')(.*)', 'i'),\r\n    inputvalue: RegExp('^:(?:' + GROUPS.inputvalue + ')(.*)', 'i'),\r\n    locationpc: RegExp('^:(?:' + GROUPS.locationpc + ')(.*)', 'i'),\r\n    logicalsel: RegExp('^:(?:' + GROUPS.logicalsel + ')(.*)', 'i'),\r\n    pseudo_dbl: RegExp('^:(?:' + GROUPS.pseudo_dbl + ')(.*)', 'i'),\r\n    pseudo_sng: RegExp('^:(?:' + GROUPS.pseudo_sng + ')(.*)', 'i'),\r\n    // combinator symbols\r\n    children: RegExp('^' + WSP + '?\\\\>' + WSP + '?(.*)'),\r\n    adjacent: RegExp('^' + WSP + '?\\\\+' + WSP + '?(.*)'),\r\n    relative: RegExp('^' + WSP + '?\\\\~' + WSP + '?(.*)'),\r\n    ancestor: RegExp('^' + WSP + '+(.*)'),\r\n   // universal & namespace\r\n   universal: RegExp('^\\\\*(.*)'),\r\n   namespace: RegExp('^(\\\\w+|\\\\*)?\\\\|(.*)')\r\n  },\r\n\r\n  // regexp to aproximate detection of RTL languages (Arabic)\r\n  RTL = RegExp('^[\\\\u0591-\\\\u08ff\\\\ufb1d-\\\\ufdfd\\\\ufe70-\\\\ufefc ]+$'),\r\n\r\n  // emulate firefox error strings\r\n  qsNotArgs = 'Not enough arguments',\r\n  qsInvalid = ' is not a valid selector',\r\n\r\n  // detect structural pseudo-classes in selectors\r\n  reNthElem = RegExp('(:nth(?:-last)?-child)', 'i'),\r\n  reNthType = RegExp('(:nth(?:-last)?-of-type)', 'i'),\r\n\r\n  // placeholder for global regexp\r\n  reOptimizer,\r\n  reValidator,\r\n\r\n  // special handling configuration flags\r\n  Config = {\r\n    IDS_DUPES: true,\r\n    MIXEDCASE: true,\r\n    LOGERRORS: true,\r\n    VERBOSITY: true\r\n  },\r\n\r\n  NAMESPACE,\r\n  QUIRKS_MODE,\r\n  HTML_DOCUMENT,\r\n\r\n  ATTR_STD_OPS = {\r\n    '=': 1, '^=': 1, '$=': 1, '|=': 1, '*=': 1, '~=': 1\r\n  },\r\n\r\n  HTML_TABLE = {\r\n    'accept': 1, 'accept-charset': 1, 'align': 1, 'alink': 1, 'axis': 1,\r\n    'bgcolor': 1, 'charset': 1, 'checked': 1, 'clear': 1, 'codetype': 1, 'color': 1,\r\n    'compact': 1, 'declare': 1, 'defer': 1, 'dir': 1, 'direction': 1, 'disabled': 1,\r\n    'enctype': 1, 'face': 1, 'frame': 1, 'hreflang': 1, 'http-equiv': 1, 'lang': 1,\r\n    'language': 1, 'link': 1, 'media': 1, 'method': 1, 'multiple': 1, 'nohref': 1,\r\n    'noresize': 1, 'noshade': 1, 'nowrap': 1, 'readonly': 1, 'rel': 1, 'rev': 1,\r\n    'rules': 1, 'scope': 1, 'scrolling': 1, 'selected': 1, 'shape': 1, 'target': 1,\r\n    'text': 1, 'type': 1, 'valign': 1, 'valuetype': 1, 'vlink': 1\r\n  },\r\n\r\n  Combinators = { },\r\n\r\n  Selectors = { },\r\n\r\n  Operators = {\r\n     '=': { p1: '^',\r\n            p2: '$',\r\n            p3: 'true' },\r\n    '^=': { p1: '^',\r\n            p2: '',\r\n            p3: 'true' },\r\n    '$=': { p1: '',\r\n            p2: '$',\r\n            p3: 'true' },\r\n    '*=': { p1: '',\r\n            p2: '',\r\n            p3: 'true' },\r\n    '|=': { p1: '^',\r\n            p2: '(-|$)',\r\n            p3: 'true' },\r\n    '~=': { p1: '(^|\\\\s)',\r\n            p2: '(\\\\s|$)',\r\n            p3: 'true' }\r\n  },\r\n\r\n  concatCall =\r\n    function(nodes, callback) {\r\n      var i = 0, l = nodes.length, list = Array(l);\r\n      while (l > i) {\r\n        if (false === callback(list[i] = nodes[i])) break;\r\n        ++i;\r\n      }\r\n      return list;\r\n    },\r\n\r\n  concatList =\r\n    function(list, nodes) {\r\n      var i = -1, l = nodes.length;\r\n      while (l--) { list[list.length] = nodes[++i]; }\r\n      return list;\r\n    },\r\n\r\n  documentOrder =\r\n    function(a, b) {\r\n      if (!hasDupes && a === b) {\r\n        hasDupes = true;\r\n        return 0;\r\n      }\r\n      return a.compareDocumentPosition(b) & 4 ? -1 : 1;\r\n    },\r\n\r\n  hasDupes = false,\r\n\r\n  unique =\r\n    function(nodes) {\r\n      var i = 0, j = -1, l = nodes.length + 1, list = [ ];\r\n      while (--l) {\r\n        if (nodes[i++] === nodes[i]) continue;\r\n        list[++j] = nodes[i - 1];\r\n      }\r\n      hasDupes = false;\r\n      return list;\r\n    },\r\n\r\n  // check context for mixed content\r\n  hasMixedCaseTagNames =\r\n    function(context) {\r\n      var ns, api = 'getElementsByTagNameNS';\r\n\r\n      // current host context (ownerDocument)\r\n      context = context.ownerDocument || context;\r\n\r\n      // documentElement (root) element namespace or default html/xhtml namespace\r\n      ns = context.documentElement.namespaceURI || 'http://www.w3.org/1999/xhtml';\r\n\r\n      // checking the number of non HTML nodes in the document\r\n      return (context[api]('*', '*').length - context[api](ns, '*').length) > 0;\r\n    },\r\n\r\n  switchContext =\r\n    function(context, force) {\r\n      var oldDoc = doc;\r\n      doc = context.ownerDocument || context;\r\n      if (force || oldDoc !== doc) {\r\n        // force a new check for each document change\r\n        // performed before the next select operation\r\n        root = doc.documentElement;\r\n        HTML_DOCUMENT = isHTML(doc);\r\n        QUIRKS_MODE = HTML_DOCUMENT &&\r\n          doc.compatMode.indexOf('CSS') < 0;\r\n        NAMESPACE = root && root.namespaceURI;\r\n        Snapshot.doc = doc;\r\n        Snapshot.root = root;\r\n      }\r\n      return (Snapshot.from = context);\r\n    },\r\n\r\n  // convert single codepoint to UTF-16 encoding\r\n  codePointToUTF16 =\r\n    function(codePoint) {\r\n      // out of range, use replacement character\r\n      if (codePoint < 1 || codePoint > 0x10ffff ||\r\n        (codePoint > 0xd7ff && codePoint < 0xe000)) {\r\n        return '\\\\ufffd';\r\n      }\r\n      // javascript strings are UTF-16 encoded\r\n      if (codePoint < 0x10000) {\r\n        var lowHex = '000' + codePoint.toString(16);\r\n        return '\\\\u' + lowHex.substr(lowHex.length - 4);\r\n      }\r\n      // supplementary high + low surrogates\r\n      return '\\\\u' + (((codePoint - 0x10000) >> 0x0a) + 0xd800).toString(16) +\r\n             '\\\\u' + (((codePoint - 0x10000) % 0x400) + 0xdc00).toString(16);\r\n    },\r\n\r\n  // convert single codepoint to string\r\n  stringFromCodePoint =\r\n    function(codePoint) {\r\n      // out of range, use replacement character\r\n      if (codePoint < 1 || codePoint > 0x10ffff ||\r\n        (codePoint > 0xd7ff && codePoint < 0xe000)) {\r\n        return '\\ufffd';\r\n      }\r\n      if (codePoint < 0x10000) {\r\n        return String.fromCharCode(codePoint);\r\n      }\r\n      return String.fromCodePoint ?\r\n        String.fromCodePoint(codePoint) :\r\n        String.fromCharCode(\r\n          ((codePoint - 0x10000) >> 0x0a) + 0xd800,\r\n          ((codePoint - 0x10000) % 0x400) + 0xdc00);\r\n    },\r\n\r\n  // convert escape sequence in a CSS string or identifier\r\n  // to javascript string with javascript escape sequences\r\n  convertEscapes =\r\n    function(str) {\r\n      return REX.HasEscapes.test(str) ?\r\n        str.replace(REX.FixEscapes,\r\n          function(substring, p1, p2) {\r\n            // unescaped \" or '\r\n            return p2 ? '\\\\' + p2 :\r\n              // javascript strings are UTF-16 encoded\r\n              REX.HexNumbers.test(p1) ? codePointToUTF16(parseInt(p1, 16)) :\r\n              // \\' \\\"\r\n              REX.EscOrQuote.test(p1) ? substring :\r\n              // \\g \\h \\. \\# etc\r\n              p1;\r\n          }\r\n        ) : str;\r\n    },\r\n\r\n  // convert escape sequence in a CSS string or identifier\r\n  // to javascript string with characters representations\r\n  unescapeIdentifier =\r\n    function(str) {\r\n      return REX.HasEscapes.test(str) ?\r\n        str.replace(REX.FixEscapes,\r\n          function(substring, p1, p2) {\r\n            // unescaped \" or '\r\n            return p2 ? p2 :\r\n              // javascript strings are UTF-16 encoded\r\n              REX.HexNumbers.test(p1) ? stringFromCodePoint(parseInt(p1, 16)) :\r\n              // \\' \\\"\r\n              REX.EscOrQuote.test(p1) ? substring :\r\n              // \\g \\h \\. \\# etc\r\n              p1;\r\n          }\r\n        ) : str;\r\n    },\r\n\r\n  method = {\r\n    '#': 'getElementById',\r\n    '*': 'getElementsByTagName',\r\n    '.': 'getElementsByClassName'\r\n    },\r\n\r\n  compat = {\r\n    '#': function(c, n) { REX.HasEscapes.test(n) && (n = unescapeIdentifier(n)); return function(e, f) { return byId(n, c); }; },\r\n    '*': function(c, n) { REX.HasEscapes.test(n) && (n = unescapeIdentifier(n)); return function(e, f) { return byTag(n, c); }; },\r\n    '.': function(c, n) { REX.HasEscapes.test(n) && (n = unescapeIdentifier(n)); return function(e, f) { return byClass(n, c); }; }\r\n    },\r\n\r\n  // find duplicate ids using iterative walk\r\n  byIdRaw =\r\n    function(id, context) {\r\n      var node = context, nodes = [ ], next = node.firstElementChild;\r\n      while ((node = next)) {\r\n        node.id == id && (nodes[nodes.length] = node);\r\n        if ((next = node.firstElementChild || node.nextElementSibling)) continue;\r\n        while (!next && (node = node.parentElement) && node !== context) {\r\n          next = node.nextElementSibling;\r\n        }\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n  // context agnostic getElementById\r\n  byId =\r\n    function(id, context) {\r\n      var e, nodes, api = method['#'];\r\n\r\n      // duplicates id allowed\r\n      if (Config.IDS_DUPES === false) {\r\n        if (api in context) {\r\n          return (e = context[api](id)) ? [ e ] : none;\r\n        }\r\n      } else {\r\n        if ('all' in context) {\r\n          if ((e = context.all[id])) {\r\n            if (e.nodeType == 1) return e.getAttribute('id') != id ? [ ] : [ e ];\r\n            else if (id == 'length') return (e = context[api](id)) ? [ e ] : none;\r\n            for (i = 0, l = e.length, nodes = [ ]; l > i; ++i) {\r\n              if (e[i].id == id) nodes[nodes.length] = e[i];\r\n            }\r\n            return nodes && nodes.length ? nodes : [ nodes ];\r\n          } else return none;\r\n        }\r\n      }\r\n\r\n      return byIdRaw(id, context);\r\n    },\r\n\r\n  // context agnostic getElementsByTagName\r\n  byTag =\r\n    function(tag, context) {\r\n      var e, nodes, api = method['*'];\r\n      // DOCUMENT_NODE (9) & ELEMENT_NODE (1)\r\n      if (api in context) {\r\n        return slice.call(context[api](tag));\r\n      } else {\r\n        // DOCUMENT_FRAGMENT_NODE (11)\r\n        if ((e = context.firstElementChild)) {\r\n          tag = tag.toLowerCase();\r\n          if (!(e.nextElementSibling || tag == '*' || e.nodeName.toLowerCase() == tag)) {\r\n            return slice.call(e[api](tag));\r\n          } else {\r\n            nodes = [ ];\r\n            do {\r\n              if (tag == '*' || e.nodeName.toLowerCase() == tag) nodes[nodes.length] = e;\r\n              concatList(nodes, e[api](tag));\r\n            } while ((e = e.nextElementSibling));\r\n          }\r\n        } else nodes = none;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n  // context agnostic getElementsByClassName\r\n  byClass =\r\n    function(cls, context) {\r\n      var e, nodes, api = method['.'], reCls;\r\n      // DOCUMENT_NODE (9) & ELEMENT_NODE (1)\r\n      if (api in context) {\r\n        return slice.call(context[api](cls));\r\n      } else {\r\n        // DOCUMENT_FRAGMENT_NODE (11)\r\n        if ((e = context.firstElementChild)) {\r\n          reCls = RegExp('(^|\\\\s)' + cls + '(\\\\s|$)', QUIRKS_MODE ? 'i' : '');\r\n          if (!(e.nextElementSibling || reCls.test(e.className))) {\r\n            return slice.call(e[api](cls));\r\n          } else {\r\n            nodes = [ ];\r\n            do {\r\n              if (reCls.test(e.className)) nodes[nodes.length] = e;\r\n              concatList(nodes, e[api](cls));\r\n            } while ((e = e.nextElementSibling));\r\n          }\r\n        } else nodes = none;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n  // namespace aware hasAttribute\r\n  // helper for XML/XHTML documents\r\n  hasAttributeNS =\r\n    function(e, name) {\r\n      var i, l, attr = e.getAttributeNames();\r\n      name = RegExp(':?' + name + '$', HTML_DOCUMENT ? 'i' : '');\r\n      for (i = 0, l = attr.length; l > i; ++i) {\r\n        if (name.test(attr[i])) return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n  // fast resolver for the :nth-child() and :nth-last-child() pseudo-classes\r\n  nthElement = (function() {\r\n    var idx = 0, len = 0, set = 0, parent = undefined, parents = Array(), nodes = Array();\r\n    return function(element, dir) {\r\n      // ensure caches are emptied after each run, invoking with dir = 2\r\n      if (dir == 2) {\r\n        idx = 0; len = 0; set = 0; nodes.length = 0;\r\n        parents.length = 0; parent = undefined;\r\n        return -1;\r\n      }\r\n      var e, i, j, k, l;\r\n      if (parent === element.parentElement) {\r\n        i = set; j = idx; l = len;\r\n      } else {\r\n        l = parents.length;\r\n        parent = element.parentElement;\r\n        for (i = -1, j = 0, k = l - 1; l > j; ++j, --k) {\r\n          if (parents[j] === parent) { i = j; break; }\r\n          if (parents[k] === parent) { i = k; break; }\r\n        }\r\n        if (i < 0) {\r\n          parents[i = l] = parent;\r\n          l = 0; nodes[i] = Array();\r\n          e = parent && parent.firstElementChild || element;\r\n          while (e) { nodes[i][l] = e; if (e === element) j = l; e = e.nextElementSibling; ++l; }\r\n          set = i; idx = 0; len = l;\r\n          if (l < 2) return l;\r\n        } else {\r\n          l = nodes[i].length;\r\n          set = i;\r\n        }\r\n      }\r\n      if (element !== nodes[i][j] && element !== nodes[i][j = 0]) {\r\n        for (j = 0, e = nodes[i], k = l - 1; l > j; ++j, --k) {\r\n          if (e[j] === element) { break; }\r\n          if (e[k] === element) { j = k; break; }\r\n        }\r\n      }\r\n      idx = j + 1; len = l;\r\n      return dir ? l - j : idx;\r\n    };\r\n  })(),\r\n\r\n  // fast resolver for the :nth-of-type() and :nth-last-of-type() pseudo-classes\r\n  nthOfType = (function() {\r\n    var idx = 0, len = 0, set = 0, parent = undefined, parents = Array(), nodes = Array();\r\n    return function(element, dir) {\r\n      // ensure caches are emptied after each run, invoking with dir = 2\r\n      if (dir == 2) {\r\n        idx = 0; len = 0; set = 0; nodes.length = 0;\r\n        parents.length = 0; parent = undefined;\r\n        return -1;\r\n      }\r\n      var e, i, j, k, l, name = element.nodeName;\r\n      if (nodes[set] && nodes[set][name] && parent === element.parentElement) {\r\n        i = set; j = idx; l = len;\r\n      } else {\r\n        l = parents.length;\r\n        parent = element.parentElement;\r\n        for (i = -1, j = 0, k = l - 1; l > j; ++j, --k) {\r\n          if (parents[j] === parent) { i = j; break; }\r\n          if (parents[k] === parent) { i = k; break; }\r\n        }\r\n        if (i < 0 || !nodes[i][name]) {\r\n          parents[i = l] = parent;\r\n          nodes[i] || (nodes[i] = Object());\r\n          l = 0; nodes[i][name] = Array();\r\n          e = parent && parent.firstElementChild || element;\r\n          while (e) { if (e === element) j = l; if (e.nodeName == name) { nodes[i][name][l] = e; ++l; } e = e.nextElementSibling; }\r\n          set = i; idx = j; len = l;\r\n          if (l < 2) return l;\r\n        } else {\r\n          l = nodes[i][name].length;\r\n          set = i;\r\n        }\r\n      }\r\n      if (element !== nodes[i][name][j] && element !== nodes[i][name][j = 0]) {\r\n        for (j = 0, e = nodes[i][name], k = l - 1; l > j; ++j, --k) {\r\n          if (e[j] === element) { break; }\r\n          if (e[k] === element) { j = k; break; }\r\n        }\r\n      }\r\n      idx = j + 1; len = l;\r\n      return dir ? l - j : idx;\r\n    };\r\n  })(),\r\n\r\n  // check if the document type is HTML\r\n  isHTML =\r\n    function(node) {\r\n      var doc = node.ownerDocument || node;\r\n      return doc.nodeType == 9 &&\r\n        // contentType not in IE <= 11\r\n        'contentType' in doc ?\r\n          doc.contentType.indexOf('/html') > 0 :\r\n          doc.createElement('DiV').nodeName == 'DIV';\r\n    },\r\n\r\n  // configure the engine to use special handling\r\n  configure =\r\n    function(option, clear) {\r\n      if (typeof option == 'string') { return !!Config[option]; }\r\n      if (typeof option != 'object') { return Config; }\r\n      for (var i in option) {\r\n        Config[i] = !!option[i];\r\n      }\r\n      // clear lambda cache\r\n      if (clear) {\r\n        matchResolvers = { };\r\n        selectResolvers = { };\r\n      }\r\n      setIdentifierSyntax();\r\n      return true;\r\n    },\r\n\r\n  // centralized error and exceptions handling\r\n  emit =\r\n    function(message, proto) {\r\n      var err;\r\n      if (Config.VERBOSITY) {\r\n        if (proto) {\r\n          err = new proto(message);\r\n        } else {\r\n          err = new global.DOMException(message, 'SyntaxError');\r\n        }\r\n        throw err;\r\n      }\r\n      if (Config.LOGERRORS && console && console.log) {\r\n        console.log(message);\r\n      }\r\n    },\r\n\r\n  // execute the engine initialization code\r\n  initialize =\r\n    function(doc) {\r\n      setIdentifierSyntax();\r\n      lastContext = switchContext(doc, true);\r\n    },\r\n\r\n  // build validation regexps used by the engine\r\n  setIdentifierSyntax =\r\n    function() {\r\n\r\n      //\r\n      // NOTE: SPECIAL CASES IN CSS SYNTAX PARSING RULES\r\n      //\r\n      // The <EOF-token> https://drafts.csswg.org/css-syntax/#typedef-eof-token\r\n      // allow mangled|unclosed selector syntax at the end of selectors strings\r\n      //\r\n      // Literal equivalent hex representations of the characters: \" ' ` ] )\r\n      //\r\n      //     \\\\x22 = \" - double quotes    \\\\x5b = [ - open square bracket\r\n      //     \\\\x27 = ' - single quote     \\\\x5d = ] - closed square bracket\r\n      //     \\\\x60 = ` - back tick        \\\\x28 = ( - open round parens\r\n      //     \\\\x5c = \\ - back slash       \\\\x29 = ) - closed round parens\r\n      //\r\n      // using hex format prevents false matches of opened/closed instances\r\n      // pairs, coloring breakage and other editors highlightning problems.\r\n      //\r\n\r\n      var identifier =\r\n        // doesn't start with a digit\r\n        '(?=[^0-9])' +\r\n        // can start with double dash\r\n        '(?:-{2}' +\r\n          // may include ascii chars\r\n          '|[a-zA-Z0-9-_]' +\r\n          // non-ascii chars\r\n          '|[^\\\\x00-\\\\x9f]' +\r\n          // escaped chars\r\n          '|\\\\\\\\[^\\\\r\\\\n\\\\f0-9a-fA-F]' +\r\n          // unicode chars\r\n          '|\\\\\\\\[0-9a-fA-F]{1,6}(?:\\\\r\\\\n|\\\\s)?' +\r\n          // any escaped chars\r\n          '|\\\\\\\\.' +\r\n        ')+',\r\n\r\n      pseudonames = '[-\\\\w]+',\r\n      pseudoparms = '(?:[-+]?\\\\d*)(?:n\\\\s?[-+]?\\\\s?\\\\d*)',\r\n      doublequote = '\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(?:\"|$)',\r\n      singlequote = \"'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*(?:'|$)\",\r\n\r\n      attrparser = identifier + '|' + doublequote + '|' + singlequote,\r\n\r\n      attrvalues = '([\\\\x22\\\\x27]?)((?!\\\\3)*|(?:\\\\\\\\?.)*?)(?:\\\\3|$)',\r\n\r\n      attributes =\r\n        '\\\\[' +\r\n          // attribute presence\r\n          '(?:\\\\*\\\\|)?' +\r\n          WSP + '?' +\r\n          '(' + identifier + '(?::' + identifier + ')?)' +\r\n          WSP + '?' +\r\n          '(?:' +\r\n            '(' + CFG.operators + ')' + WSP + '?' +\r\n            '(?:' + attrparser + ')' +\r\n          ')?' +\r\n          // attribute case sensitivity\r\n          WSP + '?' + '(i)?' + WSP + '?' +\r\n        '(?:\\\\]|$)',\r\n\r\n      attrmatcher = attributes.replace(attrparser, attrvalues),\r\n\r\n      pseudoclass =\r\n        '(?:\\\\x28' + WSP + '*' +\r\n          '(?:' + pseudoparms + '?)?|' +\r\n          // universal * &\r\n          // namespace *|*\r\n          '(?:\\\\*|\\\\|)|' +\r\n          '(?:' +\r\n            '(?::' + pseudonames +\r\n            '(?:\\\\x28' + pseudoparms + '?(?:\\\\x29|$))?|' +\r\n          ')|' +\r\n          '(?:[.#]?' + identifier + ')|' +\r\n          '(?:' + attributes + ')' +\r\n          ')+|' +\r\n          '(?:' + WSP + '?,' + WSP + '?)|' +\r\n          '(?:' + WSP + '?)|' +\r\n          '(?:\\\\x29|$))*',\r\n\r\n      standardValidator =\r\n        '(?=' + WSP + '?[^>+~(){}<>])' +\r\n        '(?:' +\r\n          // universal * &\r\n          // namespace *|*\r\n          '(?:\\\\*|\\\\|)|' +\r\n          '(?:[.#]?' + identifier + ')+|' +\r\n          '(?:' + attributes + ')+|' +\r\n          '(?:::?' + pseudonames + pseudoclass + ')|' +\r\n          '(?:' + WSP + '?' + CFG.combinators + WSP + '?)|' +\r\n          '(?:' + WSP + '?,' + WSP + '?)|' +\r\n          '(?:' + WSP + '?)' +\r\n        ')+';\r\n\r\n      // the following global RE is used to return the\r\n      // deepest nodeName in selector strings and then\r\n      // use it to retrieve all possible matching nodes\r\n      // that will be filtered by compiled resolvers\r\n      reOptimizer = RegExp(\r\n        '(?:([.:#*]?)' +\r\n        '(' + identifier + ')' +\r\n        '(?:' +\r\n          ':[-\\\\w]+|' +\r\n          '\\\\[[^\\\\]]+(?:\\\\]|$)|' +\r\n          '\\\\x28[^\\\\x29]+(?:\\\\x29|$)' +\r\n        ')*)$');\r\n\r\n      // global\r\n      reValidator = RegExp(standardValidator, 'g');\r\n\r\n      Patterns.id = RegExp('^#(' + identifier + ')(.*)');\r\n      Patterns.tagName = RegExp('^(' + identifier + ')(.*)');\r\n      Patterns.className = RegExp('^\\\\.(' + identifier + ')(.*)');\r\n      Patterns.attribute = RegExp('^(?:' + attrmatcher + ')(.*)');\r\n    },\r\n\r\n  F_INIT = '\"use strict\";return function Resolver(c,f,x,r)',\r\n\r\n  S_HEAD = 'var e,n,o,j=r.length-1,k=-1',\r\n  M_HEAD = 'var e,n,o',\r\n\r\n  S_LOOP = 'main:while((e=c[++k]))',\r\n  N_LOOP = 'main:while((e=c.item(++k)))',\r\n  M_LOOP = 'e=c;',\r\n\r\n  S_BODY = 'r[++j]=c[k];',\r\n  N_BODY = 'r[++j]=c.item(k);',\r\n  M_BODY = '',\r\n\r\n  S_TAIL = 'continue main;',\r\n  M_TAIL = 'r=true;',\r\n\r\n  S_TEST = 'if(f(c[k])){break main;}',\r\n  N_TEST = 'if(f(c.item(k))){break main;}',\r\n  M_TEST = 'f(c);',\r\n\r\n  S_VARS = [ ],\r\n  M_VARS = [ ],\r\n\r\n  // compile groups or single selector strings into\r\n  // executable functions for matching or selecting\r\n  compile =\r\n    function(selector, mode, callback) {\r\n      var factory, token, head = '', loop = '', macro = '', source = '', vars = '';\r\n\r\n      // 'mode' can be boolean or null\r\n      // true = select / false = match\r\n      // null to use collection.item()\r\n      switch (mode) {\r\n        case true:\r\n          if (selectLambdas[selector]) { return selectLambdas[selector]; }\r\n          macro = S_BODY + (callback ? S_TEST : '') + S_TAIL;\r\n          head = S_HEAD;\r\n          loop = S_LOOP;\r\n          break;\r\n        case false:\r\n          if (matchLambdas[selector]) { return matchLambdas[selector]; }\r\n          macro = M_BODY + (callback ? M_TEST : '') + M_TAIL;\r\n          head = M_HEAD;\r\n          loop = M_LOOP;\r\n          break;\r\n        case null:\r\n          if (selectLambdas[selector]) { return selectLambdas[selector]; }\r\n          macro = N_BODY + (callback ? N_TEST : '') + S_TAIL;\r\n          head = S_HEAD;\r\n          loop = N_LOOP;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      source = compileSelector(selector, macro, mode, callback, false);\r\n\r\n      loop += mode || mode === null ? '{' + source + '}' : source;\r\n\r\n      if (mode || mode === null && selector.includes(':nth')) {\r\n        loop += reNthElem.test(selector) ? 's.nthElement(null, 2);' : '';\r\n        loop += reNthType.test(selector) ? 's.nthOfType(null, 2);' : '';\r\n      }\r\n\r\n      if (S_VARS[0] || M_VARS[0]) {\r\n        vars = ',' + (S_VARS.join(',') || M_VARS.join(','));\r\n        S_VARS.length = 0;\r\n        M_VARS.length = 0;\r\n      }\r\n\r\n      factory = Function('s', F_INIT + '{' + head + vars + ';' + loop + 'return r;}')(Snapshot);\r\n\r\n      return mode || mode === null ? (selectLambdas[selector] = factory) : (matchLambdas[selector] = factory);\r\n    },\r\n\r\n  // build conditional code to check components of selector strings\r\n  compileSelector =\r\n    function(expression, source, mode, callback, not) {\r\n\r\n      // N is the negation pseudo-class flag\r\n      // D is the default inverted negation flag\r\n      var a, b, n, f, i, l, name, nested, NS,\r\n      N = not ? '!' : '', D = not ? '' : '!',\r\n      compat, expr, match, result, status, symbol, test,\r\n      type, selector = expression, selector_string, vars;\r\n\r\n      // original 'select' or 'match' selector string before normalization\r\n      selector_string = mode ? lastSelected : lastMatched;\r\n\r\n      // isolate selector combinators/components and normalize whitespace\r\n      selector = selector.replace(STD.combinator, '$1');//.replace(STD.whitespace, ' ');\r\n\r\n      while (selector) {\r\n\r\n        // get namespace prefix if present or get first char of selector\r\n        symbol = STD.apimethods.test(selector) ? '|' : selector[0];\r\n\r\n        switch (symbol) {\r\n\r\n          // universal resolver\r\n          case '*':\r\n            match = selector.match(Patterns.universal);\r\n            if (N == '!') {\r\n              source = 'if(' + N + 'true' +\r\n                '){' + source + '}';\r\n            }\r\n            break;\r\n\r\n          // id resolver\r\n          case '#':\r\n            match = selector.match(Patterns.id);\r\n            source = 'if(' + N + '(/^' + match[1] + '$/.test(e.getAttribute(\"id\"))' +\r\n              ')){' + source + '}';\r\n            break;\r\n\r\n          // class name resolver\r\n          case '.':\r\n            match = selector.match(Patterns.className);\r\n            compat = (QUIRKS_MODE ? 'i' : '') + '.test(e.getAttribute(\"class\"))';\r\n            source = 'if(' + N + '(/(^|\\\\s)' + match[1] + '(\\\\s|$)/' + compat +\r\n              ')){' + source + '}';\r\n            break;\r\n\r\n          // tag name resolver\r\n          case (/[a-z]/i.test(symbol) ? symbol : undefined):\r\n            match = selector.match(Patterns.tagName);\r\n            source = 'if(' + N + '(e.nodeName' +\r\n              (Config.MIXEDCASE || hasMixedCaseTagNames(doc) ?\r\n                '.toLowerCase()==\"' + match[1].toLowerCase() + '\"' :\r\n                '==\"' + match[1].toUpperCase() + '\"') +\r\n              ')){' + source + '}';\r\n            break;\r\n\r\n          // namespace resolver\r\n          case '|':\r\n            match = selector.match(Patterns.namespace);\r\n            if (match[1] == '*') {\r\n              source = 'if(' + N + 'true){' + source + '}';\r\n            } else if (!match[1]) {\r\n              source = 'if(' + N + '(!e.namespaceURI)){' + source + '}';\r\n            } else if (typeof match[1] == 'string' && root.prefix == match[1]) {\r\n              source = 'if(' + N + '(e.namespaceURI==\"' + NAMESPACE + '\")){' + source + '}';\r\n            } else {\r\n              emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n            }\r\n            break;\r\n\r\n          // attributes resolver\r\n          case '[':\r\n            match = selector.match(Patterns.attribute);\r\n            NS = match[0].match(STD.namespaces);\r\n            name = match[1];\r\n            expr = name.split(':');\r\n            expr = expr.length == 2 ? expr[1] : expr[0];\r\n            if (match[2] && !(test = Operators[match[2]])) {\r\n              emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n              return '';\r\n            }\r\n            if (match[4] === '') {\r\n              test = match[2] == '~=' ?\r\n                { p1: '^\\\\s', p2: '+$', p3: 'true' } :\r\n                  match[2] in ATTR_STD_OPS && match[2] != '~=' ?\r\n                { p1: '^',    p2: '$',  p3: 'true' } : test;\r\n            } else if (match[2] == '~=' && match[4].includes(' ')) {\r\n              // whitespace separated list but value contains space\r\n              source = 'if(' + N + 'false){' + source + '}';\r\n              break;\r\n            } else if (match[4]) {\r\n              match[4] = convertEscapes(match[4]).replace(REX.RegExpChar, '\\\\$&');\r\n            }\r\n            type = match[5] == 'i' || (HTML_DOCUMENT && HTML_TABLE[expr.toLowerCase()]) ? 'i' : '';\r\n            source = 'if(' + N + '(' +\r\n              (!match[2] ? (NS ? 's.hasAttributeNS(e,\"' + name + '\")' : 'e.hasAttribute(\"' + name + '\")') :\r\n              !match[4] && ATTR_STD_OPS[match[2]] && match[2] != '~=' ? 'e.getAttribute(\"' + name + '\")==\"\"' :\r\n              '(/' + test.p1 + match[4] + test.p2 + '/' + type + ').test(e.getAttribute(\"' + name + '\"))==' + test.p3) +\r\n              ')){' + source + '}';\r\n            break;\r\n\r\n          // *** General sibling combinator\r\n          // E ~ F (F relative sibling of E)\r\n          case '~':\r\n            match = selector.match(Patterns.relative);\r\n            source = 'n=e;while((e=e.previousElementSibling)){' + source + '}e=n;';\r\n            break;\r\n          // *** Adjacent sibling combinator\r\n          // E + F (F adiacent sibling of E)\r\n          case '+':\r\n            match = selector.match(Patterns.adjacent);\r\n            source = 'n=e;if((e=e.previousElementSibling)){' + source + '}e=n;';\r\n            break;\r\n          // *** Descendant combinator\r\n          // E F (E ancestor of F)\r\n          case '\\x09':\r\n          case '\\x20':\r\n            match = selector.match(Patterns.ancestor);\r\n            source = 'n=e;while((e=e.parentElement)){' + source + '}e=n;';\r\n            break;\r\n          // *** Child combinator\r\n          // E > F (F children of E)\r\n          case '>':\r\n            match = selector.match(Patterns.children);\r\n            source = 'n=e;if((e=e.parentElement)){' + source + '}e=n;';\r\n            break;\r\n\r\n          // *** user supplied combinators extensions\r\n          case (symbol in Combinators ? symbol : undefined):\r\n            // for other registered combinators extensions\r\n            match[match.length - 1] = '*';\r\n            source = Combinators[symbol](match) + source;\r\n            break;\r\n\r\n          // *** tree-structural pseudo-classes\r\n          // :root, :empty, :first-child, :last-child, :only-child, :first-of-type, :last-of-type, :only-of-type\r\n          case ':':\r\n            if ((match = selector.match(Patterns.structural))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'root':\r\n                  // there can only be one :root element, so exit the loop once found\r\n                  source = 'if(' + N + '(e===s.root)){' + source + (mode ? 'break main;' : '') + '}';\r\n                  break;\r\n                case 'empty':\r\n                  // matches elements that don't contain elements or text nodes\r\n                  source = 'n=e.firstChild;while(n&&!(/1|3/).test(n.nodeType)){n=n.nextSibling}if(' + D + 'n){' + source + '}';\r\n                  break;\r\n\r\n                // *** child-indexed pseudo-classes\r\n                // :first-child, :last-child, :only-child\r\n                case 'only-child':\r\n                  source = 'if(' + N + '(!e.nextElementSibling&&!e.previousElementSibling)){' + source + '}';\r\n                  break;\r\n                case 'last-child':\r\n                  source = 'if(' + N + '(!e.nextElementSibling)){' + source + '}';\r\n                  break;\r\n                case 'first-child':\r\n                  source = 'if(' + N + '(!e.previousElementSibling)){' + source + '}';\r\n                  break;\r\n\r\n                // *** typed child-indexed pseudo-classes\r\n                // :only-of-type, :last-of-type, :first-of-type\r\n                case 'only-of-type':\r\n                  source = 'o=e.nodeName;' +\r\n                    'n=e;while((n=n.nextElementSibling)&&n.nodeName!=o);if(!n){' +\r\n                    'n=e;while((n=n.previousElementSibling)&&n.nodeName!=o);}if(' + D + 'n){' + source + '}';\r\n                  break;\r\n                case 'last-of-type':\r\n                  source = 'n=e;o=e.nodeName;while((n=n.nextElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}';\r\n                  break;\r\n                case 'first-of-type':\r\n                  source = 'n=e;o=e.nodeName;while((n=n.previousElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}';\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** child-indexed & typed child-indexed pseudo-classes\r\n            // :nth-child, :nth-of-type, :nth-last-child, :nth-last-of-type\r\n            else if ((match = selector.match(Patterns.treestruct))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'nth-child':\r\n                case 'nth-of-type':\r\n                case 'nth-last-child':\r\n                case 'nth-last-of-type':\r\n                  expr = /-of-type/i.test(match[1]);\r\n                  if (match[1] && match[2]) {\r\n                    type = /last/i.test(match[1]);\r\n                    if (match[2] == 'n') {\r\n                      source = 'if(' + N + 'true){' + source + '}';\r\n                      break;\r\n                    } else if (match[2] == '1') {\r\n                      test = type ? 'next' : 'previous';\r\n                      source = expr ? 'n=e;o=e.nodeName;' +\r\n                        'while((n=n.' + test + 'ElementSibling)&&n.nodeName!=o);if(' + D + 'n){' + source + '}' :\r\n                        'if(' + N + '!e.' + test + 'ElementSibling){' + source + '}';\r\n                      break;\r\n                    } else if (match[2] == 'even' || match[2] == '2n0' || match[2] == '2n+0' || match[2] == '2n') {\r\n                      test = 'n%2==0';\r\n                    } else if (match[2] == 'odd'  || match[2] == '2n1' || match[2] == '2n+1') {\r\n                      test = 'n%2==1';\r\n                    } else {\r\n                      f = /n/i.test(match[2]);\r\n                      n = match[2].split('n');\r\n                      a = parseInt(n[0], 10) || 0;\r\n                      b = parseInt(n[1], 10) || 0;\r\n                      if (n[0] == '-') { a = -1; }\r\n                      if (n[0] == '+') { a = +1; }\r\n                      test = (b ? '(n' + (b > 0 ? '-' : '+') + Math.abs(b) + ')' : 'n') + '%' + a + '==0' ;\r\n                      test =\r\n                        a >= +1 ? (f ? 'n>' + (b - 1) + (Math.abs(a) != 1 ? '&&' + test : '') : 'n==' + a) :\r\n                        a <= -1 ? (f ? 'n<' + (b + 1) + (Math.abs(a) != 1 ? '&&' + test : '') : 'n==' + a) :\r\n                        a === 0 ? (n[0] ? 'n==' + b : 'n>' + (b - 1)) : 'false';\r\n                    }\r\n                    expr = expr ? 'OfType' : 'Element';\r\n                    type = type ? 'true' : 'false';\r\n                    source = 'n=s.nth' + expr + '(e,' + type + ');if(' + N + '(' + test + ')){' + source + '}';\r\n                  } else {\r\n                    emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  }\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** logical combination pseudo-classes\r\n            // :matches( s1, [ s2, ... ]), :not( s1, [ s2, ... ])\r\n            else if ((match = selector.match(Patterns.logicalsel))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'matches':\r\n                  if (not === true || nested === true) {\r\n                    emit(':matches() pseudo-class cannot be nested');\r\n                  }\r\n                  nested = true;\r\n                  expr = match[2].replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, '');\r\n                  // check nested compound selectors s1, s2\r\n                  expr = match[2].match(REX.SplitGroup);\r\n                  for (i = 0, l = expr.length; l > i; ++i) {\r\n                    expr[i] = expr[i].replace(REX.TrimSpaces, '');\r\n                    source = 'if(s.match(\"' + expr[i].replace(/\\x22/g, '\\\\\"') + '\",e)){' + source + '}';\r\n                  }\r\n                  break;\r\n                case 'not':\r\n                  if (not === true || nested === true) {\r\n                    emit(':not() pseudo-class cannot be nested');\r\n                  }\r\n                  expr = match[2].replace(REX.CommaGroup, ',').replace(REX.TrimSpaces, '');\r\n                  // check nested compound selectors s1, s2\r\n                  expr = match[2].match(REX.SplitGroup);\r\n                  for (i = 0, l = expr.length; l > i; ++i) {\r\n                    expr[i] = expr[i].replace(REX.TrimSpaces, '');\r\n                    source = compileSelector(expr[i], source, false, callback, true);\r\n                  }\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** linguistic pseudo-classes\r\n            // :dir( ltr / rtl ), :lang( en )\r\n            else if ((match = selector.match(Patterns.linguistic))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'dir':\r\n                  source = 'var p;if(' + N + '(' +\r\n                    '(/' + match[2] + '/i.test(e.dir))||(p=s.ancestor(\"[dir]\", e))&&' +\r\n                    '(/' + match[2] + '/i.test(p.dir))||(e.dir==\"\"||e.dir==\"auto\")&&' +\r\n                    '(' + (match[2] == 'ltr' ? '!':'')+ RTL +'.test(e.textContent)))' +\r\n                    '){' + source + '};';\r\n                  break;\r\n                case 'lang':\r\n                  expr = '(?:^|-)' + match[2] + '(?:-|$)';\r\n                  source = 'var p;if(' + N + '(' +\r\n                    '(e.isConnected&&(e.lang==\"\"&&(p=s.ancestor(\"[lang]\",e)))&&' +\r\n                    '(p.lang==\"' + match[2] + '\")||/'+ expr +'/i.test(e.lang)))' +\r\n                    '){' + source + '};';\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** location pseudo-classes\r\n            // :link, :visited, :target\r\n            else if ((match = selector.match(Patterns.locationpc))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'link':\r\n                  source = 'if(' + N + '(/^a|area|link$/i.test(e.nodeName)&&e.hasAttribute(\"href\"))){' + source + '}';\r\n                  break;\r\n                case 'visited':\r\n                  source = 'if(' + N + '(/^a|area|link$/i.test(e.nodeName)&&e.hasAttribute(\"href\")&&e.visited)){' + source + '}';\r\n                  break;\r\n                case 'target':\r\n                  source = 'if(' + N + '((s.doc.compareDocumentPosition(e)&16)&&s.doc.location.hash&&e.id==s.doc.location.hash.slice(1))){' + source + '}';\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** user actions pseudo-classes\r\n            // :hover, :active, :focus\r\n            else if ((match = selector.match(Patterns.useraction))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'hover':\r\n                  source = 'hasFocus' in doc && doc.hasFocus() ?\r\n                    'if(' + N + '(e===s.doc.hoverElement)){' + source + '}' :\r\n                    'if(' + D + 'true){' + source + '}';\r\n                  break;\r\n                case 'active':\r\n                  source = 'hasFocus' in doc && doc.hasFocus() ?\r\n                    'if(' + N + '(e===s.doc.activeElement)){' + source + '}' :\r\n                    'if(' + D + 'true){' + source + '}';\r\n                  break;\r\n                case 'focus':\r\n                  source = 'hasFocus' in doc ?\r\n                    'if(' + N + '(e===s.doc.activeElement&&s.doc.hasFocus()&&(e.type||e.href||typeof e.tabIndex==\"number\"))){' + source + '}' :\r\n                    'if(' + N + '(e===s.doc.activeElement&&(e.type||e.href))){' + source + '}';\r\n                  break;\r\n                case 'focus-within':\r\n                  source = 'hasFocus' in doc ?\r\n                    'n=s.doc.activeElement;while(e){if(e===n||e.parentNode===n)break;}' +\r\n                    'if(' + N + '(e===n&&s.doc.hasFocus()&&(e.type||e.href||typeof e.tabIndex==\"number\"))){' + source + '}' : source;\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** user interface and form pseudo-classes\r\n            // :enabled, :disabled, :read-only, :read-write, :placeholder-shown, :default\r\n            else if ((match = selector.match(Patterns.inputstate))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'enabled':\r\n                  source = 'if(' + N + '((\"form\" in e||/^optgroup$/i.test(e.nodeName))&&\"disabled\" in e &&e.disabled===false' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'disabled':\r\n                  // https://www.w3.org/TR/html5/forms.html#enabling-and-disabling-form-controls:-the-disabled-attribute\r\n                  source = 'if(' + N + '((\"form\" in e||/^optgroup$/i.test(e.nodeName))&&\"disabled\" in e&&' +\r\n                    '(e.disabled===true||(n=s.ancestor(\"fieldset\",e))&&(n=s.first(\"legend\",n))&&!n.contains(e))' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'read-only':\r\n                  source =\r\n                    'if(' + N + '(' +\r\n                      '(/^textarea$/i.test(e.nodeName)&&(e.readOnly||e.disabled))||' +\r\n                      '(\"|password|text|\".includes(\"|\"+e.type+\"|\")&&e.readOnly)' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'read-write':\r\n                  source =\r\n                    'if(' + N + '(' +\r\n                      '((/^textarea$/i.test(e.nodeName)&&!e.readOnly&&!e.disabled)||' +\r\n                      '(\"|password|text|\".includes(\"|\"+e.type+\"|\")&&!e.readOnly&&!e.disabled))||' +\r\n                      '(e.hasAttribute(\"contenteditable\")||(s.doc.designMode==\"on\"))' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'placeholder-shown':\r\n                  source =\r\n                    'if(' + N + '(' +\r\n                      '(/^input|textarea$/i.test(e.nodeName))&&e.hasAttribute(\"placeholder\")&&' +\r\n                      '(\"|textarea|password|number|search|email|text|tel|url|\".includes(\"|\"+e.type+\"|\"))&&' +\r\n                      '(!s.match(\":focus\",e))' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'default':\r\n                  source =\r\n                    'if(' + N + '(\"form\" in e && e.form)){' +\r\n                      'var x=0;n=[];' +\r\n                      'if(e.type==\"image\")n=e.form.getElementsByTagName(\"input\");' +\r\n                      'if(e.type==\"submit\")n=e.form.elements;' +\r\n                      'while(n[x]&&e!==n[x]){' +\r\n                        'if(n[x].type==\"image\")break;' +\r\n                        'if(n[x].type==\"submit\")break;' +\r\n                        'x++;' +\r\n                      '}' +\r\n                    '}' +\r\n                    'if(' + N + '(e.form&&(e===n[x]&&\"|image|submit|\".includes(\"|\"+e.type+\"|\"))||' +\r\n                      '((/^option$/i.test(e.nodeName))&&e.defaultSelected)||' +\r\n                      '((\"|radio|checkbox|\".includes(\"|\"+e.type+\"|\"))&&e.defaultChecked)' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // *** input pseudo-classes (for form validation)\r\n            // :checked, :indeterminate, :valid, :invalid, :in-range, :out-of-range, :required, :optional\r\n            else if ((match = selector.match(Patterns.inputvalue))) {\r\n              match[1] = match[1].toLowerCase();\r\n              switch (match[1]) {\r\n                case 'checked':\r\n                  source = 'if(' + N + '(/^input$/i.test(e.nodeName)&&' +\r\n                    '(\"|radio|checkbox|\".includes(\"|\"+e.type+\"|\")&&e.checked)||' +\r\n                    '(/^option$/i.test(e.nodeName)&&(e.selected||e.checked))' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'indeterminate':\r\n                  source =\r\n                    'if(' + N + '(/^progress$/i.test(e.nodeName)&&!e.hasAttribute(\"value\"))||' +\r\n                      '(/^input$/i.test(e.nodeName)&&(\"checkbox\"==e.type&&e.indeterminate)||' +\r\n                      '(\"radio\"==e.type&&e.name&&!s.first(\"input[name=\"+e.name+\"]:checked\",e.form))' +\r\n                    ')){' + source + '}';\r\n                  break;\r\n                case 'required':\r\n                  source =\r\n                    'if(' + N +\r\n                      '(/^input|select|textarea$/i.test(e.nodeName)&&e.required)' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                case 'optional':\r\n                  source =\r\n                    'if(' + N +\r\n                      '(/^input|select|textarea$/i.test(e.nodeName)&&!e.required)' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                case 'invalid':\r\n                  source =\r\n                    'if(' + N + '((' +\r\n                      '(/^form$/i.test(e.nodeName)&&!e.noValidate)||' +\r\n                      '(e.willValidate&&!e.formNoValidate))&&!e.checkValidity())||' +\r\n                      '(/^fieldset$/i.test(e.nodeName)&&s.first(\":invalid\",e))' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                case 'valid':\r\n                  source =\r\n                    'if(' + N + '((' +\r\n                      '(/^form$/i.test(e.nodeName)&&!e.noValidate)||' +\r\n                      '(e.willValidate&&!e.formNoValidate))&&e.checkValidity())||' +\r\n                      '(/^fieldset$/i.test(e.nodeName)&&s.first(\":valid\",e))' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                case 'in-range':\r\n                  source =\r\n                    'if(' + N +\r\n                      '(/^input$/i.test(e.nodeName))&&' +\r\n                      '(e.willValidate&&!e.formNoValidate)&&' +\r\n                      '(!e.validity.rangeUnderflow&&!e.validity.rangeOverflow)&&' +\r\n                      '(\"|date|datetime-local|month|number|range|time|week|\".includes(\"|\"+e.type+\"|\"))&&' +\r\n                      '(\"range\"==e.type||e.getAttribute(\"min\")||e.getAttribute(\"max\"))' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                case 'out-of-range':\r\n                  source =\r\n                    'if(' + N +\r\n                      '(/^input$/i.test(e.nodeName))&&' +\r\n                      '(e.willValidate&&!e.formNoValidate)&&' +\r\n                      '(e.validity.rangeUnderflow||e.validity.rangeOverflow)&&' +\r\n                      '(\"|date|datetime-local|month|number|range|time|week|\".includes(\"|\"+e.type+\"|\"))&&' +\r\n                      '(\"range\"==e.type||e.getAttribute(\"min\")||e.getAttribute(\"max\"))' +\r\n                    '){' + source + '}';\r\n                  break;\r\n                default:\r\n                  emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n                  break;\r\n              }\r\n            }\r\n\r\n            // allow pseudo-elements starting with single colon (:)\r\n            // :after, :before, :first-letter, :first-line\r\n            else if ((match = selector.match(Patterns.pseudo_sng))) {\r\n              source = 'if(' + D + '(e.nodeType==1)){' + source + '}';\r\n            }\r\n\r\n            // allow pseudo-elements starting with double colon (::)\r\n            // ::after, ::before, ::marker, ::placeholder, ::inactive-selection, ::selection, ::-webkit-<foo-bar>\r\n            else if ((match = selector.match(Patterns.pseudo_dbl))) {\r\n              source = 'if(' + D + '(e.nodeType==1)){' + source + '}';\r\n            }\r\n\r\n            else {\r\n\r\n              // reset\r\n              expr = false;\r\n              status = false;\r\n\r\n              // process registered selector extensions\r\n              for (expr in Selectors) {\r\n                if ((match = selector.match(Selectors[expr].Expression))) {\r\n                  result = Selectors[expr].Callback(match, source, mode, callback);\r\n                  if ('match' in result) { match = result.match; }\r\n                  vars = result.modvar;\r\n                  if (mode) {\r\n                     // add extra select() vars\r\n                     vars && S_VARS.indexOf(vars) < 0 && (S_VARS[S_VARS.length] = vars);\r\n                  } else {\r\n                     // add extra match() vars\r\n                     vars && M_VARS.indexOf(vars) < 0 && (M_VARS[M_VARS.length] = vars);\r\n                  }\r\n                  // extension source code\r\n                  source = result.source;\r\n                  // extension status code\r\n                  status = result.status;\r\n                  // break on status error\r\n                  if (status) { break; }\r\n                }\r\n              }\r\n\r\n              if (!status) {\r\n                emit('unknown pseudo-class selector \\'' + selector + '\\'');\r\n                return '';\r\n              }\r\n\r\n              if (!expr) {\r\n                emit('unknown token in selector \\'' + selector + '\\'');\r\n                return '';\r\n              }\r\n\r\n            }\r\n            break;\r\n\r\n        default:\r\n          emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n          break;\r\n\r\n        }\r\n        // end of switch symbol\r\n\r\n        if (!match) {\r\n          emit('\\'' + selector_string + '\\'' + qsInvalid);\r\n          return '';\r\n        }\r\n\r\n        // pop last component\r\n        selector = match.pop();\r\n      }\r\n      // end of while selector\r\n\r\n      return source;\r\n    },\r\n\r\n  // replace ':scope' pseudo-class with element references\r\n  makeref =\r\n    function(selectors, element) {\r\n      return selectors.replace(/:scope/i,\r\n        element.nodeName.toLowerCase() +\r\n        (element.id ? '#' + element.id : '') +\r\n        (element.className ? '.' + element.classList[0] : ''));\r\n    },\r\n\r\n  // equivalent of w3c 'closest' method\r\n  ancestor =\r\n    function _closest(selectors, element, callback) {\r\n\r\n      if ((/:scope/i).test(selectors)) {\r\n        selectors = makeref(selectors, element);\r\n      }\r\n\r\n      while (element) {\r\n        if (match(selectors, element, callback)) break;\r\n        element = element.parentElement;\r\n      }\r\n      return element;\r\n    },\r\n\r\n  match_assert =\r\n    function(f, element, callback) {\r\n      for (var i = 0, l = f.length, r = false; l > i; ++i)\r\n        f[i](element, callback, null, false) && (r = true);\r\n      return r;\r\n    },\r\n\r\n  match_collect =\r\n    function(selectors, callback) {\r\n      for (var i = 0, l = selectors.length, f = [ ]; l > i; ++i)\r\n        f[i] = compile(selectors[i], false, callback);\r\n      return { factory: f };\r\n    },\r\n\r\n  // equivalent of w3c 'matches' method\r\n  match =\r\n    function _matches(selectors, element, callback) {\r\n\r\n      var expressions, parsed;\r\n\r\n      if (element && matchResolvers[selectors]) {\r\n        return match_assert(matchResolvers[selectors].factory, element, callback);\r\n      }\r\n\r\n      lastMatched = selectors;\r\n\r\n      // arguments validation\r\n      if (arguments.length === 0) {\r\n        emit(qsNotArgs, TypeError);\r\n        return Config.VERBOSITY ? undefined : false;\r\n      } else if (arguments[0] === '') {\r\n        emit('\\'\\'' + qsInvalid);\r\n        return Config.VERBOSITY ? undefined : false;\r\n      }\r\n\r\n      // input NULL or UNDEFINED\r\n      if (typeof selectors != 'string') {\r\n        selectors = '' + selectors;\r\n      }\r\n\r\n      if ((/:scope/i).test(selectors)) {\r\n        selectors = makeref(selectors, element);\r\n      }\r\n\r\n      // normalize input string\r\n      parsed = selectors.\r\n        replace(/\\x00|\\\\$/g, '\\ufffd').\r\n        replace(REX.CombineWSP, '\\x20').\r\n        replace(REX.PseudosWSP, '$1').\r\n        replace(REX.TabCharWSP, '\\t').\r\n        replace(REX.CommaGroup, ',').\r\n        replace(REX.TrimSpaces, '');\r\n\r\n      // parse, validate and split possible compound selectors\r\n      if ((expressions = parsed.match(reValidator)) && expressions.join('') == parsed) {\r\n        expressions = parsed.match(REX.SplitGroup);\r\n        if (parsed[parsed.length - 1] == ',') {\r\n          emit(qsInvalid);\r\n          return Config.VERBOSITY ? undefined : false;\r\n        }\r\n      } else {\r\n        emit('\\'' + selectors + '\\'' + qsInvalid);\r\n        return Config.VERBOSITY ? undefined : false;\r\n      }\r\n\r\n      matchResolvers[selectors] = match_collect(expressions, callback);\r\n\r\n      return match_assert(matchResolvers[selectors].factory, element, callback);\r\n    },\r\n\r\n  // equivalent of w3c 'querySelector' method\r\n  first =\r\n    function _querySelector(selectors, context, callback) {\r\n      if (arguments.length === 0) {\r\n        emit(qsNotArgs, TypeError);\r\n      }\r\n      return select(selectors, context,\r\n        typeof callback == 'function' ?\r\n        function firstMatch(element) {\r\n          callback(element);\r\n          return false;\r\n        } :\r\n        function firstMatch() {\r\n          return false;\r\n        }\r\n      )[0] || null;\r\n    },\r\n\r\n  // equivalent of w3c 'querySelectorAll' method\r\n  select =\r\n    function _querySelectorAll(selectors, context, callback) {\r\n\r\n      var expressions, nodes, parsed, resolver;\r\n\r\n      context || (context = doc);\r\n\r\n      if (selectors) {\r\n        if ((resolver = selectResolvers[selectors])) {\r\n          if (resolver.context === context && resolver.callback === callback) {\r\n            var f = resolver.factory, h = resolver.htmlset, n = resolver.nodeset, nodes = [ ];\r\n            if (n.length > 1) {\r\n              for (var i = 0, l = n.length, list; l > i; ++i) {\r\n                list = compat[n[i][0]](context, n[i].slice(1))();\r\n                if (f[i] !== null) {\r\n                  f[i](list, callback, context, nodes);\r\n                } else {\r\n                  nodes = nodes.concat(list);\r\n                }\r\n              }\r\n              if (l > 1 && nodes.length > 1) {\r\n                nodes.sort(documentOrder);\r\n                hasDupes && (nodes = unique(nodes));\r\n              }\r\n            } else {\r\n              if (f[0]) {\r\n                nodes = f[0](h[0](), callback, context, nodes);\r\n              } else {\r\n                nodes = h[0]();\r\n              }\r\n            }\r\n            return typeof callback == 'function' ?\r\n              concatCall(nodes, callback) : nodes;\r\n          }\r\n        }\r\n      }\r\n\r\n      lastSelected = selectors;\r\n\r\n      // arguments validation\r\n      if (arguments.length === 0) {\r\n        emit(qsNotArgs, TypeError);\r\n        return Config.VERBOSITY ? undefined : none;\r\n      } else if (arguments[0] === '') {\r\n        emit('\\'\\'' + qsInvalid);\r\n        return Config.VERBOSITY ? undefined : none;\r\n      } else if (lastContext !== context) {\r\n        lastContext = switchContext(context);\r\n      }\r\n\r\n      // input NULL or UNDEFINED\r\n      if (typeof selectors != 'string') {\r\n        selectors = '' + selectors;\r\n      }\r\n\r\n      if ((/:scope/i).test(selectors)) {\r\n        selectors = makeref(selectors, context);\r\n      }\r\n\r\n      // normalize input string\r\n      parsed = selectors.\r\n        replace(/\\x00|\\\\$/g, '\\ufffd').\r\n        replace(REX.CombineWSP, '\\x20').\r\n        replace(REX.PseudosWSP, '$1').\r\n        replace(REX.TabCharWSP, '\\t').\r\n        replace(REX.CommaGroup, ',').\r\n        replace(REX.TrimSpaces, '');\r\n\r\n      // parse, validate and split possible compound selectors\r\n      if ((expressions = parsed.match(reValidator)) && expressions.join('') == parsed) {\r\n        expressions = parsed.match(REX.SplitGroup);\r\n        if (parsed[parsed.length - 1] == ',') {\r\n          emit(qsInvalid);\r\n          return Config.VERBOSITY ? undefined : false;\r\n        }\r\n      } else {\r\n        emit('\\'' + selectors + '\\'' + qsInvalid);\r\n        return Config.VERBOSITY ? undefined : false;\r\n      }\r\n\r\n      // save/reuse factory and closure collection\r\n      selectResolvers[selectors] = collect(expressions, context, callback);\r\n\r\n      nodes = selectResolvers[selectors].results;\r\n\r\n      return typeof callback == 'function' ?\r\n        concatCall(nodes, callback) : nodes;\r\n    },\r\n\r\n  // optimize selectors avoiding duplicated checks\r\n  optimize =\r\n    function(selector, token) {\r\n      var index = token.index,\r\n      length = token[1].length + token[2].length;\r\n      return selector.slice(0, index) +\r\n        (' >+~'.indexOf(selector.charAt(index - 1)) > -1 ?\r\n          (':['.indexOf(selector.charAt(index + length + 1)) > -1 ?\r\n          '*' : '') : '') + selector.slice(index + length - (token[1] == '*' ? 1 : 0));\r\n    },\r\n\r\n  // prepare factory resolvers and closure collections\r\n  collect =\r\n    function(selectors, context, callback) {\r\n      var i, l, token, seen = { }, factory = [ ], htmlset = [ ], nodeset = [ ], results = [ ];\r\n      for (i = 0, l = selectors.length; l > i; ++i) {\r\n        if (!seen[selectors[i]] && (seen[selectors[i]] = true)) {\r\n\r\n          if ((token = selectors[i].match(reOptimizer)) && token[1] != ':') {\r\n            token[1] || (token[1] = '*');\r\n            selectors[i] = optimize(selectors[i], token);\r\n          } else {\r\n            token = ['', '*', '*'];\r\n          }\r\n\r\n          nodeset[i] = token[1] + token[2];\r\n          htmlset[i] = compat[token[1]](context, token[2]);\r\n          factory[i] = compile(selectors[i], true, null);\r\n\r\n          if (factory[i]) {\r\n            factory[i](htmlset[i](), callback, context, results);\r\n          } else {\r\n            results = results.concat(htmlset[i]());\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      if (l > 1) {\r\n        results.sort(documentOrder);\r\n        hasDupes && (results = unique(results));\r\n      }\r\n\r\n      return {\r\n        callback: callback,\r\n        context: context,\r\n        factory: factory,\r\n        htmlset: htmlset,\r\n        nodeset: nodeset,\r\n        results: results\r\n      };\r\n    },\r\n\r\n  // QSA placeholders to native references\r\n  _closest, _matches, _querySelector, _querySelectorAll,\r\n\r\n  // overrides QSA methods (only for browsers)\r\n  install =\r\n    function(all) {\r\n\r\n      // save native QSA references\r\n      _closest = Element.prototype.closest;\r\n      _matches = Element.prototype.matches;\r\n      _querySelector = Document.prototype.querySelector;\r\n      _querySelectorAll = Document.prototype.querySelectorAll;\r\n\r\n      Element.prototype.closest =\r\n        function closest() {\r\n          var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\r\n          if (!('nodeType' in this)) { emit('\\'closest\\' called on an object that does not implement interface ' + ctor + '.', TypeError); }\r\n          return arguments.length < 1 ? ancestor.apply(this, [ ]) :\r\n                 arguments.length < 2 ? ancestor.apply(this, [ arguments[0], this ]) :\r\n                                        ancestor.apply(this, [ arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined ]);\r\n        };\r\n\r\n      Element.prototype.matches =\r\n        function matches() {\r\n          var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\r\n          if (!('nodeType' in this)) { emit('\\'matches\\' called on an object that does not implement interface ' + ctor + '.', TypeError); }\r\n          return arguments.length < 1 ? match.apply(this, [ ]) :\r\n                 arguments.length < 2 ? match.apply(this, [ arguments[0], this ]) :\r\n                                        match.apply(this, [ arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined ]);\r\n        };\r\n\r\n      Element.prototype.querySelector =\r\n      Document.prototype.querySelector =\r\n      DocumentFragment.prototype.querySelector =\r\n        function querySelector() {\r\n          var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\r\n          if (!('nodeType' in this)) { emit('\\'querySelector\\' called on an object that does not implement interface ' + ctor + '.', TypeError); }\r\n          return arguments.length < 1 ? first.apply(this, [ ]) :\r\n                 arguments.length < 2 ? first.apply(this, [ arguments[0], this ]) :\r\n                                        first.apply(this, [ arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined ]);\r\n        };\r\n\r\n      Element.prototype.querySelectorAll =\r\n      Document.prototype.querySelectorAll =\r\n      DocumentFragment.prototype.querySelectorAll =\r\n        function querySelectorAll() {\r\n          var ctor = Object.getPrototypeOf(this).__proto__.__proto__.constructor.name;\r\n          if (!('nodeType' in this)) { emit('\\'querySelectorAll\\' called on an object that does not implement interface ' + ctor + '.', TypeError); }\r\n          return arguments.length < 1 ? select.apply(this, [ ]) :\r\n                 arguments.length < 2 ? select.apply(this, [ arguments[0], this ]) :\r\n                                        select.apply(this, [ arguments[0], this, typeof arguments[1] == 'function' ? arguments[1] : undefined ]);\r\n        };\r\n\r\n      if (all) {\r\n        document.addEventListener('load', function(e) {\r\n          var c, d, r, s, t = e.target;\r\n          if (/iframe/i.test(t.nodeName)) {\r\n            c = '(' + Export + ')(this, ' + Factory + ');'; d = t.contentDocument;\r\n            s = d.createElement('script'); s.textContent = c + 'NW.Dom.install()';\r\n            r = d.documentElement; r.removeChild(r.insertBefore(s, r.firstChild));\r\n          }\r\n        }, true);\r\n      }\r\n\r\n    },\r\n\r\n  // restore QSA methods (only for browsers)\r\n  uninstall =\r\n    function() {\r\n      // reinstates QSA native references\r\n      Element.prototype.closest = _closest;\r\n      Element.prototype.matches = _matches;\r\n      Element.prototype.querySelector =\r\n      Document.prototype.querySelector =\r\n      DocumentFragment.prototype.querySelector = _querySelector;\r\n      Element.prototype.querySelectorAll =\r\n      Document.prototype.querySelectorAll =\r\n      DocumentFragment.prototype.querySelectorAll = _querySelectorAll;\r\n    },\r\n\r\n  // empty set\r\n  none = Array(),\r\n\r\n  // context\r\n  lastContext,\r\n\r\n  // selector\r\n  lastMatched,\r\n  lastSelected,\r\n\r\n  // cached lambdas\r\n  matchLambdas = { },\r\n  selectLambdas = { },\r\n\r\n  // cached resolvers\r\n  matchResolvers = { },\r\n  selectResolvers = { },\r\n\r\n  // passed to resolvers\r\n  Snapshot = {\r\n\r\n    doc: doc,\r\n    from: doc,\r\n    root: root,\r\n\r\n    byTag: byTag,\r\n\r\n    first: first,\r\n    match: match,\r\n\r\n    ancestor: ancestor,\r\n\r\n    nthOfType: nthOfType,\r\n    nthElement: nthElement,\r\n\r\n    hasAttributeNS: hasAttributeNS\r\n  },\r\n\r\n  // public exported methods/objects\r\n  Dom = {\r\n\r\n    // exported cache objects\r\n\r\n    lastMatched: lastMatched,\r\n    lastSelected: lastSelected,\r\n\r\n    matchLambdas: matchLambdas,\r\n    selectLambdas: selectLambdas,\r\n\r\n    matchResolvers: matchResolvers,\r\n    selectResolvers: selectResolvers,\r\n\r\n    // exported compiler macros\r\n\r\n    CFG: CFG,\r\n\r\n    M_BODY: M_BODY,\r\n    S_BODY: S_BODY,\r\n    M_TEST: M_TEST,\r\n    S_TEST: S_TEST,\r\n\r\n    // exported engine methods\r\n\r\n    byId: byId,\r\n    byTag: byTag,\r\n    byClass: byClass,\r\n\r\n    match: match,\r\n    first: first,\r\n    select: select,\r\n    closest: ancestor,\r\n\r\n    compile: compile,\r\n    configure: configure,\r\n\r\n    emit: emit,\r\n    Config: Config,\r\n    Snapshot: Snapshot,\r\n\r\n    Version: version,\r\n\r\n    install: install,\r\n    uninstall: uninstall,\r\n\r\n    Operators: Operators,\r\n    Selectors: Selectors,\r\n\r\n    // register a new selector combinator symbol and its related function resolver\r\n    registerCombinator:\r\n      function(combinator, resolver) {\r\n        var i = 0, l = combinator.length, symbol;\r\n        for (; l > i; ++i) {\r\n          if (combinator[i] != '=') {\r\n            symbol = combinator[i];\r\n            break;\r\n          }\r\n        }\r\n        if (CFG.combinators.indexOf(symbol) < 0) {\r\n          CFG.combinators = CFG.combinators.replace('](', symbol + '](');\r\n          CFG.combinators = CFG.combinators.replace('])', symbol + '])');\r\n          Combinators[combinator] = resolver;\r\n          setIdentifierSyntax();\r\n        } else {\r\n          console.warn('Warning: the \\'' + combinator + '\\' combinator is already registered.');\r\n        }\r\n      },\r\n\r\n    // register a new attribute operator symbol and its related function resolver\r\n    registerOperator:\r\n      function(operator, resolver) {\r\n        var i = 0, l = operator.length, symbol;\r\n        for (; l > i; ++i) {\r\n          if (operator[i] != '=') {\r\n            symbol = operator[i];\r\n            break;\r\n          }\r\n        }\r\n        if (CFG.operators.indexOf(symbol) < 0 && !Operators[operator]) {\r\n          CFG.operators = CFG.operators.replace(']=', symbol + ']=');\r\n          Operators[operator] = resolver;\r\n          setIdentifierSyntax();\r\n        } else {\r\n          console.warn('Warning: the \\'' + operator + '\\' operator is already registered.');\r\n        }\r\n      },\r\n\r\n    // register a new selector symbol and its related function resolver\r\n    registerSelector:\r\n      function(name, rexp, func) {\r\n        Selectors[name] || (Selectors[name] = {\r\n          Expression: rexp,\r\n          Callback: func\r\n        });\r\n      }\r\n\r\n  };\r\n\r\n  initialize(doc);\r\n\r\n  return Dom;\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"script"}