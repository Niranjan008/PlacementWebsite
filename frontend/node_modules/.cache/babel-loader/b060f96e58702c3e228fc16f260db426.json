{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst EventModifierMixinImpl = require(\"./EventModifierMixin-impl\").implementation;\n\nconst UIEventImpl = require(\"./UIEvent-impl\").implementation;\n\nconst KeyboardEventInit = require(\"../generated/KeyboardEventInit\");\n\nclass KeyboardEventImpl extends UIEventImpl {\n  initKeyboardEvent(type, bubbles, cancelable, view, key, location, ctrlKey, altKey, shiftKey, metaKey) {\n    if (this._dispatchFlag) {\n      return;\n    }\n\n    this.initUIEvent(type, bubbles, cancelable, view, 0);\n    this.key = key;\n    this.location = location;\n    this.ctrlKey = ctrlKey;\n    this.altKey = altKey;\n    this.shiftKey = shiftKey;\n    this.metaKey = metaKey;\n  }\n\n}\n\nmixin(KeyboardEventImpl.prototype, EventModifierMixinImpl.prototype);\nKeyboardEventImpl.defaultInit = KeyboardEventInit.convert(undefined);\nmodule.exports = {\n  implementation: KeyboardEventImpl\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/events/KeyboardEvent-impl.js"],"names":["mixin","require","EventModifierMixinImpl","implementation","UIEventImpl","KeyboardEventInit","KeyboardEventImpl","initKeyboardEvent","type","bubbles","cancelable","view","key","location","ctrlKey","altKey","shiftKey","metaKey","_dispatchFlag","initUIEvent","prototype","defaultInit","convert","undefined","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,2BAAD,CAAP,CAAqCE,cAApE;;AACA,MAAMC,WAAW,GAAGH,OAAO,CAAC,gBAAD,CAAP,CAA0BE,cAA9C;;AAEA,MAAME,iBAAiB,GAAGJ,OAAO,CAAC,gCAAD,CAAjC;;AAEA,MAAMK,iBAAN,SAAgCF,WAAhC,CAA4C;AAC1CG,EAAAA,iBAAiB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,QAAvC,EAAiDC,OAAjD,EAA0DC,MAA1D,EAAkEC,QAAlE,EAA4EC,OAA5E,EAAqF;AACpG,QAAI,KAAKC,aAAT,EAAwB;AACtB;AACD;;AAED,SAAKC,WAAL,CAAiBX,IAAjB,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkD,CAAlD;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;AAbyC;;AAe5CjB,KAAK,CAACM,iBAAiB,CAACc,SAAnB,EAA8BlB,sBAAsB,CAACkB,SAArD,CAAL;AACAd,iBAAiB,CAACe,WAAlB,GAAgChB,iBAAiB,CAACiB,OAAlB,CAA0BC,SAA1B,CAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACftB,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\r\n\r\nconst { mixin } = require(\"../../utils\");\r\nconst EventModifierMixinImpl = require(\"./EventModifierMixin-impl\").implementation;\r\nconst UIEventImpl = require(\"./UIEvent-impl\").implementation;\r\n\r\nconst KeyboardEventInit = require(\"../generated/KeyboardEventInit\");\r\n\r\nclass KeyboardEventImpl extends UIEventImpl {\r\n  initKeyboardEvent(type, bubbles, cancelable, view, key, location, ctrlKey, altKey, shiftKey, metaKey) {\r\n    if (this._dispatchFlag) {\r\n      return;\r\n    }\r\n\r\n    this.initUIEvent(type, bubbles, cancelable, view, 0);\r\n    this.key = key;\r\n    this.location = location;\r\n    this.ctrlKey = ctrlKey;\r\n    this.altKey = altKey;\r\n    this.shiftKey = shiftKey;\r\n    this.metaKey = metaKey;\r\n  }\r\n}\r\nmixin(KeyboardEventImpl.prototype, EventModifierMixinImpl.prototype);\r\nKeyboardEventImpl.defaultInit = KeyboardEventInit.convert(undefined);\r\n\r\nmodule.exports = {\r\n  implementation: KeyboardEventImpl\r\n};\r\n"]},"metadata":{},"sourceType":"script"}