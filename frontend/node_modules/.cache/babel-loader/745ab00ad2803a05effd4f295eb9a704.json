{"ast":null,"code":"\"use strict\";\n\nconst {\n  EventEmitter\n} = require(\"events\");\n\nmodule.exports = class VirtualConsole extends EventEmitter {\n  constructor() {\n    super();\n    this.on(\"error\", () => {// If \"error\" event has no listeners,\n      // EventEmitter throws an exception\n    });\n  }\n\n  sendTo(anyConsole, options) {\n    if (options === undefined) {\n      options = {};\n    }\n\n    for (const method of Object.keys(anyConsole)) {\n      if (typeof anyConsole[method] === \"function\") {\n        function onMethodCall() {\n          anyConsole[method](...arguments);\n        }\n\n        this.on(method, onMethodCall);\n      }\n    }\n\n    if (!options.omitJSDOMErrors) {\n      this.on(\"jsdomError\", e => anyConsole.error(e.stack, e.detail));\n    }\n\n    return this;\n  }\n\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/virtual-console.js"],"names":["EventEmitter","require","module","exports","VirtualConsole","constructor","on","sendTo","anyConsole","options","undefined","method","Object","keys","onMethodCall","arguments","omitJSDOMErrors","e","error","stack","detail"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,QAAD,CAAhC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,cAAN,SAA6BJ,YAA7B,CAA0C;AACzDK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,EAAL,CAAQ,OAAR,EAAiB,MAAM,CACrB;AACA;AACD,KAHD;AAID;;AAEDC,EAAAA,MAAM,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC1B,QAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzBD,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,SAAK,MAAME,MAAX,IAAqBC,MAAM,CAACC,IAAP,CAAYL,UAAZ,CAArB,EAA8C;AAC5C,UAAI,OAAOA,UAAU,CAACG,MAAD,CAAjB,KAA8B,UAAlC,EAA8C;AAC5C,iBAASG,YAAT,GAAwB;AACtBN,UAAAA,UAAU,CAACG,MAAD,CAAV,CAAmB,GAAGI,SAAtB;AACD;;AACD,aAAKT,EAAL,CAAQK,MAAR,EAAgBG,YAAhB;AACD;AACF;;AAED,QAAI,CAACL,OAAO,CAACO,eAAb,EAA8B;AAC5B,WAAKV,EAAL,CAAQ,YAAR,EAAsBW,CAAC,IAAIT,UAAU,CAACU,KAAX,CAAiBD,CAAC,CAACE,KAAnB,EAA0BF,CAAC,CAACG,MAA5B,CAA3B;AACD;;AAED,WAAO,IAAP;AACD;;AA7BwD,CAA3D","sourcesContent":["\"use strict\";\r\nconst { EventEmitter } = require(\"events\");\r\n\r\nmodule.exports = class VirtualConsole extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.on(\"error\", () => {\r\n      // If \"error\" event has no listeners,\r\n      // EventEmitter throws an exception\r\n    });\r\n  }\r\n\r\n  sendTo(anyConsole, options) {\r\n    if (options === undefined) {\r\n      options = {};\r\n    }\r\n\r\n    for (const method of Object.keys(anyConsole)) {\r\n      if (typeof anyConsole[method] === \"function\") {\r\n        function onMethodCall() {\r\n          anyConsole[method](...arguments);\r\n        }\r\n        this.on(method, onMethodCall);\r\n      }\r\n    }\r\n\r\n    if (!options.omitJSDOMErrors) {\r\n      this.on(\"jsdomError\", e => anyConsole.error(e.stack, e.detail));\r\n    }\r\n\r\n    return this;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}