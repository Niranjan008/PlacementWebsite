{"ast":null,"code":"\"use strict\";\n\nconst cssom = require(\"cssom\");\n\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\n\nconst {\n  matchesDontThrow\n} = require(\"./selectors\");\n\nconst {\n  forEach,\n  indexOf\n} = Array.prototype;\nlet parsedDefaultStyleSheet; // Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\n\nexports.propertiesWithResolvedValueImplemented = {\n  __proto__: null,\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  visibility: {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  }\n};\n\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n};\n\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n} // Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\n\n\nfunction getCascadedPropertyValue(element, property) {\n  let value = \"\";\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\n    value = rule.style.getPropertyValue(property);\n  });\n  const inlineValue = element.style.getPropertyValue(property);\n\n  if (inlineValue !== \"\" && inlineValue !== null) {\n    value = inlineValue;\n  }\n\n  return value;\n} // https://drafts.csswg.org/css-cascade-4/#specified-value\n\n\nfunction getSpecifiedValue(element, property) {\n  const cascade = getCascadedPropertyValue(element, property);\n\n  if (cascade !== \"\") {\n    return cascade;\n  } // Defaulting\n\n\n  const {\n    initial,\n    inherited\n  } = exports.propertiesWithResolvedValueImplemented[property];\n\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  } // root element without parent element or inherited property\n\n\n  return initial;\n} // https://drafts.csswg.org/css-cascade-4/#computed-value\n\n\nfunction getComputedValue(element, property) {\n  const {\n    computedValue\n  } = exports.propertiesWithResolvedValueImplemented[property];\n\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  }\n\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n} // https://drafts.csswg.org/cssom/#resolved-value\n// Only implements `visibility`\n\n\nexports.getResolvedValue = (element, property) => {\n  // Determined for special case properties, none of which are implemented here.\n  // So we skip to \"any other property: The resolved value is the computed value.\"\n  return getComputedValue(element, property);\n};\n\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js"],"names":["cssom","require","defaultStyleSheet","matchesDontThrow","forEach","indexOf","Array","prototype","parsedDefaultStyleSheet","exports","propertiesWithResolvedValueImplemented","__proto__","visibility","inherited","initial","computedValue","forEachMatchingSheetRuleOfElement","elementImpl","handleRule","handleSheet","sheet","call","cssRules","rule","media","innerRule","matches","parse","_ownerDocument","styleSheets","_list","element","selectorText","getCascadedPropertyValue","property","value","style","getPropertyValue","inlineValue","getSpecifiedValue","cascade","parentElement","getComputedValue","TypeError","getResolvedValue","SHADOW_DOM_PSEUDO_REGEXP"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst cssom = require(\"cssom\");\r\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\r\nconst { matchesDontThrow } = require(\"./selectors\");\r\n\r\nconst { forEach, indexOf } = Array.prototype;\r\n\r\nlet parsedDefaultStyleSheet;\r\n\r\n// Properties for which getResolvedValue is implemented. This is less than\r\n// every supported property.\r\n// https://drafts.csswg.org/indexes/#properties\r\nexports.propertiesWithResolvedValueImplemented = {\r\n  __proto__: null,\r\n\r\n  // https://drafts.csswg.org/css2/visufx.html#visibility\r\n  visibility: {\r\n    inherited: true,\r\n    initial: \"visible\",\r\n    computedValue: \"as-specified\"\r\n  }\r\n};\r\n\r\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\r\n  function handleSheet(sheet) {\r\n    forEach.call(sheet.cssRules, rule => {\r\n      if (rule.media) {\r\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\r\n          forEach.call(rule.cssRules, innerRule => {\r\n            if (matches(innerRule, elementImpl)) {\r\n              handleRule(innerRule);\r\n            }\r\n          });\r\n        }\r\n      } else if (matches(rule, elementImpl)) {\r\n        handleRule(rule);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!parsedDefaultStyleSheet) {\r\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\r\n  }\r\n\r\n  handleSheet(parsedDefaultStyleSheet);\r\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\r\n};\r\n\r\nfunction matches(rule, element) {\r\n  return matchesDontThrow(element, rule.selectorText);\r\n}\r\n\r\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\r\n// based on the previous jsdom implementation of getComputedStyle.\r\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\r\n// or rather specificity is only implemented by the order in which the matching\r\n// rules appear. The last rule is the most specific while the first rule is\r\n// the least specific.\r\nfunction getCascadedPropertyValue(element, property) {\r\n  let value = \"\";\r\n\r\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\r\n    value = rule.style.getPropertyValue(property);\r\n  });\r\n\r\n  const inlineValue = element.style.getPropertyValue(property);\r\n  if (inlineValue !== \"\" && inlineValue !== null) {\r\n    value = inlineValue;\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n// https://drafts.csswg.org/css-cascade-4/#specified-value\r\nfunction getSpecifiedValue(element, property) {\r\n  const cascade = getCascadedPropertyValue(element, property);\r\n\r\n  if (cascade !== \"\") {\r\n    return cascade;\r\n  }\r\n\r\n  // Defaulting\r\n  const { initial, inherited } = exports.propertiesWithResolvedValueImplemented[property];\r\n  if (inherited && element.parentElement !== null) {\r\n    return getComputedValue(element.parentElement, property);\r\n  }\r\n\r\n  // root element without parent element or inherited property\r\n  return initial;\r\n}\r\n\r\n// https://drafts.csswg.org/css-cascade-4/#computed-value\r\nfunction getComputedValue(element, property) {\r\n  const { computedValue } = exports.propertiesWithResolvedValueImplemented[property];\r\n  if (computedValue === \"as-specified\") {\r\n    return getSpecifiedValue(element, property);\r\n  }\r\n\r\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\r\n}\r\n\r\n// https://drafts.csswg.org/cssom/#resolved-value\r\n// Only implements `visibility`\r\nexports.getResolvedValue = (element, property) => {\r\n  // Determined for special case properties, none of which are implemented here.\r\n  // So we skip to \"any other property: The resolved value is the computed value.\"\r\n  return getComputedValue(element, property);\r\n};\r\n\r\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;\r\n"]},"metadata":{},"sourceType":"script"}