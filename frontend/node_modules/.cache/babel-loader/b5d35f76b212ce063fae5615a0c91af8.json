{"ast":null,"code":"\"use strict\";\n\nconst webIDLConversions = require(\"webidl-conversions\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst {\n  HTML_NS\n} = require(\"../helpers/namespaces\");\n\nconst {\n  getHTMLElementInterface\n} = require(\"../helpers/create-element\");\n\nconst {\n  shadowIncludingInclusiveDescendantsIterator\n} = require(\"../helpers/shadow-dom\");\n\nconst {\n  isValidCustomElementName,\n  tryUpgradeElement,\n  enqueueCEUpgradeReaction\n} = require(\"../helpers/custom-elements\");\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst HTMLUnknownElement = require(\"../generated/HTMLUnknownElement\");\n\nconst LIFECYCLE_CALLBACKS = [\"connectedCallback\", \"disconnectedCallback\", \"adoptedCallback\", \"attributeChangedCallback\"];\n\nfunction convertToSequenceDOMString(obj) {\n  if (!obj || !obj[Symbol.iterator]) {\n    throw new TypeError(\"Invalid Sequence\");\n  }\n\n  return Array.from(obj).map(webIDLConversions.DOMString);\n} // Returns true is the passed value is a valid constructor.\n// Borrowed from: https://stackoverflow.com/a/39336206/3832710\n\n\nfunction isConstructor(value) {\n  if (typeof value !== \"function\") {\n    return false;\n  }\n\n  try {\n    const P = new Proxy(value, {\n      construct() {\n        return {};\n      }\n\n    }); // eslint-disable-next-line no-new\n\n    new P();\n    return true;\n  } catch {\n    return false;\n  }\n} // https://html.spec.whatwg.org/#customelementregistry\n\n\nclass CustomElementRegistryImpl {\n  constructor(globalObject) {\n    this._customElementDefinitions = [];\n    this._elementDefinitionIsRunning = false;\n    this._whenDefinedPromiseMap = Object.create(null);\n    this._globalObject = globalObject;\n  } // https://html.spec.whatwg.org/#dom-customelementregistry-define\n\n\n  define(name, ctor, options) {\n    const {\n      _globalObject\n    } = this;\n\n    if (!isConstructor(ctor)) {\n      throw new TypeError(\"Constructor argument is not a constructor.\");\n    }\n\n    if (!isValidCustomElementName(name)) {\n      throw DOMException.create(_globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]);\n    }\n\n    const nameAlreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\n\n    if (nameAlreadyRegistered) {\n      throw DOMException.create(_globalObject, [\"This name has already been registered in the registry.\", \"NotSupportedError\"]);\n    }\n\n    const ctorAlreadyRegistered = this._customElementDefinitions.some(entry => entry.ctor === ctor);\n\n    if (ctorAlreadyRegistered) {\n      throw DOMException.create(_globalObject, [\"This constructor has already been registered in the registry.\", \"NotSupportedError\"]);\n    }\n\n    let localName = name;\n    let extendsOption = null;\n\n    if (options !== undefined && options.extends) {\n      extendsOption = options.extends;\n    }\n\n    if (extendsOption !== null) {\n      if (isValidCustomElementName(extendsOption)) {\n        throw DOMException.create(_globalObject, [\"Option extends value can't be a valid custom element name.\", \"NotSupportedError\"]);\n      }\n\n      const extendsInterface = getHTMLElementInterface(extendsOption);\n\n      if (extendsInterface === HTMLUnknownElement) {\n        throw DOMException.create(_globalObject, [`${extendsOption} is an HTMLUnknownElement.`, \"NotSupportedError\"]);\n      }\n\n      localName = extendsOption;\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw DOMException.create(_globalObject, [\"Invalid nested custom element definition.\", \"NotSupportedError\"]);\n    }\n\n    this._elementDefinitionIsRunning = true;\n    let disableShadow = false;\n    let observedAttributes = [];\n    const lifecycleCallbacks = {\n      connectedCallback: null,\n      disconnectedCallback: null,\n      adoptedCallback: null,\n      attributeChangedCallback: null\n    };\n    let caughtError;\n\n    try {\n      const {\n        prototype\n      } = ctor;\n\n      if (typeof prototype !== \"object\") {\n        throw new TypeError(\"Invalid constructor prototype.\");\n      }\n\n      for (const callbackName of LIFECYCLE_CALLBACKS) {\n        const callbackValue = prototype[callbackName];\n\n        if (callbackValue !== undefined) {\n          lifecycleCallbacks[callbackName] = webIDLConversions.Function(callbackValue);\n        }\n      }\n\n      if (lifecycleCallbacks.attributeChangedCallback !== null) {\n        const observedAttributesIterable = ctor.observedAttributes;\n\n        if (observedAttributesIterable !== undefined) {\n          observedAttributes = convertToSequenceDOMString(observedAttributesIterable);\n        }\n      }\n\n      let disabledFeatures = [];\n      const disabledFeaturesIterable = ctor.disabledFeatures;\n\n      if (disabledFeaturesIterable) {\n        disabledFeatures = convertToSequenceDOMString(disabledFeaturesIterable);\n      }\n\n      disableShadow = disabledFeatures.includes(\"shadow\");\n    } catch (err) {\n      caughtError = err;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    if (caughtError !== undefined) {\n      throw caughtError;\n    }\n\n    const definition = {\n      name,\n      localName,\n      ctor,\n      observedAttributes,\n      lifecycleCallbacks,\n      disableShadow,\n      constructionStack: []\n    };\n\n    this._customElementDefinitions.push(definition);\n\n    const document = idlUtils.implForWrapper(this._globalObject._document);\n    const upgradeCandidates = [];\n\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(document)) {\n      if (candidate._namespaceURI === HTML_NS && candidate._localName === localName && (extendsOption === null || candidate._isValue === name)) {\n        upgradeCandidates.push(candidate);\n      }\n    }\n\n    for (const upgradeCandidate of upgradeCandidates) {\n      enqueueCEUpgradeReaction(upgradeCandidate, definition);\n    }\n\n    if (this._whenDefinedPromiseMap[name] !== undefined) {\n      this._whenDefinedPromiseMap[name].resolve(undefined);\n\n      delete this._whenDefinedPromiseMap[name];\n    }\n  } // https://html.spec.whatwg.org/#dom-customelementregistry-get\n\n\n  get(name) {\n    const definition = this._customElementDefinitions.find(entry => entry.name === name);\n\n    return definition && definition.ctor;\n  } // https://html.spec.whatwg.org/#dom-customelementregistry-whendefined\n\n\n  whenDefined(name) {\n    if (!isValidCustomElementName(name)) {\n      return Promise.reject(DOMException.create(this._globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]));\n    }\n\n    const alreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\n\n    if (alreadyRegistered) {\n      return Promise.resolve();\n    }\n\n    if (this._whenDefinedPromiseMap[name] === undefined) {\n      let resolve;\n      const promise = new Promise(r => {\n        resolve = r;\n      }); // Store the pending Promise along with the extracted resolve callback to actually resolve the returned Promise,\n      // once the custom element is registered.\n\n      this._whenDefinedPromiseMap[name] = {\n        promise,\n        resolve\n      };\n    }\n\n    return this._whenDefinedPromiseMap[name].promise;\n  } // https://html.spec.whatwg.org/#dom-customelementregistry-upgrade\n\n\n  upgrade(root) {\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(root)) {\n      if (candidate.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        tryUpgradeElement(candidate);\n      }\n    }\n  }\n\n}\n\nmodule.exports = {\n  implementation: CustomElementRegistryImpl\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/custom-elements/CustomElementRegistry-impl.js"],"names":["webIDLConversions","require","DOMException","NODE_TYPE","HTML_NS","getHTMLElementInterface","shadowIncludingInclusiveDescendantsIterator","isValidCustomElementName","tryUpgradeElement","enqueueCEUpgradeReaction","idlUtils","HTMLUnknownElement","LIFECYCLE_CALLBACKS","convertToSequenceDOMString","obj","Symbol","iterator","TypeError","Array","from","map","DOMString","isConstructor","value","P","Proxy","construct","CustomElementRegistryImpl","constructor","globalObject","_customElementDefinitions","_elementDefinitionIsRunning","_whenDefinedPromiseMap","Object","create","_globalObject","define","name","ctor","options","nameAlreadyRegistered","some","entry","ctorAlreadyRegistered","localName","extendsOption","undefined","extends","extendsInterface","disableShadow","observedAttributes","lifecycleCallbacks","connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback","caughtError","prototype","callbackName","callbackValue","Function","observedAttributesIterable","disabledFeatures","disabledFeaturesIterable","includes","err","definition","constructionStack","push","document","implForWrapper","_document","upgradeCandidates","candidate","_namespaceURI","_localName","_isValue","upgradeCandidate","resolve","get","find","whenDefined","Promise","reject","alreadyRegistered","promise","r","upgrade","root","nodeType","ELEMENT_NODE","module","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst webIDLConversions = require(\"webidl-conversions\");\r\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\r\n\r\nconst NODE_TYPE = require(\"../node-type\");\r\n\r\nconst { HTML_NS } = require(\"../helpers/namespaces\");\r\nconst { getHTMLElementInterface } = require(\"../helpers/create-element\");\r\nconst { shadowIncludingInclusiveDescendantsIterator } = require(\"../helpers/shadow-dom\");\r\nconst { isValidCustomElementName, tryUpgradeElement, enqueueCEUpgradeReaction } = require(\"../helpers/custom-elements\");\r\n\r\nconst idlUtils = require(\"../generated/utils\");\r\nconst HTMLUnknownElement = require(\"../generated/HTMLUnknownElement\");\r\n\r\nconst LIFECYCLE_CALLBACKS = [\r\n  \"connectedCallback\",\r\n  \"disconnectedCallback\",\r\n  \"adoptedCallback\",\r\n  \"attributeChangedCallback\"\r\n];\r\n\r\nfunction convertToSequenceDOMString(obj) {\r\n  if (!obj || !obj[Symbol.iterator]) {\r\n    throw new TypeError(\"Invalid Sequence\");\r\n  }\r\n\r\n  return Array.from(obj).map(webIDLConversions.DOMString);\r\n}\r\n\r\n// Returns true is the passed value is a valid constructor.\r\n// Borrowed from: https://stackoverflow.com/a/39336206/3832710\r\nfunction isConstructor(value) {\r\n  if (typeof value !== \"function\") {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const P = new Proxy(value, {\r\n      construct() {\r\n        return {};\r\n      }\r\n    });\r\n\r\n    // eslint-disable-next-line no-new\r\n    new P();\r\n\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// https://html.spec.whatwg.org/#customelementregistry\r\nclass CustomElementRegistryImpl {\r\n  constructor(globalObject) {\r\n    this._customElementDefinitions = [];\r\n    this._elementDefinitionIsRunning = false;\r\n    this._whenDefinedPromiseMap = Object.create(null);\r\n\r\n    this._globalObject = globalObject;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-define\r\n  define(name, ctor, options) {\r\n    const { _globalObject } = this;\r\n\r\n    if (!isConstructor(ctor)) {\r\n      throw new TypeError(\"Constructor argument is not a constructor.\");\r\n    }\r\n\r\n    if (!isValidCustomElementName(name)) {\r\n      throw DOMException.create(_globalObject, [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]);\r\n    }\r\n\r\n    const nameAlreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\r\n    if (nameAlreadyRegistered) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"This name has already been registered in the registry.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    const ctorAlreadyRegistered = this._customElementDefinitions.some(entry => entry.ctor === ctor);\r\n    if (ctorAlreadyRegistered) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"This constructor has already been registered in the registry.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    let localName = name;\r\n\r\n    let extendsOption = null;\r\n    if (options !== undefined && options.extends) {\r\n      extendsOption = options.extends;\r\n    }\r\n\r\n    if (extendsOption !== null) {\r\n      if (isValidCustomElementName(extendsOption)) {\r\n        throw DOMException.create(_globalObject, [\r\n          \"Option extends value can't be a valid custom element name.\",\r\n          \"NotSupportedError\"\r\n        ]);\r\n      }\r\n\r\n      const extendsInterface = getHTMLElementInterface(extendsOption);\r\n      if (extendsInterface === HTMLUnknownElement) {\r\n        throw DOMException.create(_globalObject, [\r\n          `${extendsOption} is an HTMLUnknownElement.`,\r\n          \"NotSupportedError\"\r\n        ]);\r\n      }\r\n\r\n      localName = extendsOption;\r\n    }\r\n\r\n    if (this._elementDefinitionIsRunning) {\r\n      throw DOMException.create(_globalObject, [\r\n        \"Invalid nested custom element definition.\",\r\n        \"NotSupportedError\"\r\n      ]);\r\n    }\r\n\r\n    this._elementDefinitionIsRunning = true;\r\n\r\n    let disableShadow = false;\r\n    let observedAttributes = [];\r\n    const lifecycleCallbacks = {\r\n      connectedCallback: null,\r\n      disconnectedCallback: null,\r\n      adoptedCallback: null,\r\n      attributeChangedCallback: null\r\n    };\r\n\r\n    let caughtError;\r\n    try {\r\n      const { prototype } = ctor;\r\n\r\n      if (typeof prototype !== \"object\") {\r\n        throw new TypeError(\"Invalid constructor prototype.\");\r\n      }\r\n\r\n      for (const callbackName of LIFECYCLE_CALLBACKS) {\r\n        const callbackValue = prototype[callbackName];\r\n\r\n        if (callbackValue !== undefined) {\r\n          lifecycleCallbacks[callbackName] = webIDLConversions.Function(callbackValue);\r\n        }\r\n      }\r\n\r\n      if (lifecycleCallbacks.attributeChangedCallback !== null) {\r\n        const observedAttributesIterable = ctor.observedAttributes;\r\n\r\n        if (observedAttributesIterable !== undefined) {\r\n          observedAttributes = convertToSequenceDOMString(observedAttributesIterable);\r\n        }\r\n      }\r\n\r\n      let disabledFeatures = [];\r\n      const disabledFeaturesIterable = ctor.disabledFeatures;\r\n      if (disabledFeaturesIterable) {\r\n        disabledFeatures = convertToSequenceDOMString(disabledFeaturesIterable);\r\n      }\r\n\r\n      disableShadow = disabledFeatures.includes(\"shadow\");\r\n    } catch (err) {\r\n      caughtError = err;\r\n    } finally {\r\n      this._elementDefinitionIsRunning = false;\r\n    }\r\n\r\n    if (caughtError !== undefined) {\r\n      throw caughtError;\r\n    }\r\n\r\n    const definition = {\r\n      name,\r\n      localName,\r\n      ctor,\r\n      observedAttributes,\r\n      lifecycleCallbacks,\r\n      disableShadow,\r\n      constructionStack: []\r\n    };\r\n\r\n    this._customElementDefinitions.push(definition);\r\n\r\n    const document = idlUtils.implForWrapper(this._globalObject._document);\r\n\r\n    const upgradeCandidates = [];\r\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(document)) {\r\n      if (\r\n        (candidate._namespaceURI === HTML_NS && candidate._localName === localName) &&\r\n        (extendsOption === null || candidate._isValue === name)\r\n      ) {\r\n        upgradeCandidates.push(candidate);\r\n      }\r\n    }\r\n\r\n    for (const upgradeCandidate of upgradeCandidates) {\r\n      enqueueCEUpgradeReaction(upgradeCandidate, definition);\r\n    }\r\n\r\n    if (this._whenDefinedPromiseMap[name] !== undefined) {\r\n      this._whenDefinedPromiseMap[name].resolve(undefined);\r\n      delete this._whenDefinedPromiseMap[name];\r\n    }\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-get\r\n  get(name) {\r\n    const definition = this._customElementDefinitions.find(entry => entry.name === name);\r\n    return definition && definition.ctor;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-whendefined\r\n  whenDefined(name) {\r\n    if (!isValidCustomElementName(name)) {\r\n      return Promise.reject(DOMException.create(\r\n        this._globalObject,\r\n        [\"Name argument is not a valid custom element name.\", \"SyntaxError\"]\r\n      ));\r\n    }\r\n\r\n    const alreadyRegistered = this._customElementDefinitions.some(entry => entry.name === name);\r\n    if (alreadyRegistered) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    if (this._whenDefinedPromiseMap[name] === undefined) {\r\n      let resolve;\r\n      const promise = new Promise(r => {\r\n        resolve = r;\r\n      });\r\n\r\n      // Store the pending Promise along with the extracted resolve callback to actually resolve the returned Promise,\r\n      // once the custom element is registered.\r\n      this._whenDefinedPromiseMap[name] = {\r\n        promise,\r\n        resolve\r\n      };\r\n    }\r\n\r\n    return this._whenDefinedPromiseMap[name].promise;\r\n  }\r\n\r\n  // https://html.spec.whatwg.org/#dom-customelementregistry-upgrade\r\n  upgrade(root) {\r\n    for (const candidate of shadowIncludingInclusiveDescendantsIterator(root)) {\r\n      if (candidate.nodeType === NODE_TYPE.ELEMENT_NODE) {\r\n        tryUpgradeElement(candidate);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  implementation: CustomElementRegistryImpl\r\n};\r\n"]},"metadata":{},"sourceType":"script"}