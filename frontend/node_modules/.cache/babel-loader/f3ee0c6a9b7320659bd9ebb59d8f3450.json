{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (typeof value !== \"function\") {\n    throw new TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(...args) {\n    if (new.target !== undefined) {\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\n    }\n\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    callResult = Reflect.apply(value, thisArg, args);\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  }\n\n  invokeTheCallbackFunction.construct = (...args) => {\n    for (let i = 0; i < args.length; i++) {\n      args[i] = utils.tryWrapperForImpl(args[i]);\n    }\n\n    let callResult = Reflect.construct(value, args);\n    callResult = conversions[\"any\"](callResult, {\n      context: context\n    });\n    return callResult;\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/whatwg-url/dist/Function.js"],"names":["conversions","require","utils","exports","convert","value","context","TypeError","invokeTheCallbackFunction","args","new","target","undefined","Error","thisArg","tryWrapperForImpl","callResult","i","length","Reflect","apply","construct","wrapperSymbol","objectReference"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEAE,OAAO,CAACC,OAAR,GAAkB,CAACC,KAAD,EAAQ;AAAEC,EAAAA,OAAO,GAAG;AAAZ,IAAqC,EAA7C,KAAoD;AACpE,MAAI,OAAOD,KAAP,KAAiB,UAArB,EAAiC;AAC/B,UAAM,IAAIE,SAAJ,CAAcD,OAAO,GAAG,oBAAxB,CAAN;AACD;;AAED,WAASE,yBAAT,CAAmC,GAAGC,IAAtC,EAA4C;AAC1C,QAAIC,GAAG,CAACC,MAAJ,KAAeC,SAAnB,EAA8B;AAC5B,YAAM,IAAIC,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,UAAMC,OAAO,GAAGZ,KAAK,CAACa,iBAAN,CAAwB,IAAxB,CAAhB;AACA,QAAIC,UAAJ;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCR,MAAAA,IAAI,CAACQ,CAAD,CAAJ,GAAUf,KAAK,CAACa,iBAAN,CAAwBN,IAAI,CAACQ,CAAD,CAA5B,CAAV;AACD;;AAEDD,IAAAA,UAAU,GAAGG,OAAO,CAACC,KAAR,CAAcf,KAAd,EAAqBS,OAArB,EAA8BL,IAA9B,CAAb;AAEAO,IAAAA,UAAU,GAAGhB,WAAW,CAAC,KAAD,CAAX,CAAmBgB,UAAnB,EAA+B;AAAEV,MAAAA,OAAO,EAAEA;AAAX,KAA/B,CAAb;AAEA,WAAOU,UAAP;AACD;;AAEDR,EAAAA,yBAAyB,CAACa,SAA1B,GAAsC,CAAC,GAAGZ,IAAJ,KAAa;AACjD,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCR,MAAAA,IAAI,CAACQ,CAAD,CAAJ,GAAUf,KAAK,CAACa,iBAAN,CAAwBN,IAAI,CAACQ,CAAD,CAA5B,CAAV;AACD;;AAED,QAAID,UAAU,GAAGG,OAAO,CAACE,SAAR,CAAkBhB,KAAlB,EAAyBI,IAAzB,CAAjB;AAEAO,IAAAA,UAAU,GAAGhB,WAAW,CAAC,KAAD,CAAX,CAAmBgB,UAAnB,EAA+B;AAAEV,MAAAA,OAAO,EAAEA;AAAX,KAA/B,CAAb;AAEA,WAAOU,UAAP;AACD,GAVD;;AAYAR,EAAAA,yBAAyB,CAACN,KAAK,CAACoB,aAAP,CAAzB,GAAiDjB,KAAjD;AACAG,EAAAA,yBAAyB,CAACe,eAA1B,GAA4ClB,KAA5C;AAEA,SAAOG,yBAAP;AACD,CAxCD","sourcesContent":["\"use strict\";\r\n\r\nconst conversions = require(\"webidl-conversions\");\r\nconst utils = require(\"./utils.js\");\r\n\r\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\r\n  if (typeof value !== \"function\") {\r\n    throw new TypeError(context + \" is not a function\");\r\n  }\r\n\r\n  function invokeTheCallbackFunction(...args) {\r\n    if (new.target !== undefined) {\r\n      throw new Error(\"Internal error: invokeTheCallbackFunction is not a constructor\");\r\n    }\r\n\r\n    const thisArg = utils.tryWrapperForImpl(this);\r\n    let callResult;\r\n\r\n    for (let i = 0; i < args.length; i++) {\r\n      args[i] = utils.tryWrapperForImpl(args[i]);\r\n    }\r\n\r\n    callResult = Reflect.apply(value, thisArg, args);\r\n\r\n    callResult = conversions[\"any\"](callResult, { context: context });\r\n\r\n    return callResult;\r\n  }\r\n\r\n  invokeTheCallbackFunction.construct = (...args) => {\r\n    for (let i = 0; i < args.length; i++) {\r\n      args[i] = utils.tryWrapperForImpl(args[i]);\r\n    }\r\n\r\n    let callResult = Reflect.construct(value, args);\r\n\r\n    callResult = conversions[\"any\"](callResult, { context: context });\r\n\r\n    return callResult;\r\n  };\r\n\r\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\r\n  invokeTheCallbackFunction.objectReference = value;\r\n\r\n  return invokeTheCallbackFunction;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}