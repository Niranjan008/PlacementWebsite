{"ast":null,"code":"\"use strict\";\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst {\n  nodeRoot,\n  isFollowing,\n  isInclusiveAncestor\n} = require(\"../helpers/node\"); // Returns 0 if equal, +1 for after and -1 for before\n// https://dom.spec.whatwg.org/#concept-range-bp-after\n\n\nfunction compareBoundaryPointsPosition(bpA, bpB) {\n  const {\n    node: nodeA,\n    offset: offsetA\n  } = bpA;\n  const {\n    node: nodeB,\n    offset: offsetB\n  } = bpB;\n\n  if (nodeRoot(nodeA) !== nodeRoot(nodeB)) {\n    throw new Error(`Internal Error: Boundary points should have the same root!`);\n  }\n\n  if (nodeA === nodeB) {\n    if (offsetA === offsetB) {\n      return 0;\n    } else if (offsetA < offsetB) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  if (isFollowing(nodeA, nodeB)) {\n    return compareBoundaryPointsPosition(bpB, bpA) === -1 ? 1 : -1;\n  }\n\n  if (isInclusiveAncestor(nodeA, nodeB)) {\n    let child = nodeB;\n\n    while (domSymbolTree.parent(child) !== nodeA) {\n      child = domSymbolTree.parent(child);\n    }\n\n    if (domSymbolTree.index(child) < offsetA) {\n      return 1;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = {\n  compareBoundaryPointsPosition\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/range/boundary-point.js"],"names":["domSymbolTree","require","nodeRoot","isFollowing","isInclusiveAncestor","compareBoundaryPointsPosition","bpA","bpB","node","nodeA","offset","offsetA","nodeB","offsetB","Error","child","parent","index","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,+BAAD,CAAjC;;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,IAAiDH,OAAO,CAAC,iBAAD,CAA9D,C,CAEA;AACA;;;AACA,SAASI,6BAAT,CAAuCC,GAAvC,EAA4CC,GAA5C,EAAiD;AAC/C,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,MAAM,EAAEC;AAAvB,MAAmCL,GAAzC;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAEI,KAAR;AAAeF,IAAAA,MAAM,EAAEG;AAAvB,MAAmCN,GAAzC;;AAEA,MAAIL,QAAQ,CAACO,KAAD,CAAR,KAAoBP,QAAQ,CAACU,KAAD,CAAhC,EAAyC;AACvC,UAAM,IAAIE,KAAJ,CAAW,4DAAX,CAAN;AACD;;AAED,MAAIL,KAAK,KAAKG,KAAd,EAAqB;AACnB,QAAID,OAAO,KAAKE,OAAhB,EAAyB;AACvB,aAAO,CAAP;AACD,KAFD,MAEO,IAAIF,OAAO,GAAGE,OAAd,EAAuB;AAC5B,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD;;AAED,MAAIV,WAAW,CAACM,KAAD,EAAQG,KAAR,CAAf,EAA+B;AAC7B,WAAOP,6BAA6B,CAACE,GAAD,EAAMD,GAAN,CAA7B,KAA4C,CAAC,CAA7C,GAAiD,CAAjD,GAAqD,CAAC,CAA7D;AACD;;AAED,MAAIF,mBAAmB,CAACK,KAAD,EAAQG,KAAR,CAAvB,EAAuC;AACrC,QAAIG,KAAK,GAAGH,KAAZ;;AAEA,WAAOZ,aAAa,CAACgB,MAAd,CAAqBD,KAArB,MAAgCN,KAAvC,EAA8C;AAC5CM,MAAAA,KAAK,GAAGf,aAAa,CAACgB,MAAd,CAAqBD,KAArB,CAAR;AACD;;AAED,QAAIf,aAAa,CAACiB,KAAd,CAAoBF,KAApB,IAA6BJ,OAAjC,EAA0C;AACxC,aAAO,CAAP;AACD;AACF;;AAED,SAAO,CAAC,CAAR;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA;AADe,CAAjB","sourcesContent":["\"use strict\";\r\n\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\nconst { nodeRoot, isFollowing, isInclusiveAncestor } = require(\"../helpers/node\");\r\n\r\n// Returns 0 if equal, +1 for after and -1 for before\r\n// https://dom.spec.whatwg.org/#concept-range-bp-after\r\nfunction compareBoundaryPointsPosition(bpA, bpB) {\r\n  const { node: nodeA, offset: offsetA } = bpA;\r\n  const { node: nodeB, offset: offsetB } = bpB;\r\n\r\n  if (nodeRoot(nodeA) !== nodeRoot(nodeB)) {\r\n    throw new Error(`Internal Error: Boundary points should have the same root!`);\r\n  }\r\n\r\n  if (nodeA === nodeB) {\r\n    if (offsetA === offsetB) {\r\n      return 0;\r\n    } else if (offsetA < offsetB) {\r\n      return -1;\r\n    }\r\n\r\n    return 1;\r\n  }\r\n\r\n  if (isFollowing(nodeA, nodeB)) {\r\n    return compareBoundaryPointsPosition(bpB, bpA) === -1 ? 1 : -1;\r\n  }\r\n\r\n  if (isInclusiveAncestor(nodeA, nodeB)) {\r\n    let child = nodeB;\r\n\r\n    while (domSymbolTree.parent(child) !== nodeA) {\r\n      child = domSymbolTree.parent(child);\r\n    }\r\n\r\n    if (domSymbolTree.index(child) < offsetA) {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nmodule.exports = {\r\n  compareBoundaryPointsPosition\r\n};\r\n"]},"metadata":{},"sourceType":"script"}