{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst Document = require(\"./Document.js\");\n\nconst Blob = require(\"./Blob.js\");\n\nconst FormData = require(\"./FormData.js\");\n\nconst XMLHttpRequestResponseType = require(\"./XMLHttpRequestResponseType.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst XMLHttpRequestEventTarget = require(\"./XMLHttpRequestEventTarget.js\");\n\nconst interfaceName = \"XMLHttpRequest\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'XMLHttpRequest'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"XMLHttpRequest\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor XMLHttpRequest is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  XMLHttpRequestEventTarget._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"DedicatedWorker\", \"SharedWorker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.XMLHttpRequestEventTarget === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate XMLHttpRequest before XMLHttpRequestEventTarget\");\n  }\n\n  class XMLHttpRequest extends globalObject.XMLHttpRequestEventTarget {\n    constructor() {\n      return exports.setup(Object.create(new.target.prototype), globalObject, undefined);\n    }\n\n    open(method, url) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'open' on 'XMLHttpRequest': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"ByteString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          break;\n\n        case 3:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"ByteString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            curArg = conversions[\"boolean\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\n            });\n            args.push(curArg);\n          }\n          break;\n\n        case 4:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"ByteString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            curArg = conversions[\"boolean\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[3];\n\n            if (curArg !== undefined) {\n              if (curArg === null || curArg === undefined) {\n                curArg = null;\n              } else {\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 4\"\n                });\n              }\n            } else {\n              curArg = null;\n            }\n\n            args.push(curArg);\n          }\n          break;\n\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"ByteString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            curArg = conversions[\"boolean\"](curArg, {\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[3];\n\n            if (curArg !== undefined) {\n              if (curArg === null || curArg === undefined) {\n                curArg = null;\n              } else {\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 4\"\n                });\n              }\n            } else {\n              curArg = null;\n            }\n\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[4];\n\n            if (curArg !== undefined) {\n              if (curArg === null || curArg === undefined) {\n                curArg = null;\n              } else {\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 5\"\n                });\n              }\n            } else {\n              curArg = null;\n            }\n\n            args.push(curArg);\n          }\n      }\n\n      return esValue[implSymbol].open(...args);\n    }\n\n    setRequestHeader(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setRequestHeader(...args);\n    }\n\n    send() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n\n        if (curArg !== undefined) {\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            if (Document.is(curArg) || Blob.is(curArg) || FormData.is(curArg)) {\n              curArg = utils.implForWrapper(curArg);\n            } else if (utils.isArrayBuffer(curArg)) {} else if (ArrayBuffer.isView(curArg)) {} else {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'send' on 'XMLHttpRequest': parameter 1\"\n              });\n            }\n          }\n        } else {\n          curArg = null;\n        }\n\n        args.push(curArg);\n      }\n      return esValue[implSymbol].send(...args);\n    }\n\n    abort() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].abort();\n    }\n\n    getResponseHeader(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'getResponseHeader' on 'XMLHttpRequest': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'getResponseHeader' on 'XMLHttpRequest': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].getResponseHeader(...args);\n    }\n\n    getAllResponseHeaders() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].getAllResponseHeaders();\n    }\n\n    overrideMimeType(mime) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'overrideMimeType' on 'XMLHttpRequest': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'overrideMimeType' on 'XMLHttpRequest': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].overrideMimeType(...args);\n    }\n\n    get onreadystatechange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onreadystatechange\"]);\n    }\n\n    set onreadystatechange(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = utils.tryImplForWrapper(V);\n      esValue[implSymbol][\"onreadystatechange\"] = V;\n    }\n\n    get readyState() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"readyState\"];\n    }\n\n    get timeout() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"timeout\"];\n    }\n\n    set timeout(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"unsigned long\"](V, {\n        context: \"Failed to set the 'timeout' property on 'XMLHttpRequest': The provided value\"\n      });\n      esValue[implSymbol][\"timeout\"] = V;\n    }\n\n    get withCredentials() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"withCredentials\"];\n    }\n\n    set withCredentials(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"boolean\"](V, {\n        context: \"Failed to set the 'withCredentials' property on 'XMLHttpRequest': The provided value\"\n      });\n      esValue[implSymbol][\"withCredentials\"] = V;\n    }\n\n    get upload() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"upload\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"upload\"]);\n      });\n    }\n\n    get responseURL() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"responseURL\"];\n    }\n\n    get status() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"status\"];\n    }\n\n    get statusText() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"statusText\"];\n    }\n\n    get responseType() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"responseType\"]);\n    }\n\n    set responseType(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = `${V}`;\n\n      if (!XMLHttpRequestResponseType.enumerationValues.has(V)) {\n        return;\n      }\n\n      esValue[implSymbol][\"responseType\"] = V;\n    }\n\n    get response() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"response\"];\n    }\n\n    get responseText() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"responseText\"];\n    }\n\n    get responseXML() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"responseXML\"]);\n    }\n\n  }\n\n  Object.defineProperties(XMLHttpRequest.prototype, {\n    open: {\n      enumerable: true\n    },\n    setRequestHeader: {\n      enumerable: true\n    },\n    send: {\n      enumerable: true\n    },\n    abort: {\n      enumerable: true\n    },\n    getResponseHeader: {\n      enumerable: true\n    },\n    getAllResponseHeaders: {\n      enumerable: true\n    },\n    overrideMimeType: {\n      enumerable: true\n    },\n    onreadystatechange: {\n      enumerable: true\n    },\n    readyState: {\n      enumerable: true\n    },\n    timeout: {\n      enumerable: true\n    },\n    withCredentials: {\n      enumerable: true\n    },\n    upload: {\n      enumerable: true\n    },\n    responseURL: {\n      enumerable: true\n    },\n    status: {\n      enumerable: true\n    },\n    statusText: {\n      enumerable: true\n    },\n    responseType: {\n      enumerable: true\n    },\n    response: {\n      enumerable: true\n    },\n    responseText: {\n      enumerable: true\n    },\n    responseXML: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"XMLHttpRequest\",\n      configurable: true\n    },\n    UNSENT: {\n      value: 0,\n      enumerable: true\n    },\n    OPENED: {\n      value: 1,\n      enumerable: true\n    },\n    HEADERS_RECEIVED: {\n      value: 2,\n      enumerable: true\n    },\n    LOADING: {\n      value: 3,\n      enumerable: true\n    },\n    DONE: {\n      value: 4,\n      enumerable: true\n    }\n  });\n  Object.defineProperties(XMLHttpRequest, {\n    UNSENT: {\n      value: 0,\n      enumerable: true\n    },\n    OPENED: {\n      value: 1,\n      enumerable: true\n    },\n    HEADERS_RECEIVED: {\n      value: 2,\n      enumerable: true\n    },\n    LOADING: {\n      value: 3,\n      enumerable: true\n    },\n    DONE: {\n      value: 4,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = XMLHttpRequest;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: XMLHttpRequest\n  });\n};\n\nconst Impl = require(\"../xhr/XMLHttpRequest-impl.js\");","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/generated/XMLHttpRequest.js"],"names":["conversions","require","utils","Document","Blob","FormData","XMLHttpRequestResponseType","implSymbol","ctorRegistrySymbol","XMLHttpRequestEventTarget","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","XMLHttpRequest","constructor","target","open","method","url","esValue","arguments","length","args","curArg","push","setRequestHeader","name","send","isArrayBuffer","ArrayBuffer","isView","abort","getResponseHeader","getAllResponseHeaders","overrideMimeType","mime","onreadystatechange","tryWrapperForImpl","V","tryImplForWrapper","readyState","timeout","withCredentials","upload","getSameObject","responseURL","status","statusText","responseType","enumerationValues","response","responseText","responseXML","defineProperties","enumerable","Symbol","toStringTag","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","writable"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst conversions = require(\"webidl-conversions\");\r\nconst utils = require(\"./utils.js\");\r\n\r\nconst Document = require(\"./Document.js\");\r\nconst Blob = require(\"./Blob.js\");\r\nconst FormData = require(\"./FormData.js\");\r\nconst XMLHttpRequestResponseType = require(\"./XMLHttpRequestResponseType.js\");\r\nconst implSymbol = utils.implSymbol;\r\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\r\nconst XMLHttpRequestEventTarget = require(\"./XMLHttpRequestEventTarget.js\");\r\n\r\nconst interfaceName = \"XMLHttpRequest\";\r\n\r\nexports.is = value => {\r\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\r\n};\r\nexports.isImpl = value => {\r\n  return utils.isObject(value) && value instanceof Impl.implementation;\r\n};\r\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\r\n  if (exports.is(value)) {\r\n    return utils.implForWrapper(value);\r\n  }\r\n  throw new TypeError(`${context} is not of type 'XMLHttpRequest'.`);\r\n};\r\n\r\nfunction makeWrapper(globalObject) {\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    throw new Error(\"Internal error: invalid global object\");\r\n  }\r\n\r\n  const ctor = globalObject[ctorRegistrySymbol][\"XMLHttpRequest\"];\r\n  if (ctor === undefined) {\r\n    throw new Error(\"Internal error: constructor XMLHttpRequest is not installed on the passed global object\");\r\n  }\r\n\r\n  return Object.create(ctor.prototype);\r\n}\r\n\r\nexports.create = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = makeWrapper(globalObject);\r\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\r\n};\r\n\r\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\r\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\r\n  return utils.implForWrapper(wrapper);\r\n};\r\n\r\nexports._internalSetup = (wrapper, globalObject) => {\r\n  XMLHttpRequestEventTarget._internalSetup(wrapper, globalObject);\r\n};\r\n\r\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\r\n  privateData.wrapper = wrapper;\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper;\r\n};\r\n\r\nexports.new = globalObject => {\r\n  const wrapper = makeWrapper(globalObject);\r\n\r\n  exports._internalSetup(wrapper, globalObject);\r\n  Object.defineProperty(wrapper, implSymbol, {\r\n    value: Object.create(Impl.implementation.prototype),\r\n    configurable: true\r\n  });\r\n\r\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\r\n  if (Impl.init) {\r\n    Impl.init(wrapper[implSymbol]);\r\n  }\r\n  return wrapper[implSymbol];\r\n};\r\n\r\nconst exposed = new Set([\"Window\", \"DedicatedWorker\", \"SharedWorker\"]);\r\n\r\nexports.install = (globalObject, globalNames) => {\r\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\r\n    return;\r\n  }\r\n\r\n  if (globalObject.XMLHttpRequestEventTarget === undefined) {\r\n    throw new Error(\"Internal error: attempting to evaluate XMLHttpRequest before XMLHttpRequestEventTarget\");\r\n  }\r\n  class XMLHttpRequest extends globalObject.XMLHttpRequestEventTarget {\r\n    constructor() {\r\n      return exports.setup(Object.create(new.target.prototype), globalObject, undefined);\r\n    }\r\n\r\n    open(method, url) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      if (arguments.length < 2) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'open' on 'XMLHttpRequest': 2 arguments required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      switch (arguments.length) {\r\n        case 2:\r\n          {\r\n            let curArg = arguments[0];\r\n            curArg = conversions[\"ByteString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[1];\r\n            curArg = conversions[\"USVString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          break;\r\n        case 3:\r\n          {\r\n            let curArg = arguments[0];\r\n            curArg = conversions[\"ByteString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[1];\r\n            curArg = conversions[\"USVString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[2];\r\n            curArg = conversions[\"boolean\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          break;\r\n        case 4:\r\n          {\r\n            let curArg = arguments[0];\r\n            curArg = conversions[\"ByteString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[1];\r\n            curArg = conversions[\"USVString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[2];\r\n            curArg = conversions[\"boolean\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[3];\r\n            if (curArg !== undefined) {\r\n              if (curArg === null || curArg === undefined) {\r\n                curArg = null;\r\n              } else {\r\n                curArg = conversions[\"USVString\"](curArg, {\r\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 4\"\r\n                });\r\n              }\r\n            } else {\r\n              curArg = null;\r\n            }\r\n            args.push(curArg);\r\n          }\r\n          break;\r\n        default:\r\n          {\r\n            let curArg = arguments[0];\r\n            curArg = conversions[\"ByteString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 1\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[1];\r\n            curArg = conversions[\"USVString\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 2\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[2];\r\n            curArg = conversions[\"boolean\"](curArg, {\r\n              context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 3\"\r\n            });\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[3];\r\n            if (curArg !== undefined) {\r\n              if (curArg === null || curArg === undefined) {\r\n                curArg = null;\r\n              } else {\r\n                curArg = conversions[\"USVString\"](curArg, {\r\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 4\"\r\n                });\r\n              }\r\n            } else {\r\n              curArg = null;\r\n            }\r\n            args.push(curArg);\r\n          }\r\n          {\r\n            let curArg = arguments[4];\r\n            if (curArg !== undefined) {\r\n              if (curArg === null || curArg === undefined) {\r\n                curArg = null;\r\n              } else {\r\n                curArg = conversions[\"USVString\"](curArg, {\r\n                  context: \"Failed to execute 'open' on 'XMLHttpRequest': parameter 5\"\r\n                });\r\n              }\r\n            } else {\r\n              curArg = null;\r\n            }\r\n            args.push(curArg);\r\n          }\r\n      }\r\n      return esValue[implSymbol].open(...args);\r\n    }\r\n\r\n    setRequestHeader(name, value) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      if (arguments.length < 2) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': 2 arguments required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"ByteString\"](curArg, {\r\n          context: \"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      {\r\n        let curArg = arguments[1];\r\n        curArg = conversions[\"ByteString\"](curArg, {\r\n          context: \"Failed to execute 'setRequestHeader' on 'XMLHttpRequest': parameter 2\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].setRequestHeader(...args);\r\n    }\r\n\r\n    send() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        if (curArg !== undefined) {\r\n          if (curArg === null || curArg === undefined) {\r\n            curArg = null;\r\n          } else {\r\n            if (Document.is(curArg) || Blob.is(curArg) || FormData.is(curArg)) {\r\n              curArg = utils.implForWrapper(curArg);\r\n            } else if (utils.isArrayBuffer(curArg)) {\r\n            } else if (ArrayBuffer.isView(curArg)) {\r\n            } else {\r\n              curArg = conversions[\"USVString\"](curArg, {\r\n                context: \"Failed to execute 'send' on 'XMLHttpRequest': parameter 1\"\r\n              });\r\n            }\r\n          }\r\n        } else {\r\n          curArg = null;\r\n        }\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].send(...args);\r\n    }\r\n\r\n    abort() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol].abort();\r\n    }\r\n\r\n    getResponseHeader(name) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'getResponseHeader' on 'XMLHttpRequest': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"ByteString\"](curArg, {\r\n          context: \"Failed to execute 'getResponseHeader' on 'XMLHttpRequest': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].getResponseHeader(...args);\r\n    }\r\n\r\n    getAllResponseHeaders() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol].getAllResponseHeaders();\r\n    }\r\n\r\n    overrideMimeType(mime) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      if (arguments.length < 1) {\r\n        throw new TypeError(\r\n          \"Failed to execute 'overrideMimeType' on 'XMLHttpRequest': 1 argument required, but only \" +\r\n            arguments.length +\r\n            \" present.\"\r\n        );\r\n      }\r\n      const args = [];\r\n      {\r\n        let curArg = arguments[0];\r\n        curArg = conversions[\"DOMString\"](curArg, {\r\n          context: \"Failed to execute 'overrideMimeType' on 'XMLHttpRequest': parameter 1\"\r\n        });\r\n        args.push(curArg);\r\n      }\r\n      return esValue[implSymbol].overrideMimeType(...args);\r\n    }\r\n\r\n    get onreadystatechange() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"onreadystatechange\"]);\r\n    }\r\n\r\n    set onreadystatechange(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      V = utils.tryImplForWrapper(V);\r\n\r\n      esValue[implSymbol][\"onreadystatechange\"] = V;\r\n    }\r\n\r\n    get readyState() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"readyState\"];\r\n    }\r\n\r\n    get timeout() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"timeout\"];\r\n    }\r\n\r\n    set timeout(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      V = conversions[\"unsigned long\"](V, {\r\n        context: \"Failed to set the 'timeout' property on 'XMLHttpRequest': The provided value\"\r\n      });\r\n\r\n      esValue[implSymbol][\"timeout\"] = V;\r\n    }\r\n\r\n    get withCredentials() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"withCredentials\"];\r\n    }\r\n\r\n    set withCredentials(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      V = conversions[\"boolean\"](V, {\r\n        context: \"Failed to set the 'withCredentials' property on 'XMLHttpRequest': The provided value\"\r\n      });\r\n\r\n      esValue[implSymbol][\"withCredentials\"] = V;\r\n    }\r\n\r\n    get upload() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return utils.getSameObject(this, \"upload\", () => {\r\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"upload\"]);\r\n      });\r\n    }\r\n\r\n    get responseURL() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"responseURL\"];\r\n    }\r\n\r\n    get status() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"status\"];\r\n    }\r\n\r\n    get statusText() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"statusText\"];\r\n    }\r\n\r\n    get responseType() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"responseType\"]);\r\n    }\r\n\r\n    set responseType(V) {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      V = `${V}`;\r\n      if (!XMLHttpRequestResponseType.enumerationValues.has(V)) {\r\n        return;\r\n      }\r\n\r\n      esValue[implSymbol][\"responseType\"] = V;\r\n    }\r\n\r\n    get response() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"response\"];\r\n    }\r\n\r\n    get responseText() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return esValue[implSymbol][\"responseText\"];\r\n    }\r\n\r\n    get responseXML() {\r\n      const esValue = this !== null && this !== undefined ? this : globalObject;\r\n\r\n      if (!exports.is(esValue)) {\r\n        throw new TypeError(\"Illegal invocation\");\r\n      }\r\n\r\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"responseXML\"]);\r\n    }\r\n  }\r\n  Object.defineProperties(XMLHttpRequest.prototype, {\r\n    open: { enumerable: true },\r\n    setRequestHeader: { enumerable: true },\r\n    send: { enumerable: true },\r\n    abort: { enumerable: true },\r\n    getResponseHeader: { enumerable: true },\r\n    getAllResponseHeaders: { enumerable: true },\r\n    overrideMimeType: { enumerable: true },\r\n    onreadystatechange: { enumerable: true },\r\n    readyState: { enumerable: true },\r\n    timeout: { enumerable: true },\r\n    withCredentials: { enumerable: true },\r\n    upload: { enumerable: true },\r\n    responseURL: { enumerable: true },\r\n    status: { enumerable: true },\r\n    statusText: { enumerable: true },\r\n    responseType: { enumerable: true },\r\n    response: { enumerable: true },\r\n    responseText: { enumerable: true },\r\n    responseXML: { enumerable: true },\r\n    [Symbol.toStringTag]: { value: \"XMLHttpRequest\", configurable: true },\r\n    UNSENT: { value: 0, enumerable: true },\r\n    OPENED: { value: 1, enumerable: true },\r\n    HEADERS_RECEIVED: { value: 2, enumerable: true },\r\n    LOADING: { value: 3, enumerable: true },\r\n    DONE: { value: 4, enumerable: true }\r\n  });\r\n  Object.defineProperties(XMLHttpRequest, {\r\n    UNSENT: { value: 0, enumerable: true },\r\n    OPENED: { value: 1, enumerable: true },\r\n    HEADERS_RECEIVED: { value: 2, enumerable: true },\r\n    LOADING: { value: 3, enumerable: true },\r\n    DONE: { value: 4, enumerable: true }\r\n  });\r\n  if (globalObject[ctorRegistrySymbol] === undefined) {\r\n    globalObject[ctorRegistrySymbol] = Object.create(null);\r\n  }\r\n  globalObject[ctorRegistrySymbol][interfaceName] = XMLHttpRequest;\r\n\r\n  Object.defineProperty(globalObject, interfaceName, {\r\n    configurable: true,\r\n    writable: true,\r\n    value: XMLHttpRequest\r\n  });\r\n};\r\n\r\nconst Impl = require(\"../xhr/XMLHttpRequest-impl.js\");\r\n"]},"metadata":{},"sourceType":"script"}