{"ast":null,"code":"//.CommonJS\nvar CSSOM = {}; ///CommonJS\n\n/**\r\n * @constructor\r\n * @see https://developer.mozilla.org/en/CSS/@-moz-document\r\n */\n\nCSSOM.MatcherList = function MatcherList() {\n  this.length = 0;\n};\n\nCSSOM.MatcherList.prototype = {\n  constructor: CSSOM.MatcherList,\n\n  /**\r\n   * @return {string}\r\n   */\n  get matcherText() {\n    return Array.prototype.join.call(this, \", \");\n  },\n\n  /**\r\n   * @param {string} value\r\n   */\n  set matcherText(value) {\n    // just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','.\n    var values = value.split(\",\");\n    var length = this.length = values.length;\n\n    for (var i = 0; i < length; i++) {\n      this[i] = values[i].trim();\n    }\n  },\n\n  /**\r\n   * @param {string} matcher\r\n   */\n  appendMatcher: function (matcher) {\n    if (Array.prototype.indexOf.call(this, matcher) === -1) {\n      this[this.length] = matcher;\n      this.length++;\n    }\n  },\n\n  /**\r\n   * @param {string} matcher\r\n   */\n  deleteMatcher: function (matcher) {\n    var index = Array.prototype.indexOf.call(this, matcher);\n\n    if (index !== -1) {\n      Array.prototype.splice.call(this, index, 1);\n    }\n  }\n}; //.CommonJS\n\nexports.MatcherList = CSSOM.MatcherList; ///CommonJS","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/cssom/lib/MatcherList.js"],"names":["CSSOM","MatcherList","length","prototype","constructor","matcherText","Array","join","call","value","values","split","i","trim","appendMatcher","matcher","indexOf","deleteMatcher","index","splice","exports"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG,EAAZ,C,CACA;;AAGA;AACA;AACA;AACA;;AACAA,KAAK,CAACC,WAAN,GAAoB,SAASA,WAAT,GAAsB;AACtC,OAAKC,MAAL,GAAc,CAAd;AACH,CAFD;;AAIAF,KAAK,CAACC,WAAN,CAAkBE,SAAlB,GAA8B;AAE1BC,EAAAA,WAAW,EAAEJ,KAAK,CAACC,WAFO;;AAI1B;AACJ;AACA;AACI,MAAII,WAAJ,GAAkB;AACd,WAAOC,KAAK,CAACH,SAAN,CAAgBI,IAAhB,CAAqBC,IAArB,CAA0B,IAA1B,EAAgC,IAAhC,CAAP;AACH,GATyB;;AAW1B;AACJ;AACA;AACI,MAAIH,WAAJ,CAAgBI,KAAhB,EAAuB;AACnB;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAb;AACA,QAAIT,MAAM,GAAG,KAAKA,MAAL,GAAcQ,MAAM,CAACR,MAAlC;;AACA,SAAK,IAAIU,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACV,MAAhB,EAAwBU,CAAC,EAAzB,EAA6B;AACzB,WAAKA,CAAL,IAAUF,MAAM,CAACE,CAAD,CAAN,CAAUC,IAAV,EAAV;AACH;AACJ,GArByB;;AAuB1B;AACJ;AACA;AACIC,EAAAA,aAAa,EAAE,UAASC,OAAT,EAAkB;AAC7B,QAAIT,KAAK,CAACH,SAAN,CAAgBa,OAAhB,CAAwBR,IAAxB,CAA6B,IAA7B,EAAmCO,OAAnC,MAAgD,CAAC,CAArD,EAAwD;AACpD,WAAK,KAAKb,MAAV,IAAoBa,OAApB;AACA,WAAKb,MAAL;AACH;AACJ,GA/ByB;;AAiC1B;AACJ;AACA;AACIe,EAAAA,aAAa,EAAE,UAASF,OAAT,EAAkB;AAC7B,QAAIG,KAAK,GAAGZ,KAAK,CAACH,SAAN,CAAgBa,OAAhB,CAAwBR,IAAxB,CAA6B,IAA7B,EAAmCO,OAAnC,CAAZ;;AACA,QAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,KAAK,CAACH,SAAN,CAAgBgB,MAAhB,CAAuBX,IAAvB,CAA4B,IAA5B,EAAkCU,KAAlC,EAAyC,CAAzC;AACH;AACJ;AAzCyB,CAA9B,C,CA8CA;;AACAE,OAAO,CAACnB,WAAR,GAAsBD,KAAK,CAACC,WAA5B,C,CACA","sourcesContent":["//.CommonJS\r\nvar CSSOM = {};\r\n///CommonJS\r\n\r\n\r\n/**\r\n * @constructor\r\n * @see https://developer.mozilla.org/en/CSS/@-moz-document\r\n */\r\nCSSOM.MatcherList = function MatcherList(){\r\n    this.length = 0;\r\n};\r\n\r\nCSSOM.MatcherList.prototype = {\r\n\r\n    constructor: CSSOM.MatcherList,\r\n\r\n    /**\r\n     * @return {string}\r\n     */\r\n    get matcherText() {\r\n        return Array.prototype.join.call(this, \", \");\r\n    },\r\n\r\n    /**\r\n     * @param {string} value\r\n     */\r\n    set matcherText(value) {\r\n        // just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','.\r\n        var values = value.split(\",\");\r\n        var length = this.length = values.length;\r\n        for (var i=0; i<length; i++) {\r\n            this[i] = values[i].trim();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @param {string} matcher\r\n     */\r\n    appendMatcher: function(matcher) {\r\n        if (Array.prototype.indexOf.call(this, matcher) === -1) {\r\n            this[this.length] = matcher;\r\n            this.length++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * @param {string} matcher\r\n     */\r\n    deleteMatcher: function(matcher) {\r\n        var index = Array.prototype.indexOf.call(this, matcher);\r\n        if (index !== -1) {\r\n            Array.prototype.splice.call(this, index, 1);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n//.CommonJS\r\nexports.MatcherList = CSSOM.MatcherList;\r\n///CommonJS\r\n"]},"metadata":{},"sourceType":"script"}