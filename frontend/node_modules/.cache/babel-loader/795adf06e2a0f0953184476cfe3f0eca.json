{"ast":null,"code":"\"use strict\";\n\nconst FocusEvent = require(\"../generated/FocusEvent.js\");\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst {\n  isDisabled\n} = require(\"./form-controls.js\");\n\nconst {\n  firstChildWithLocalName\n} = require(\"./traversal\");\n\nconst {\n  createAnEvent\n} = require(\"./events\");\n\nconst {\n  HTML_NS,\n  SVG_NS\n} = require(\"./namespaces\");\n\nconst {\n  isRenderedElement\n} = require(\"./svg/render\");\n\nconst focusableFormElements = new Set([\"input\", \"select\", \"textarea\", \"button\"]); // https://html.spec.whatwg.org/multipage/interaction.html#focusable-area, but also some of\n// https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps and some of\n// https://svgwg.org/svg2-draft/interact.html#TermFocusable\n\nexports.isFocusableAreaElement = elImpl => {\n  // We implemented most of the suggested focusable elements found here:\n  // https://html.spec.whatwg.org/multipage/interaction.html#tabindex-value\n  // However, some suggested elements are not focusable in web browsers, as detailed here:\n  // https://github.com/whatwg/html/issues/5490\n  if (elImpl._namespaceURI === HTML_NS) {\n    if (!elImpl._ownerDocument._defaultView) {\n      return false;\n    }\n\n    if (!elImpl.isConnected) {\n      return false;\n    }\n\n    if (!Number.isNaN(parseInt(elImpl.getAttributeNS(null, \"tabindex\")))) {\n      return true;\n    }\n\n    if (elImpl._localName === \"iframe\") {\n      return true;\n    }\n\n    if (elImpl._localName === \"a\" && elImpl.hasAttributeNS(null, \"href\")) {\n      return true;\n    }\n\n    if (elImpl._localName === \"summary\" && elImpl.parentNode && elImpl.parentNode._localName === \"details\" && elImpl === firstChildWithLocalName(elImpl.parentNode, \"summary\")) {\n      return true;\n    }\n\n    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {\n      if (elImpl._localName === \"input\" && elImpl.type === \"hidden\") {\n        return false;\n      }\n\n      return true;\n    }\n\n    if (elImpl.hasAttributeNS(null, \"contenteditable\")) {\n      return true;\n    }\n\n    return false; // This does not check for a designMode Document as specified in\n    // https://html.spec.whatwg.org/multipage/interaction.html#editing-host because the designMode\n    // attribute is not implemented.\n  }\n\n  if (elImpl._namespaceURI === SVG_NS) {\n    if (!Number.isNaN(parseInt(elImpl.getAttributeNS(null, \"tabindex\"))) && isRenderedElement(elImpl)) {\n      return true;\n    }\n\n    if (elImpl._localName === \"a\" && elImpl.hasAttributeNS(null, \"href\")) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}; // https://html.spec.whatwg.org/multipage/interaction.html#fire-a-focus-event plus the steps of\n// https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps that adjust Documents to Windows\n// It's extended with the bubbles option to also handle focusin/focusout, which are \"defined\" in\n// https://w3c.github.io/uievents/#event-type-focusin. See https://github.com/whatwg/html/issues/3514.\n\n\nexports.fireFocusEventWithTargetAdjustment = (name, target, relatedTarget, {\n  bubbles = false\n} = {}) => {\n  if (target === null) {\n    // E.g. firing blur with nothing previously focused.\n    return;\n  }\n\n  const event = createAnEvent(name, target._globalObject, FocusEvent, {\n    bubbles,\n    composed: true,\n    relatedTarget,\n    view: target._ownerDocument._defaultView,\n    detail: 0\n  });\n\n  if (target._defaultView) {\n    target = idlUtils.implForWrapper(target._defaultView);\n  }\n\n  target._dispatch(event);\n};","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/helpers/focusing.js"],"names":["FocusEvent","require","idlUtils","isDisabled","firstChildWithLocalName","createAnEvent","HTML_NS","SVG_NS","isRenderedElement","focusableFormElements","Set","exports","isFocusableAreaElement","elImpl","_namespaceURI","_ownerDocument","_defaultView","isConnected","Number","isNaN","parseInt","getAttributeNS","_localName","hasAttributeNS","parentNode","has","type","fireFocusEventWithTargetAdjustment","name","target","relatedTarget","bubbles","event","_globalObject","composed","view","detail","implForWrapper","_dispatch"],"mappings":"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","sourcesContent":["\"use strict\";\r\nconst FocusEvent = require(\"../generated/FocusEvent.js\");\r\nconst idlUtils = require(\"../generated/utils.js\");\r\nconst { isDisabled } = require(\"./form-controls.js\");\r\nconst { firstChildWithLocalName } = require(\"./traversal\");\r\nconst { createAnEvent } = require(\"./events\");\r\nconst { HTML_NS, SVG_NS } = require(\"./namespaces\");\r\nconst { isRenderedElement } = require(\"./svg/render\");\r\n\r\nconst focusableFormElements = new Set([\"input\", \"select\", \"textarea\", \"button\"]);\r\n\r\n// https://html.spec.whatwg.org/multipage/interaction.html#focusable-area, but also some of\r\n// https://html.spec.whatwg.org/multipage/interaction.html#focusing-steps and some of\r\n// https://svgwg.org/svg2-draft/interact.html#TermFocusable\r\nexports.isFocusableAreaElement = elImpl => {\r\n  // We implemented most of the suggested focusable elements found here:\r\n  // https://html.spec.whatwg.org/multipage/interaction.html#tabindex-value\r\n  // However, some suggested elements are not focusable in web browsers, as detailed here:\r\n  // https://github.com/whatwg/html/issues/5490\r\n  if (elImpl._namespaceURI === HTML_NS) {\r\n    if (!elImpl._ownerDocument._defaultView) {\r\n      return false;\r\n    }\r\n\r\n    if (!elImpl.isConnected) {\r\n      return false;\r\n    }\r\n\r\n    if (!Number.isNaN(parseInt(elImpl.getAttributeNS(null, \"tabindex\")))) {\r\n      return true;\r\n    }\r\n\r\n    if (elImpl._localName === \"iframe\") {\r\n      return true;\r\n    }\r\n\r\n    if (elImpl._localName === \"a\" && elImpl.hasAttributeNS(null, \"href\")) {\r\n      return true;\r\n    }\r\n\r\n    if (elImpl._localName === \"summary\" && elImpl.parentNode &&\r\n        elImpl.parentNode._localName === \"details\" &&\r\n        elImpl === firstChildWithLocalName(elImpl.parentNode, \"summary\")) {\r\n      return true;\r\n    }\r\n\r\n    if (focusableFormElements.has(elImpl._localName) && !isDisabled(elImpl)) {\r\n      if (elImpl._localName === \"input\" && elImpl.type === \"hidden\") {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (elImpl.hasAttributeNS(null, \"contenteditable\")) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n\r\n    // This does not check for a designMode Document as specified in\r\n    // https://html.spec.whatwg.org/multipage/interaction.html#editing-host because the designMode\r\n    // attribute is not implemented.\r\n  }\r\n\r\n  if (elImpl._namespaceURI === SVG_NS) {\r\n    if (!Number.isNaN(parseInt(elImpl.getAttributeNS(null, \"tabindex\"))) && isRenderedElement(elImpl)) {\r\n      return true;\r\n    }\r\n\r\n    if (elImpl._localName === \"a\" && elImpl.hasAttributeNS(null, \"href\")) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// https://html.spec.whatwg.org/multipage/interaction.html#fire-a-focus-event plus the steps of\r\n// https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps that adjust Documents to Windows\r\n// It's extended with the bubbles option to also handle focusin/focusout, which are \"defined\" in\r\n// https://w3c.github.io/uievents/#event-type-focusin. See https://github.com/whatwg/html/issues/3514.\r\nexports.fireFocusEventWithTargetAdjustment = (name, target, relatedTarget, { bubbles = false } = {}) => {\r\n  if (target === null) {\r\n    // E.g. firing blur with nothing previously focused.\r\n    return;\r\n  }\r\n\r\n  const event = createAnEvent(name, target._globalObject, FocusEvent, {\r\n    bubbles,\r\n    composed: true,\r\n    relatedTarget,\r\n    view: target._ownerDocument._defaultView,\r\n    detail: 0\r\n  });\r\n\r\n  if (target._defaultView) {\r\n    target = idlUtils.implForWrapper(target._defaultView);\r\n  }\r\n\r\n  target._dispatch(event);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}