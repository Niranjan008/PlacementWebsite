{"ast":null,"code":"var crf = require('./cmap-reader-factory.js');\n\nvar pdfJs = require('./pdf.js');\n\npdfJs.PDFJS.workerSrc = './pdf.worker.js';\npdfJs.PDFJS.disableWorker = false;\npdfJs.PDFJS.cMapUrl = __dirname + '/../lib/cmaps/';\npdfJs.PDFJS.cMapPacked = true;\n\nfunction timeoutCallbackWrapper(callback, timeout) {\n  if (!timeout) {\n    timeout = 10000;\n  }\n\n  var isCalled = false;\n  var timer = setTimeout(() => {\n    if (!isCalled) {\n      callback(null, new Error('timeout after ' + timeout + ' ms'));\n      isCalled = true;\n    }\n  }, timeout);\n  return (err, result) => {\n    if (!isCalled) {\n      isCalled = true;\n      clearTimeout(timer);\n      return callback(result, err);\n    }\n  };\n}\n\nfunction composePdfSource(src) {\n  var source;\n\n  if (typeof src === 'string') {\n    source = {\n      url: src\n    };\n  } else if (src && src.byteLength !== undefined) {\n    source = {\n      data: src\n    };\n  } else if (src instanceof pdfJs.PDFDataRangeTransport) {\n    source = {\n      range: src\n    };\n  }\n\n  return source && Object.assign(source, {\n    CMapReaderFactory: crf\n  });\n}\n\nfunction pdf2json(pdfPath, callback) {\n  // wrap callback to ensure one-off and set timeout\n  var callback = timeoutCallbackWrapper(callback);\n  pdfJs.getDocument(composePdfSource(pdfPath)).then(document => {\n    var pdf = {\n      pages: []\n    };\n\n    for (var i = 1; i <= document.pdfInfo.numPages; i++) {\n      document.getPage(i).then(documentPage => {\n        var page = {\n          width: documentPage.pageInfo.view[2],\n          height: documentPage.pageInfo.view[3],\n          pageId: -1,\n          texts: []\n        };\n        documentPage.getTextContent().then(textContent => {\n          if (textContent.items.length != 0) {\n            page.pageId = parseInt(textContent.items[0].pageId);\n          }\n\n          page.texts = textContent.items.filter(item => item.str != null && item.str != \"\").map(item => ({\n            text: item.str,\n            direction: item.dir,\n            width: item.width,\n            height: item.height,\n            top: item.transform[5],\n            left: item.transform[4],\n            transform: item.transform,\n            fontSize: item.transform[0],\n            fontName: item.fontName,\n            fontOriginName: item.fontOriginName,\n            bold: item.bold,\n            italic: item.italic,\n            black: item.black,\n            color: '[' + item.color[0] + \",\" + item.color[1] + \",\" + item.color[2] + ']'\n          }));\n        }).then(() => {\n          pdf.pages.push(page); // callback result when pages is fullfilled\n\n          if (pdf.pages.length === document.pdfInfo.numPages) {\n            callback(pdf, null);\n          }\n        }).catch(error => {\n          // error in getTextContent promise chain\n          callback(null, error);\n        });\n      }).catch(error => {\n        // error in getPage promise\n        callback(null, error);\n      });\n    }\n  }).catch(error => {\n    // error in getDocument promise chain\n    callback(null, error);\n  });\n}\n\n;\nexports.pdf2json = pdf2json;","map":{"version":3,"sources":["C:/Users/NIRANJAN/pweb/frontend/node_modules/pdf-parser/lib/pdf2json.js"],"names":["crf","require","pdfJs","PDFJS","workerSrc","disableWorker","cMapUrl","__dirname","cMapPacked","timeoutCallbackWrapper","callback","timeout","isCalled","timer","setTimeout","Error","err","result","clearTimeout","composePdfSource","src","source","url","byteLength","undefined","data","PDFDataRangeTransport","range","Object","assign","CMapReaderFactory","pdf2json","pdfPath","getDocument","then","document","pdf","pages","i","pdfInfo","numPages","getPage","documentPage","page","width","pageInfo","view","height","pageId","texts","getTextContent","textContent","items","length","parseInt","filter","item","str","map","text","direction","dir","top","transform","left","fontSize","fontName","fontOriginName","bold","italic","black","color","push","catch","error","exports"],"mappings":"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","sourcesContent":["var crf = require('./cmap-reader-factory.js');\r\nvar pdfJs = require('./pdf.js');\r\npdfJs.PDFJS.workerSrc = './pdf.worker.js';\r\npdfJs.PDFJS.disableWorker = false;\r\n\r\npdfJs.PDFJS.cMapUrl = __dirname + '/../lib/cmaps/';\r\npdfJs.PDFJS.cMapPacked = true;\r\n\r\nfunction timeoutCallbackWrapper(callback, timeout) {\r\n    if(!timeout){\r\n        timeout = 10000;\r\n    }\r\n    var isCalled = false;\r\n    var timer = setTimeout(() => {\r\n        if (!isCalled) {\r\n            callback(null, new Error('timeout after ' + timeout + ' ms'));\r\n            isCalled = true;\r\n        }\r\n    }, timeout);\r\n    return (err, result) => {\r\n        if (!isCalled) {\r\n            isCalled = true;\r\n            clearTimeout(timer);\r\n            return callback(result, err);\r\n        }\r\n    };\r\n}\r\n\r\nfunction composePdfSource(src) {\r\n    var source;\r\n    if (typeof src === 'string') {\r\n        source = { url: src };\r\n    } else if (src && src.byteLength !== undefined) {\r\n        source = { data: src };\r\n    } else if (src instanceof pdfJs.PDFDataRangeTransport) {\r\n        source = { range: src };\r\n    }\r\n\r\n    return source && Object.assign(\r\n        source,\r\n        {CMapReaderFactory: crf}\r\n    );\r\n}\r\n\r\nfunction pdf2json(pdfPath, callback) {\r\n    // wrap callback to ensure one-off and set timeout\r\n    var callback = timeoutCallbackWrapper(callback);\r\n\r\n    pdfJs.getDocument(\r\n        composePdfSource(pdfPath)\r\n    ).then((document) => {\r\n        var pdf = {pages: []};\r\n        for (var i = 1; i <= document.pdfInfo.numPages; i++) {\r\n            document.getPage(i).then(documentPage => {\r\n                var page = {\r\n                    width: documentPage.pageInfo.view[2],\r\n                    height: documentPage.pageInfo.view[3],\r\n                    pageId: -1,\r\n                    texts: [],\r\n                };\r\n                documentPage.getTextContent().then(textContent => {\r\n                    if (textContent.items.length != 0) {\r\n                        page.pageId = parseInt(textContent.items[0].pageId);\r\n                    }\r\n                    page.texts = textContent.items\r\n                        .filter(item => item.str != null && item.str != \"\")\r\n                        .map(item => ({\r\n                            text: item.str,\r\n                            direction: item.dir,\r\n                            width: item.width,\r\n                            height: item.height,\r\n                            top: item.transform[5],\r\n                            left: item.transform[4],\r\n                            transform: item.transform,\r\n                            fontSize: item.transform[0],\r\n                            fontName: item.fontName,\r\n                            fontOriginName: item.fontOriginName,\r\n                            bold: item.bold,\r\n                            italic: item.italic,\r\n                            black: item.black,\r\n                            color: '[' + item.color[0] + \",\" + item.color[1] + \",\" + item.color[2] + ']'\r\n                        }));\r\n                }).then(() => {\r\n                    pdf.pages.push(page);\r\n                    // callback result when pages is fullfilled\r\n                    if (pdf.pages.length === document.pdfInfo.numPages) {\r\n                        callback(pdf, null)\r\n                    }\r\n                }).catch((error) => {\r\n                    // error in getTextContent promise chain\r\n                    callback(null, error);\r\n                });\r\n            }).catch((error) => {\r\n                // error in getPage promise\r\n                callback(null, error);\r\n            });\r\n        }\r\n    }).catch((error) => {\r\n        // error in getDocument promise chain\r\n        callback(null, error);\r\n    });\r\n};\r\n\r\nexports.pdf2json = pdf2json;\r\n"]},"metadata":{},"sourceType":"script"}