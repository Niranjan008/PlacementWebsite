{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NIRANJAN\\\\pweb\\\\frontend\\\\src\\\\AdminVerify.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst localStorage = require('local-storage');\n\nconst pdflib = require('pdf-parse');\n\nclass AdminVerify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dets: []\n    };\n  }\n\n  componentDidMount() {\n    var self = this;\n    axios.get('http://localhost:4000/api/experiences/get-pending-approvals', {\n      headers: {\n        Authorization: localStorage.get('authtoken')\n      }\n    }).then(function (response) {\n      self.setState({\n        dets: response.data.message\n      });\n    });\n  }\n\n  render() {\n    const {\n      dets\n    } = this.state;\n\n    if (dets.length == 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hold Up!Data is loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    } //console.log(dets[0].experiencefile.data.data)\n\n\n    pdf(dets[0].experiencefile.data.data).then(function (data) {\n      console.log(data.text);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AdminVerify;","map":{"version":3,"sources":["C:/Users/NIRANJAN/pweb/frontend/src/AdminVerify.js"],"names":["React","Component","axios","require","localStorage","pdflib","AdminVerify","constructor","state","dets","componentDidMount","self","get","headers","Authorization","then","response","setState","data","message","render","length","pdf","experiencefile","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMG,WAAN,SAA0BL,SAA1B,CAAmC;AAC/BM,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC;AADI,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,IAAI,GAAG,IAAX;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,6DAAV,EAAwE;AAACC,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAEV,YAAY,CAACQ,GAAb,CAAiB,WAAjB;AAAhB;AAAT,KAAxE,EAAkIG,IAAlI,CAAuI,UAAUC,QAAV,EAAoB;AACvJL,MAAAA,IAAI,CAACM,QAAL,CAAc;AAACR,QAAAA,IAAI,EAACO,QAAQ,CAACE,IAAT,CAAcC;AAApB,OAAd;AACH,KAFD;AAGH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACX,MAAAA;AAAD,QAAS,KAAKD,KAApB;;AACA,QAAGC,IAAI,CAACY,MAAL,IAAe,CAAlB,EAAoB;AAChB,0BAAO;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAJG,CAKJ;;;AACAC,IAAAA,GAAG,CAACb,IAAI,CAAC,CAAD,CAAJ,CAAQc,cAAR,CAAuBL,IAAvB,CAA4BA,IAA7B,CAAH,CAAsCH,IAAtC,CAA2C,UAASG,IAAT,EAAc;AACrDM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,IAAjB;AACH,KAFD;AAGA,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA7B8B;;AAgCnC,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nconst axios = require('axios');\r\nconst localStorage = require('local-storage')\r\nconst pdflib = require('pdf-parse')\r\nclass AdminVerify extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            dets:[]\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        var self = this\r\n        axios.get('http://localhost:4000/api/experiences/get-pending-approvals',{headers:{Authorization: localStorage.get('authtoken')}}).then(function (response) {\r\n            self.setState({dets:response.data.message})\r\n        })\r\n    }\r\n    render(){\r\n        const {dets} = this.state;\r\n        if(dets.length == 0){\r\n            return <div><p>Hold Up!Data is loading</p></div>\r\n        }\r\n        //console.log(dets[0].experiencefile.data.data)\r\n        pdf(dets[0].experiencefile.data.data).then(function(data){\r\n            console.log(data.text)\r\n        })\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        );\r\n        \r\n    }\r\n    \r\n}\r\nexport default AdminVerify;"]},"metadata":{},"sourceType":"module"}