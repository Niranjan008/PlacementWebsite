{"ast":null,"code":"\"use strict\";\n\nconst nodeTypes = require(\"../node-type\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\"); // Serialization only requires a subset of the tree adapter interface.\n// Tree traversing\n\n\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n\n  return attributeList;\n}; // Node data\n\n\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode; // Node types\n\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE; // Source code location\n\n\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/jsdom/lib/jsdom/living/domparsing/parse5-adapter-serialization.js"],"names":["nodeTypes","require","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childNodesForSerializing","childrenToArray","getParentNode","parentNode","getAttrList","element","attributeList","_attributeList","_isValue","every","attr","name","unshift","namespace","prefix","value","getTagName","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation"],"mappings":"AAAA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,+BAAD,CAAjC,C,CACA;AAEA;;;AACAE,OAAO,CAACC,aAAR,GAAwBC,IAAI,IAAIA,IAAI,CAACC,UAArC;;AAEAH,OAAO,CAACI,aAAR,GAAwBF,IAAI,IAAIA,IAAI,CAACG,wBAAL,IAAiCN,aAAa,CAACO,eAAd,CAA8BJ,IAA9B,CAAjE;;AAEAF,OAAO,CAACO,aAAR,GAAwBL,IAAI,IAAIA,IAAI,CAACM,UAArC;;AAEAR,OAAO,CAACS,WAAR,GAAsBC,OAAO,IAAI;AAC/B,QAAMC,aAAa,GAAG,CAAC,GAAGD,OAAO,CAACE,cAAZ,CAAtB;;AAEA,MAAIF,OAAO,CAACG,QAAR,IAAoBF,aAAa,CAACG,KAAd,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,IAA1C,CAAxB,EAAyE;AACvEL,IAAAA,aAAa,CAACM,OAAd,CAAsB;AACpBD,MAAAA,IAAI,EAAE,IADc;AAEpBE,MAAAA,SAAS,EAAE,IAFS;AAGpBC,MAAAA,MAAM,EAAE,IAHY;AAIpBC,MAAAA,KAAK,EAAEV,OAAO,CAACG;AAJK,KAAtB;AAMD;;AAED,SAAOF,aAAP;AACD,CAbD,C,CAeA;;;AACAX,OAAO,CAACqB,UAAR,GAAqBX,OAAO,IAAIA,OAAO,CAACY,cAAxC,C,CAAwD;;;AAExDtB,OAAO,CAACuB,eAAR,GAA0Bb,OAAO,IAAIA,OAAO,CAACc,YAA7C;;AAEAxB,OAAO,CAACyB,kBAAR,GAA6BzB,OAAO,CAAC0B,qBAAR,GAAgCxB,IAAI,IAAIA,IAAI,CAACyB,IAA1E;;AAEA3B,OAAO,CAAC4B,uBAAR,GAAkC1B,IAAI,IAAIA,IAAI,CAACc,IAA/C;;AAEAhB,OAAO,CAAC6B,2BAAR,GAAsC3B,IAAI,IAAIA,IAAI,CAAC4B,QAAnD;;AAEA9B,OAAO,CAAC+B,2BAAR,GAAsC7B,IAAI,IAAIA,IAAI,CAAC8B,QAAnD;;AAEAhC,OAAO,CAACiC,kBAAR,GAA6BC,eAAe,IAAIA,eAAe,CAACC,iBAAhE;;AAEAnC,OAAO,CAACoC,eAAR,GAA0BC,QAAQ,IAAIA,QAAQ,CAACC,KAA/C,C,CAEA;;;AACAtC,OAAO,CAACuC,UAAR,GAAqBrC,IAAI,IAAIA,IAAI,CAACsC,QAAL,KAAkB3C,SAAS,CAAC4C,SAAzD;;AAEAzC,OAAO,CAAC0C,aAAR,GAAwBxC,IAAI,IAAIA,IAAI,CAACsC,QAAL,KAAkB3C,SAAS,CAAC8C,YAA5D;;AAEA3C,OAAO,CAAC4C,kBAAR,GAA6B1C,IAAI,IAAIA,IAAI,CAACsC,QAAL,KAAkB3C,SAAS,CAACgD,kBAAjE;;AAEA7C,OAAO,CAAC8C,aAAR,GAAwB5C,IAAI,IAAIA,IAAI,CAACsC,QAAL,KAAkB3C,SAAS,CAACkD,YAA5D,C,CAEA;;;AACA/C,OAAO,CAACgD,yBAAR,GAAoC,CAAC9C,IAAD,EAAO+C,QAAP,KAAoB;AACtD/C,EAAAA,IAAI,CAACgD,kBAAL,GAA0BD,QAA1B;AACD,CAFD;;AAIAjD,OAAO,CAACmD,yBAAR,GAAoCjD,IAAI,IAAIA,IAAI,CAACgD,kBAAjD","sourcesContent":["\"use strict\";\r\nconst nodeTypes = require(\"../node-type\");\r\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\r\n// Serialization only requires a subset of the tree adapter interface.\r\n\r\n// Tree traversing\r\nexports.getFirstChild = node => node.firstChild;\r\n\r\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\r\n\r\nexports.getParentNode = node => node.parentNode;\r\n\r\nexports.getAttrList = element => {\r\n  const attributeList = [...element._attributeList];\r\n\r\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\r\n    attributeList.unshift({\r\n      name: \"is\",\r\n      namespace: null,\r\n      prefix: null,\r\n      value: element._isValue\r\n    });\r\n  }\r\n\r\n  return attributeList;\r\n};\r\n\r\n// Node data\r\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\r\n\r\nexports.getNamespaceURI = element => element.namespaceURI;\r\n\r\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\r\n\r\nexports.getDocumentTypeNodeName = node => node.name;\r\n\r\nexports.getDocumentTypeNodePublicId = node => node.publicId;\r\n\r\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\r\n\r\nexports.getTemplateContent = templateElement => templateElement._templateContents;\r\n\r\nexports.getDocumentMode = document => document._mode;\r\n\r\n// Node types\r\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\r\n\r\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\r\n\r\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\r\n\r\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\r\n\r\n// Source code location\r\nexports.setNodeSourceCodeLocation = (node, location) => {\r\n  node.sourceCodeLocation = location;\r\n};\r\n\r\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\r\n"]},"metadata":{},"sourceType":"script"}