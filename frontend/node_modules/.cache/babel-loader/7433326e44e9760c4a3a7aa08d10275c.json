{"ast":null,"code":"\"use strict\";\n\nconst {\n  hrtime\n} = require(\"./utils\"); // The HR-TIME spec calls for 5-μs accuracy. Check that we have that in both hrtime() and Date.now().\n\n\nfunction testClockAccuracy() {\n  // Test hrtime() first. The check is simpler and more stable, and we use hrtime() to measure Date.now()'s performance.\n  const roundTrip = hrtime(hrtime());\n\n  if (roundTrip[0] > 1 || roundTrip[1] > 5e3 * 2) {\n    return false;\n  } // Test Date.now() twice: first with a looser bound (10 μs) but with a smaller run time to filter out very bad\n  // Date.now() performance, and then with a tighter bound (5 μs) to check we have the accuracy we need.\n\n\n  let times; // eslint-disable-next-line no-unused-vars\n\n  let cur;\n  let start;\n  let end;\n  times = 100;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 1000000) {\n    return false;\n  }\n\n  times = 10000;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 50000000) {\n    return false;\n  }\n\n  return true;\n} // Warm up the function.\n\n\ntestClockAccuracy();\ntestClockAccuracy();\ntestClockAccuracy();\nconst TIMES = 5;\nconst THRESHOLD = 0.6 * TIMES;\nlet accurates = 0;\n\nfor (let i = 0; i < TIMES; i++) {\n  if (testClockAccuracy()) {\n    accurates++;\n  }\n}\n\nconst isAccurate = accurates >= THRESHOLD;\nmodule.exports = isAccurate;","map":{"version":3,"sources":["R:/Programs/CSEA Placements Website/kindergarten-website-template/placementWebsite/frontend/node_modules/w3c-hr-time/lib/clock-is-accurate.js"],"names":["hrtime","require","testClockAccuracy","roundTrip","times","cur","start","end","Date","now","TIMES","THRESHOLD","accurates","i","isAccurate","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B,C,CAEA;;;AAEA,SAASC,iBAAT,GAA6B;AAC3B;AACA,QAAMC,SAAS,GAAGH,MAAM,CAACA,MAAM,EAAP,CAAxB;;AACA,MAAIG,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,IAAoBA,SAAS,CAAC,CAAD,CAAT,GAAe,MAAM,CAA7C,EAAgD;AAC9C,WAAO,KAAP;AACD,GAL0B,CAO3B;AACA;;;AACA,MAAIC,KAAJ,CAT2B,CAU3B;;AACA,MAAIC,GAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,GAAJ;AAEAH,EAAAA,KAAK,GAAG,GAAR;AACAE,EAAAA,KAAK,GAAGN,MAAM,EAAd;;AACA,SAAOI,KAAK,KAAK,CAAjB,EAAoB;AAClBC,IAAAA,GAAG,GAAGG,IAAI,CAACC,GAAL,EAAN;AACD;;AACDF,EAAAA,GAAG,GAAGP,MAAM,CAACM,KAAD,CAAZ;;AACA,MAAKC,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAAnB,GAA0B,OAA9B,EAAuC;AACrC,WAAO,KAAP;AACD;;AAEDH,EAAAA,KAAK,GAAG,KAAR;AACAE,EAAAA,KAAK,GAAGN,MAAM,EAAd;;AACA,SAAOI,KAAK,KAAK,CAAjB,EAAoB;AAClBC,IAAAA,GAAG,GAAGG,IAAI,CAACC,GAAL,EAAN;AACD;;AACDF,EAAAA,GAAG,GAAGP,MAAM,CAACM,KAAD,CAAZ;;AACA,MAAKC,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAAnB,GAA0B,QAA9B,EAAwC;AACtC,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,C,CAED;;;AACAL,iBAAiB;AACjBA,iBAAiB;AACjBA,iBAAiB;AAEjB,MAAMQ,KAAK,GAAG,CAAd;AACA,MAAMC,SAAS,GAAG,MAAMD,KAAxB;AACA,IAAIE,SAAS,GAAG,CAAhB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9B,MAAIX,iBAAiB,EAArB,EAAyB;AACvBU,IAAAA,SAAS;AACV;AACF;;AAED,MAAME,UAAU,GAAGF,SAAS,IAAID,SAAhC;AAEAI,MAAM,CAACC,OAAP,GAAiBF,UAAjB","sourcesContent":["\"use strict\";\r\n\r\nconst { hrtime } = require(\"./utils\");\r\n\r\n// The HR-TIME spec calls for 5-μs accuracy. Check that we have that in both hrtime() and Date.now().\r\n\r\nfunction testClockAccuracy() {\r\n  // Test hrtime() first. The check is simpler and more stable, and we use hrtime() to measure Date.now()'s performance.\r\n  const roundTrip = hrtime(hrtime());\r\n  if (roundTrip[0] > 1 || roundTrip[1] > 5e3 * 2) {\r\n    return false;\r\n  }\r\n\r\n  // Test Date.now() twice: first with a looser bound (10 μs) but with a smaller run time to filter out very bad\r\n  // Date.now() performance, and then with a tighter bound (5 μs) to check we have the accuracy we need.\r\n  let times;\r\n  // eslint-disable-next-line no-unused-vars\r\n  let cur;\r\n  let start;\r\n  let end;\r\n\r\n  times = 100;\r\n  start = hrtime();\r\n  while (times-- > 0) {\r\n    cur = Date.now();\r\n  }\r\n  end = hrtime(start);\r\n  if ((end[0] * 1e9 + end[1]) > 1000000) {\r\n    return false;\r\n  }\r\n\r\n  times = 10000;\r\n  start = hrtime();\r\n  while (times-- > 0) {\r\n    cur = Date.now();\r\n  }\r\n  end = hrtime(start);\r\n  if ((end[0] * 1e9 + end[1]) > 50000000) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Warm up the function.\r\ntestClockAccuracy();\r\ntestClockAccuracy();\r\ntestClockAccuracy();\r\n\r\nconst TIMES = 5;\r\nconst THRESHOLD = 0.6 * TIMES;\r\nlet accurates = 0;\r\nfor (let i = 0; i < TIMES; i++) {\r\n  if (testClockAccuracy()) {\r\n    accurates++;\r\n  }\r\n}\r\n\r\nconst isAccurate = accurates >= THRESHOLD;\r\n\r\nmodule.exports = isAccurate;\r\n"]},"metadata":{},"sourceType":"script"}